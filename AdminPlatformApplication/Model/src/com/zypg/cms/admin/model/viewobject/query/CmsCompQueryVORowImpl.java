package com.zypg.cms.admin.model.viewobject.query;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 20 22:03:20 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsCompQueryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CompCode {
            public Object get(CmsCompQueryVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsCompQueryVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        CompName {
            public Object get(CmsCompQueryVORowImpl obj) {
                return obj.getCompName();
            }

            public void put(CmsCompQueryVORowImpl obj, Object value) {
                obj.setCompName((String)value);
            }
        }
        ,
        GroupFlag {
            public Object get(CmsCompQueryVORowImpl obj) {
                return obj.getGroupFlag();
            }

            public void put(CmsCompQueryVORowImpl obj, Object value) {
                obj.setGroupFlag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsCompQueryVORowImpl object);

        public abstract void put(CmsCompQueryVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int COMPNAME = AttributesEnum.CompName.index();
    public static final int GROUPFLAG = AttributesEnum.GroupFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsCompQueryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompName.
     * @return the CompName
     */
    public String getCompName() {
        return (String) getAttributeInternal(COMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompName.
     * @param value value to set the  CompName
     */
    public void setCompName(String value) {
        setAttributeInternal(COMPNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GroupFlag.
     * @return the GroupFlag
     */
    public String getGroupFlag() {
        return (String) getAttributeInternal(GROUPFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GroupFlag.
     * @param value value to set the  GroupFlag
     */
    public void setGroupFlag(String value) {
        setAttributeInternal(GROUPFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
