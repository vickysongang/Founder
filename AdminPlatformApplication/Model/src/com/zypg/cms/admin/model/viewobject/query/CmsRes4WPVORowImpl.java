package com.zypg.cms.admin.model.viewobject.query;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 16 18:14:20 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsRes4WPVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ResId {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getResId();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setResId((BigDecimal)value);
            }
        },
        ResCode {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getResCode();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setResCode((String)value);
            }
        },
        ResName {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getResName();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setResName((String)value);
            }
        },
        ResTypeCode {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getResTypeCode();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setResTypeCode((String)value);
            }
        },
        ResTypeName {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getResTypeName();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setResTypeName((String)value);
            }
        },
        LibCode {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        },
        ProcessFlag {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getProcessFlag();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setProcessFlag((String)value);
            }
        },
        IsSelected {
            public Object get(CmsRes4WPVORowImpl obj) {
                return obj.getIsSelected();
            }

            public void put(CmsRes4WPVORowImpl obj, Object value) {
                obj.setIsSelected((Boolean)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsRes4WPVORowImpl object);

        public abstract void put(CmsRes4WPVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RESID = AttributesEnum.ResId.index();
    public static final int RESCODE = AttributesEnum.ResCode.index();
    public static final int RESNAME = AttributesEnum.ResName.index();
    public static final int RESTYPECODE = AttributesEnum.ResTypeCode.index();
    public static final int RESTYPENAME = AttributesEnum.ResTypeName.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int PROCESSFLAG = AttributesEnum.ProcessFlag.index();
    public static final int ISSELECTED = AttributesEnum.IsSelected.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsRes4WPVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ResId.
     * @return the ResId
     */
    public BigDecimal getResId() {
        return (BigDecimal)getAttributeInternal(RESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResId.
     * @param value value to set the  ResId
     */
    public void setResId(BigDecimal value) {
        setAttributeInternal(RESID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResCode.
     * @return the ResCode
     */
    public String getResCode() {
        return (String)getAttributeInternal(RESCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResCode.
     * @param value value to set the  ResCode
     */
    public void setResCode(String value) {
        setAttributeInternal(RESCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResName.
     * @return the ResName
     */
    public String getResName() {
        return (String)getAttributeInternal(RESNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResName.
     * @param value value to set the  ResName
     */
    public void setResName(String value) {
        setAttributeInternal(RESNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeCode.
     * @return the ResTypeCode
     */
    public String getResTypeCode() {
        return (String)getAttributeInternal(RESTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeCode.
     * @param value value to set the  ResTypeCode
     */
    public void setResTypeCode(String value) {
        setAttributeInternal(RESTYPECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeName.
     * @return the ResTypeName
     */
    public String getResTypeName() {
        return (String)getAttributeInternal(RESTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeName.
     * @param value value to set the  ResTypeName
     */
    public void setResTypeName(String value) {
        setAttributeInternal(RESTYPENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String)getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProcessFlag.
     * @return the ProcessFlag
     */
    public String getProcessFlag() {
        return (String)getAttributeInternal(PROCESSFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProcessFlag.
     * @param value value to set the  ProcessFlag
     */
    public void setProcessFlag(String value) {
        setAttributeInternal(PROCESSFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IsSelected.
     * @return the IsSelected
     */
    public Boolean getIsSelected() {
//        System.out.println("getIsSelected--->");
        Boolean value = (Boolean)getAttributeInternal(ISSELECTED);
//        System.out.println("get------>"+value);
        return value == null ? false : value;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsSelected.
     * @param value value to set the  IsSelected
     */
    public void setIsSelected(Boolean value) {
       System.out.println("set------>"+value);
        if (value == null) {
            setAttributeInternal(ISSELECTED, false);
        } else {
            setAttributeInternal(ISSELECTED, value);
        }

    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
