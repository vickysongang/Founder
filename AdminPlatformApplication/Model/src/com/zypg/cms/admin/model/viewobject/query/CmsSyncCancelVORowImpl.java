package com.zypg.cms.admin.model.viewobject.query;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 14 16:36:04 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsSyncCancelVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        UniqueResName {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getUniqueResName();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setUniqueResName((String)value);
            }
        }
        ,
        StatusName {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getStatusName();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setStatusName((String)value);
            }
        }
        ,
        LibName {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getLibName();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setLibName((String)value);
            }
        }
        ,
        DiplayName {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getDiplayName();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setDiplayName((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setCreationDate((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        Checked {
            public Object get(CmsSyncCancelVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsSyncCancelVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsSyncCancelVORowImpl object);

        public abstract void put(CmsSyncCancelVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int UNIQUERESNAME = AttributesEnum.UniqueResName.index();
    public static final int STATUSNAME = AttributesEnum.StatusName.index();
    public static final int LIBNAME = AttributesEnum.LibName.index();
    public static final int DIPLAYNAME = AttributesEnum.DiplayName.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsSyncCancelVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UniqueResName.
     * @return the UniqueResName
     */
    public String getUniqueResName() {
        return (String) getAttributeInternal(UNIQUERESNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UniqueResName.
     * @param value value to set the  UniqueResName
     */
    public void setUniqueResName(String value) {
        setAttributeInternal(UNIQUERESNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatusName.
     * @return the StatusName
     */
    public String getStatusName() {
        return (String) getAttributeInternal(STATUSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatusName.
     * @param value value to set the  StatusName
     */
    public void setStatusName(String value) {
        setAttributeInternal(STATUSNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibName.
     * @return the LibName
     */
    public String getLibName() {
        return (String) getAttributeInternal(LIBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibName.
     * @param value value to set the  LibName
     */
    public void setLibName(String value) {
        setAttributeInternal(LIBNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiplayName.
     * @return the DiplayName
     */
    public String getDiplayName() {
        return (String) getAttributeInternal(DIPLAYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiplayName.
     * @param value value to set the  DiplayName
     */
    public void setDiplayName(String value) {
        setAttributeInternal(DIPLAYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDate.
     * @return the CreationDate
     */
    public String getCreationDate() {
        return (String) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate.
     * @param value value to set the  CreationDate
     */
    public void setCreationDate(String value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        return (Boolean) getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
