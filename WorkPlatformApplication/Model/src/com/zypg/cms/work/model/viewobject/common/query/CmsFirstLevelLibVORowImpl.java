package com.zypg.cms.work.model.viewobject.common.query;

import java.math.BigDecimal;

import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 26 21:04:34 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsFirstLevelLibVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LibCode {
            public Object get(CmsFirstLevelLibVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsFirstLevelLibVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        LibName {
            public Object get(CmsFirstLevelLibVORowImpl obj) {
                return obj.getLibName();
            }

            public void put(CmsFirstLevelLibVORowImpl obj, Object value) {
                obj.setLibName((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsFirstLevelLibVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsFirstLevelLibVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        UserId {
            public Object get(CmsFirstLevelLibVORowImpl obj) {
                return obj.getUserId();
            }

            public void put(CmsFirstLevelLibVORowImpl obj, Object value) {
                obj.setUserId((BigDecimal)value);
            }
        }
        ,
        Seq {
            public Object get(CmsFirstLevelLibVORowImpl obj) {
                return obj.getSeq();
            }

            public void put(CmsFirstLevelLibVORowImpl obj, Object value) {
                obj.setSeq((BigDecimal)value);
            }
        }
        ,
        CmsSecondLevelLibVO {
            public Object get(CmsFirstLevelLibVORowImpl obj) {
                return obj.getCmsSecondLevelLibVO();
            }

            public void put(CmsFirstLevelLibVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsFirstLevelLibVORowImpl object);

        public abstract void put(CmsFirstLevelLibVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int LIBNAME = AttributesEnum.LibName.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int SEQ = AttributesEnum.Seq.index();
    public static final int CMSSECONDLEVELLIBVO = AttributesEnum.CmsSecondLevelLibVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsFirstLevelLibVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibName.
     * @return the LibName
     */
    public String getLibName() {
        return (String) getAttributeInternal(LIBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibName.
     * @param value value to set the  LibName
     */
    public void setLibName(String value) {
        setAttributeInternal(LIBNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UserId.
     * @return the UserId
     */
    public BigDecimal getUserId() {
        return (BigDecimal) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UserId.
     * @param value value to set the  UserId
     */
    public void setUserId(BigDecimal value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Seq.
     * @return the Seq
     */
    public BigDecimal getSeq() {
        return (BigDecimal) getAttributeInternal(SEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Seq.
     * @param value value to set the  Seq
     */
    public void setSeq(BigDecimal value) {
        setAttributeInternal(SEQ, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CmsSecondLevelLibVO.
     */
    public RowIterator getCmsSecondLevelLibVO() {
        return (RowIterator)getAttributeInternal(CMSSECONDLEVELLIBVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
