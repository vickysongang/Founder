package com.zypg.cms.work.model.am;


import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.am.common.ActivityAM;
import com.zypg.cms.work.model.viewobject.activity.CmsActivityEditVOImpl;
import com.zypg.cms.work.model.viewobject.activity.CmsActivityEditVORowImpl;
import com.zypg.cms.work.model.viewobject.activity.CmsActivityTVOImpl;
import com.zypg.cms.work.model.viewobject.activity.CmsActivityTVORowImpl;
import com.zypg.cms.work.model.viewobject.activity.query.CmsActivityVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVORowImpl;

import com.zypg.cms.work.model.viewobject.common.CmsDocUcmRelTVOImpl;

import java.sql.SQLException;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 24 15:04:09 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ActivityAMImpl extends CustomApplicationModuleImpl implements ActivityAM {
    /**
     * This is the default constructor (do not remove).
     */
    public ActivityAMImpl() {
    }

    /**
     * Container's getter for CmsActivityVO.
     * @return CmsActivityVO
     */
    public CmsActivityVOImpl getCmsActivityVO() {
        return (CmsActivityVOImpl)findViewObject("CmsActivityVO");
    }

    /**
     * Container's getter for CmsDocTVO.
     * @return CmsDocTVO
     */
    public CmsDocTVOImpl getCmsDocTVO() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO");
    }

    public void initActivityEditVO() {
        CmsActivityEditVOImpl vo = this.getCmsActivityEditVO();
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public Number preEditActivity(String mode, Number docId, String compCode) {
        Number result = null;
        CmsActivityTVOImpl cmsActivityTVO = this.getCmsActivityTVO();
        if ("CREATE".equals(mode)) {
            CmsDocTVOImpl docVO = this.getCmsDocTVO();
            CmsDocTVORowImpl docNewRow = (CmsDocTVORowImpl)docVO.createRow();
            docNewRow.setStatus("TO_GATHER_ACTIVITY");
            docNewRow.setLibCode("ACTIVITY");
            docNewRow.setLibTypeCode("END_PROD_LIB");
            docNewRow.setCompCode(compCode);
            docVO.insertRow(docNewRow);
            CmsActivityTVORowImpl activityNewRow = (CmsActivityTVORowImpl)cmsActivityTVO.createRow();
            activityNewRow.setDocId(docNewRow.getDocId());
            cmsActivityTVO.insertRow(activityNewRow);

            preDocCategroupRel(mode, docNewRow.getDocId());
            result = docNewRow.getDocId();
        } else {
            result = docId;
            cmsActivityTVO.setbvDocId(docId);
            cmsActivityTVO.executeQuery();
            Row row = cmsActivityTVO.first();
            if (row != null) {
                row.setAttribute("LastUpdateDate", new Date());
                cmsActivityTVO.setCurrentRow(row);
            }
            preDocCategroupRel(mode, docId);
        }
        return result;
    }

    public void preDocCategroupRel(String mode, Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        if ("CREATE".equals(mode)) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow =
                (CmsDocCategoryRelTVORowImpl)docCategoryRelVO.createRow();
            docCategoryRelNewRow.setDocId(docId);
            docCategoryRelNewRow.setCategoryGroupType("BY_CATEGORY");
            docCategoryRelNewRow.setCategoryId(new Number(-1));
            docCategoryRelVO.insertRow(docCategoryRelNewRow);
        } else {
            docCategoryRelVO.setbvDocId(docId);
            docCategoryRelVO.executeQuery();
            Row row = docCategoryRelVO.first();
            if (row != null) {
                docCategoryRelVO.setCurrentRow(row);
            }
        }
    }

    public void batchEditActivity(String docIds) {
        String[] docId = docIds.split(",");
        CmsActivityTVOImpl bookVO = this.getCmsActivityTVO();
        CmsActivityEditVOImpl editVO = this.getCmsActivityEditVO();
        CmsActivityEditVORowImpl editRow = (CmsActivityEditVORowImpl)editVO.getCurrentRow();
        for (String id : docId) {
            try {
                bookVO.setbvDocId(new Number(id));
            } catch (SQLException e) {
                e.printStackTrace();
            }
            bookVO.executeQuery();
            Row row = bookVO.first();
            if (row != null) {
                CmsActivityTVORowImpl activityRow = (CmsActivityTVORowImpl)row;
                for (String attr : editRow.getAttributeNames()) {
                    if (editRow.getAttribute(attr) != null) {
                        activityRow.setAttribute(attr, editRow.getAttribute(attr));
                    }
                }
                activityRow.setLastUpdatedBy(this.getCustomDBTransaction().getUserId());
                activityRow.setLastUpdateDate(new Date());
                try {
                    if (editRow.getCategoryId() != null) {
                        updateCategoryRel(editRow.getCategoryId(), new Number(id));
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void updateCategoryRel(Number categoryId, Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        docCategoryRelVO.setbvDocId(docId);
        docCategoryRelVO.executeQuery();
        Row row = docCategoryRelVO.first();
        if (row != null) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow = (CmsDocCategoryRelTVORowImpl)row;
            docCategoryRelNewRow.setCategoryId(categoryId);
        }
    }

    public void initActivity4View(Number docId) {
        CmsActivityTVOImpl activityVO = this.getCmsActivityTVO4View();
        activityVO.setbvDocId(docId);
        activityVO.executeQuery();
        CmsDocUcmRelTVOImpl durTVO = this.getCmsDocUcmRelTVO4FileList();
        durTVO.setbvDocId(docId);
        durTVO.executeQuery();
        Row row = activityVO.first();
        if (row != null) {
            activityVO.setCurrentRow(row);
        }
    }

    /**
     * Container's getter for CmsDocCategoryRelTVO.
     * @return CmsDocCategoryRelTVO
     */
    public CmsDocCategoryRelTVOImpl getCmsDocCategoryRelTVO() {
        return (CmsDocCategoryRelTVOImpl)findViewObject("CmsDocCategoryRelTVO");
    }

    /**
     * Container's getter for CmsActivityTVO.
     * @return CmsActivityTVO
     */
    public CmsActivityTVOImpl getCmsActivityTVO() {
        return (CmsActivityTVOImpl)findViewObject("CmsActivityTVO");
    }

    /**
     * Container's getter for CmsActivityEditVO.
     * @return CmsActivityEditVO
     */
    public CmsActivityEditVOImpl getCmsActivityEditVO() {
        return (CmsActivityEditVOImpl)findViewObject("CmsActivityEditVO");
    }

    /**
     * Container's getter for CmsActivityTVO4View.
     * @return CmsActivityTVO4View
     */
    public CmsActivityTVOImpl getCmsActivityTVO4View() {
        return (CmsActivityTVOImpl)findViewObject("CmsActivityTVO4View");
    }

    /**
     * Container's getter for CmsDocUcmRelTVO4FileList.
     * @return CmsDocUcmRelTVO4FileList
     */
    public CmsDocUcmRelTVOImpl getCmsDocUcmRelTVO4FileList() {
        return (CmsDocUcmRelTVOImpl)findViewObject("CmsDocUcmRelTVO4FileList");
    }
}
