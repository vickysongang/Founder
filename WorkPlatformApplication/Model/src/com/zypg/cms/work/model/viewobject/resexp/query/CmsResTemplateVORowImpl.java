package com.zypg.cms.work.model.viewobject.resexp.query;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 20 14:06:48 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsResTemplateVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TemplateId {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getTemplateId();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setTemplateId((Number)value);
            }
        }
        ,
        TemplateName {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getTemplateName();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setTemplateName((String)value);
            }
        }
        ,
        UserId {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getUserId();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setUserId((Number)value);
            }
        }
        ,
        TempFlag {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getTempFlag();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setTempFlag((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Timestamp)value);
            }
        }
        ,
        LastBatchCode {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getLastBatchCode();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setLastBatchCode((String)value);
            }
        }
        ,
        DeleteFlag {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        }
        ,
        CategoryCode {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getCategoryCode();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setCategoryCode((String)value);
            }
        }
        ,
        Checked {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ,
        Attribute1 {
            public Object get(CmsResTemplateVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(CmsResTemplateVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsResTemplateVORowImpl object);

        public abstract void put(CmsResTemplateVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TEMPLATEID = AttributesEnum.TemplateId.index();
    public static final int TEMPLATENAME = AttributesEnum.TemplateName.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int TEMPFLAG = AttributesEnum.TempFlag.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTBATCHCODE = AttributesEnum.LastBatchCode.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int CATEGORYCODE = AttributesEnum.CategoryCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsResTemplateVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TemplateId.
     * @return the TemplateId
     */
    public Number getTemplateId() {
        return (Number) getAttributeInternal(TEMPLATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TemplateId.
     * @param value value to set the  TemplateId
     */
    public void setTemplateId(Number value) {
        setAttributeInternal(TEMPLATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TemplateName.
     * @return the TemplateName
     */
    public String getTemplateName() {
        return (String) getAttributeInternal(TEMPLATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TemplateName.
     * @param value value to set the  TemplateName
     */
    public void setTemplateName(String value) {
        setAttributeInternal(TEMPLATENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UserId.
     * @return the UserId
     */
    public Number getUserId() {
        return (Number) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UserId.
     * @param value value to set the  UserId
     */
    public void setUserId(Number value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TempFlag.
     * @return the TempFlag
     */
    public String getTempFlag() {
        return (String) getAttributeInternal(TEMPFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TempFlag.
     * @param value value to set the  TempFlag
     */
    public void setTempFlag(String value) {
        setAttributeInternal(TEMPFLAG, value);
    }


    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastBatchCode.
     * @return the LastBatchCode
     */
    public String getLastBatchCode() {
        return (String) getAttributeInternal(LASTBATCHCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastBatchCode.
     * @param value value to set the  LastBatchCode
     */
    public void setLastBatchCode(String value) {
        setAttributeInternal(LASTBATCHCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryCode.
     * @return the CategoryCode
     */
    public String getCategoryCode() {
        return (String) getAttributeInternal(CATEGORYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryCode.
     * @param value value to set the  CategoryCode
     */
    public void setCategoryCode(String value) {
        setAttributeInternal(CATEGORYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        return (Boolean) getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute1.
     * @param value value to set the  Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
