package com.zypg.cms.work.model.viewobject.resexp.query;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 20 18:03:33 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsSecondLevelExpResVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ResId {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getResId();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setResId((Number)value);
            }
        }
        ,
        ResCode {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getResCode();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setResCode((String)value);
            }
        }
        ,
        ResName {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getResName();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setResName((String)value);
            }
        }
        ,
        ResTypeCode {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getResTypeCode();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setResTypeCode((String)value);
            }
        }
        ,
        ResTypeName {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getResTypeName();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setResTypeName((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        Seq {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getSeq();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setSeq((Number)value);
            }
        }
        ,
        Checked {
            public Object get(CmsSecondLevelExpResVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsSecondLevelExpResVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsSecondLevelExpResVORowImpl object);

        public abstract void put(CmsSecondLevelExpResVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RESID = AttributesEnum.ResId.index();
    public static final int RESCODE = AttributesEnum.ResCode.index();
    public static final int RESNAME = AttributesEnum.ResName.index();
    public static final int RESTYPECODE = AttributesEnum.ResTypeCode.index();
    public static final int RESTYPENAME = AttributesEnum.ResTypeName.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int SEQ = AttributesEnum.Seq.index();
    public static final int CHECKED = AttributesEnum.Checked.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsSecondLevelExpResVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ResId.
     * @return the ResId
     */
    public Number getResId() {
        return (Number)getAttributeInternal(RESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResId.
     * @param value value to set the  ResId
     */
    public void setResId(Number value) {
        setAttributeInternal(RESID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResCode.
     * @return the ResCode
     */
    public String getResCode() {
        return (String) getAttributeInternal(RESCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResCode.
     * @param value value to set the  ResCode
     */
    public void setResCode(String value) {
        setAttributeInternal(RESCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResName.
     * @return the ResName
     */
    public String getResName() {
        return (String) getAttributeInternal(RESNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResName.
     * @param value value to set the  ResName
     */
    public void setResName(String value) {
        setAttributeInternal(RESNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeCode.
     * @return the ResTypeCode
     */
    public String getResTypeCode() {
        return (String) getAttributeInternal(RESTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeCode.
     * @param value value to set the  ResTypeCode
     */
    public void setResTypeCode(String value) {
        setAttributeInternal(RESTYPECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeName.
     * @return the ResTypeName
     */
    public String getResTypeName() {
        return (String) getAttributeInternal(RESTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeName.
     * @param value value to set the  ResTypeName
     */
    public void setResTypeName(String value) {
        setAttributeInternal(RESTYPENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Seq.
     * @return the Seq
     */
    public Number getSeq() {
        return (Number)getAttributeInternal(SEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Seq.
     * @param value value to set the  Seq
     */
    public void setSeq(Number value) {
        setAttributeInternal(SEQ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        return (Boolean) getAttributeInternal(CHECKED) == null ? false : (Boolean) getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
