package com.zypg.cms.work.model.viewobject.courseware.query;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 31 22:22:51 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsCoursewareQVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TeachingMaterialName {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getTeachingMaterialName();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setTeachingMaterialName((String)value);
            }
        }
        ,
        TeachingMaterialIsbn {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getTeachingMaterialIsbn();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setTeachingMaterialIsbn((String)value);
            }
        }
        ,
        TeachingMaterialAuthor {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getTeachingMaterialAuthor();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setTeachingMaterialAuthor((String)value);
            }
        }
        ,
        TeachingMaterialEditor {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getTeachingMaterialEditor();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setTeachingMaterialEditor((String)value);
            }
        }
        ,
        TeachingMaterialSeriesName {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getTeachingMaterialSeriesName();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setTeachingMaterialSeriesName((String)value);
            }
        }
        ,
        CoursewareType {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getCoursewareType();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setCoursewareType((String)value);
            }
        }
        ,
        CoursewareName {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getCoursewareName();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setCoursewareName((String)value);
            }
        }
        ,
        CopyrightFlag {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getCopyrightFlag();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setCopyrightFlag((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Lookup4CoursewareType {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getLookup4CoursewareType();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4YouOrWu {
            public Object get(CmsCoursewareQVORowImpl obj) {
                return obj.getLookup4YouOrWu();
            }

            public void put(CmsCoursewareQVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsCoursewareQVORowImpl object);

        public abstract void put(CmsCoursewareQVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TEACHINGMATERIALNAME = AttributesEnum.TeachingMaterialName.index();
    public static final int TEACHINGMATERIALISBN = AttributesEnum.TeachingMaterialIsbn.index();
    public static final int TEACHINGMATERIALAUTHOR = AttributesEnum.TeachingMaterialAuthor.index();
    public static final int TEACHINGMATERIALEDITOR = AttributesEnum.TeachingMaterialEditor.index();
    public static final int TEACHINGMATERIALSERIESNAME = AttributesEnum.TeachingMaterialSeriesName.index();
    public static final int COURSEWARETYPE = AttributesEnum.CoursewareType.index();
    public static final int COURSEWARENAME = AttributesEnum.CoursewareName.index();
    public static final int COPYRIGHTFLAG = AttributesEnum.CopyrightFlag.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LOOKUP4COURSEWARETYPE = AttributesEnum.Lookup4CoursewareType.index();
    public static final int LOOKUP4YOUORWU = AttributesEnum.Lookup4YouOrWu.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsCoursewareQVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialName.
     * @return the TeachingMaterialName
     */
    public String getTeachingMaterialName() {
        return (String) getAttributeInternal(TEACHINGMATERIALNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialName.
     * @param value value to set the  TeachingMaterialName
     */
    public void setTeachingMaterialName(String value) {
        setAttributeInternal(TEACHINGMATERIALNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialIsbn.
     * @return the TeachingMaterialIsbn
     */
    public String getTeachingMaterialIsbn() {
        return (String) getAttributeInternal(TEACHINGMATERIALISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialIsbn.
     * @param value value to set the  TeachingMaterialIsbn
     */
    public void setTeachingMaterialIsbn(String value) {
        setAttributeInternal(TEACHINGMATERIALISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialAuthor.
     * @return the TeachingMaterialAuthor
     */
    public String getTeachingMaterialAuthor() {
        return (String) getAttributeInternal(TEACHINGMATERIALAUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialAuthor.
     * @param value value to set the  TeachingMaterialAuthor
     */
    public void setTeachingMaterialAuthor(String value) {
        setAttributeInternal(TEACHINGMATERIALAUTHOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialEditor.
     * @return the TeachingMaterialEditor
     */
    public String getTeachingMaterialEditor() {
        return (String) getAttributeInternal(TEACHINGMATERIALEDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialEditor.
     * @param value value to set the  TeachingMaterialEditor
     */
    public void setTeachingMaterialEditor(String value) {
        setAttributeInternal(TEACHINGMATERIALEDITOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialSeriesName.
     * @return the TeachingMaterialSeriesName
     */
    public String getTeachingMaterialSeriesName() {
        return (String) getAttributeInternal(TEACHINGMATERIALSERIESNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialSeriesName.
     * @param value value to set the  TeachingMaterialSeriesName
     */
    public void setTeachingMaterialSeriesName(String value) {
        setAttributeInternal(TEACHINGMATERIALSERIESNAME, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CoursewareType.
     * @return the CoursewareType
     */
    public String getCoursewareType() {
        return (String) getAttributeInternal(COURSEWARETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareType.
     * @param value value to set the  CoursewareType
     */
    public void setCoursewareType(String value) {
        setAttributeInternal(COURSEWARETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoursewareName.
     * @return the CoursewareName
     */
    public String getCoursewareName() {
        return (String) getAttributeInternal(COURSEWARENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareName.
     * @param value value to set the  CoursewareName
     */
    public void setCoursewareName(String value) {
        setAttributeInternal(COURSEWARENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CopyrightFlag.
     * @return the CopyrightFlag
     */
    public String getCopyrightFlag() {
        return (String) getAttributeInternal(COPYRIGHTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CopyrightFlag.
     * @param value value to set the  CopyrightFlag
     */
    public void setCopyrightFlag(String value) {
        setAttributeInternal(COPYRIGHTFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String) getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4CoursewareType.
     */
    public RowSet getLookup4CoursewareType() {
        return (RowSet)getAttributeInternal(LOOKUP4COURSEWARETYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4YouOrWu.
     */
    public RowSet getLookup4YouOrWu() {
        return (RowSet)getAttributeInternal(LOOKUP4YOUORWU);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
