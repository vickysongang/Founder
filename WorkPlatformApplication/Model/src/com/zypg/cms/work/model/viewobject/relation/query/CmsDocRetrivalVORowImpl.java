package com.zypg.cms.work.model.viewobject.relation.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 14 16:35:38 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsDocRetrivalVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Title {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getTitle();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        Isbn {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getIsbn();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setIsbn((String)value);
            }
        }
        ,
        PubTime {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getPubTime();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setPubTime((Date)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        LibName {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getLibName();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setLibName((String)value);
            }
        }
        ,
        Author {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getAuthor();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setAuthor((String)value);
            }
        }
        ,
        DocId {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        DocIdDisplay {
            public Object get(CmsDocRetrivalVORowImpl obj) {
                return obj.getDocIdDisplay();
            }

            public void put(CmsDocRetrivalVORowImpl obj, Object value) {
                obj.setDocIdDisplay((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsDocRetrivalVORowImpl object);

        public abstract void put(CmsDocRetrivalVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TITLE = AttributesEnum.Title.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int ISBN = AttributesEnum.Isbn.index();
    public static final int PUBTIME = AttributesEnum.PubTime.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int LIBNAME = AttributesEnum.LibName.index();
    public static final int AUTHOR = AttributesEnum.Author.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDDISPLAY = AttributesEnum.DocIdDisplay.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsDocRetrivalVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Title.
     * @return the Title
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Title.
     * @param value value to set the  Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate.
     * @param value value to set the  CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String) getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Isbn.
     * @return the Isbn
     */
    public String getIsbn() {
        return (String) getAttributeInternal(ISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Isbn.
     * @param value value to set the  Isbn
     */
    public void setIsbn(String value) {
        setAttributeInternal(ISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PubTime.
     * @return the PubTime
     */
    public Date getPubTime() {
        return (Date) getAttributeInternal(PUBTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PubTime.
     * @param value value to set the  PubTime
     */
    public void setPubTime(Date value) {
        setAttributeInternal(PUBTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibName.
     * @return the LibName
     */
    public String getLibName() {
        return (String) getAttributeInternal(LIBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibName.
     * @param value value to set the  LibName
     */
    public void setLibName(String value) {
        setAttributeInternal(LIBNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Author.
     * @return the Author
     */
    public String getAuthor() {
        return (String) getAttributeInternal(AUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Author.
     * @param value value to set the  Author
     */
    public void setAuthor(String value) {
        setAttributeInternal(AUTHOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdDisplay.
     * @return the DocIdDisplay
     */
    public String getDocIdDisplay() {
        return (String) getAttributeInternal(DOCIDDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdDisplay.
     * @param value value to set the  DocIdDisplay
     */
    public void setDocIdDisplay(String value) {
        setAttributeInternal(DOCIDDISPLAY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
