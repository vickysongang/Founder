package com.zypg.cms.work.model.entity;

import com.honythink.applicationframework.hadf.CustomEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 24 14:58:03 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsIllustrationTEOImpl extends CustomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        IllustrationId {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getIllustrationId();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setIllustrationId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        IllustrationName {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getIllustrationName();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setIllustrationName((String)value);
            }
        }
        ,
        IllustrationSource {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getIllustrationSource();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setIllustrationSource((String)value);
            }
        }
        ,
        IllustrationType {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getIllustrationType();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setIllustrationType((String)value);
            }
        }
        ,
        IllustrationAuthor {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getIllustrationAuthor();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setIllustrationAuthor((String)value);
            }
        }
        ,
        MapApproveNum {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getMapApproveNum();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setMapApproveNum((String)value);
            }
        }
        ,
        PageNumber {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getPageNumber();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setPageNumber((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        IllustrationDesc {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getIllustrationDesc();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setIllustrationDesc((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        FigureFormat {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureFormat();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureFormat((String)value);
            }
        }
        ,
        FigureDimension {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureDimension();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureDimension((String)value);
            }
        }
        ,
        FigureSize {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureSize();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureSize((String)value);
            }
        }
        ,
        CoverDesign {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getCoverDesign();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setCoverDesign((String)value);
            }
        }
        ,
        FigureResolution {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureResolution();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureResolution((String)value);
            }
        }
        ,
        FigureXResolution {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureXResolution();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureXResolution((String)value);
            }
        }
        ,
        FigureYResolution {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureYResolution();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureYResolution((String)value);
            }
        }
        ,
        FigureWidth {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureWidth();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureWidth((String)value);
            }
        }
        ,
        FigureHeight {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureHeight();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureHeight((String)value);
            }
        }
        ,
        FigureStoreTime {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getFigureStoreTime();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setFigureStoreTime((Date)value);
            }
        }
        ,
        CopyrightFlag {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getCopyrightFlag();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setCopyrightFlag((String)value);
            }
        }
        ,
        ObjectVersionNumber {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getObjectVersionNumber();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreatedBy {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Attribute1 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(CmsIllustrationTEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(CmsIllustrationTEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsIllustrationTEOImpl object);

        public abstract void put(CmsIllustrationTEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ILLUSTRATIONID = AttributesEnum.IllustrationId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ILLUSTRATIONNAME = AttributesEnum.IllustrationName.index();
    public static final int ILLUSTRATIONSOURCE = AttributesEnum.IllustrationSource.index();
    public static final int ILLUSTRATIONTYPE = AttributesEnum.IllustrationType.index();
    public static final int ILLUSTRATIONAUTHOR = AttributesEnum.IllustrationAuthor.index();
    public static final int MAPAPPROVENUM = AttributesEnum.MapApproveNum.index();
    public static final int PAGENUMBER = AttributesEnum.PageNumber.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int ILLUSTRATIONDESC = AttributesEnum.IllustrationDesc.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int FIGUREFORMAT = AttributesEnum.FigureFormat.index();
    public static final int FIGUREDIMENSION = AttributesEnum.FigureDimension.index();
    public static final int FIGURESIZE = AttributesEnum.FigureSize.index();
    public static final int COVERDESIGN = AttributesEnum.CoverDesign.index();
    public static final int FIGURERESOLUTION = AttributesEnum.FigureResolution.index();
    public static final int FIGUREXRESOLUTION = AttributesEnum.FigureXResolution.index();
    public static final int FIGUREYRESOLUTION = AttributesEnum.FigureYResolution.index();
    public static final int FIGUREWIDTH = AttributesEnum.FigureWidth.index();
    public static final int FIGUREHEIGHT = AttributesEnum.FigureHeight.index();
    public static final int FIGURESTORETIME = AttributesEnum.FigureStoreTime.index();
    public static final int COPYRIGHTFLAG = AttributesEnum.CopyrightFlag.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsIllustrationTEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.zypg.cms.work.model.entity.CmsIllustrationTEO");
    }

    /**
     * Gets the attribute value for IllustrationId, using the alias name IllustrationId.
     * @return the value of IllustrationId
     */
    public Number getIllustrationId() {
        return (Number)getAttributeInternal(ILLUSTRATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IllustrationId.
     * @param value value to set the IllustrationId
     */
    public void setIllustrationId(Number value) {
        setAttributeInternal(ILLUSTRATIONID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for IllustrationName, using the alias name IllustrationName.
     * @return the value of IllustrationName
     */
    public String getIllustrationName() {
        return (String)getAttributeInternal(ILLUSTRATIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for IllustrationName.
     * @param value value to set the IllustrationName
     */
    public void setIllustrationName(String value) {
        setAttributeInternal(ILLUSTRATIONNAME, value);
    }

    /**
     * Gets the attribute value for IllustrationSource, using the alias name IllustrationSource.
     * @return the value of IllustrationSource
     */
    public String getIllustrationSource() {
        return (String)getAttributeInternal(ILLUSTRATIONSOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IllustrationSource.
     * @param value value to set the IllustrationSource
     */
    public void setIllustrationSource(String value) {
        setAttributeInternal(ILLUSTRATIONSOURCE, value);
    }

    /**
     * Gets the attribute value for IllustrationType, using the alias name IllustrationType.
     * @return the value of IllustrationType
     */
    public String getIllustrationType() {
        return (String)getAttributeInternal(ILLUSTRATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IllustrationType.
     * @param value value to set the IllustrationType
     */
    public void setIllustrationType(String value) {
        setAttributeInternal(ILLUSTRATIONTYPE, value);
    }

    /**
     * Gets the attribute value for IllustrationAuthor, using the alias name IllustrationAuthor.
     * @return the value of IllustrationAuthor
     */
    public String getIllustrationAuthor() {
        return (String)getAttributeInternal(ILLUSTRATIONAUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for IllustrationAuthor.
     * @param value value to set the IllustrationAuthor
     */
    public void setIllustrationAuthor(String value) {
        setAttributeInternal(ILLUSTRATIONAUTHOR, value);
    }

    /**
     * Gets the attribute value for MapApproveNum, using the alias name MapApproveNum.
     * @return the value of MapApproveNum
     */
    public String getMapApproveNum() {
        return (String)getAttributeInternal(MAPAPPROVENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for MapApproveNum.
     * @param value value to set the MapApproveNum
     */
    public void setMapApproveNum(String value) {
        setAttributeInternal(MAPAPPROVENUM, value);
    }

    /**
     * Gets the attribute value for PageNumber, using the alias name PageNumber.
     * @return the value of PageNumber
     */
    public String getPageNumber() {
        return (String)getAttributeInternal(PAGENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PageNumber.
     * @param value value to set the PageNumber
     */
    public void setPageNumber(String value) {
        setAttributeInternal(PAGENUMBER, value);
    }

    /**
     * Gets the attribute value for Keyword, using the alias name Keyword.
     * @return the value of Keyword
     */
    public String getKeyword() {
        return (String)getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Keyword.
     * @param value value to set the Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for IllustrationDesc, using the alias name IllustrationDesc.
     * @return the value of IllustrationDesc
     */
    public String getIllustrationDesc() {
        return (String)getAttributeInternal(ILLUSTRATIONDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for IllustrationDesc.
     * @param value value to set the IllustrationDesc
     */
    public void setIllustrationDesc(String value) {
        setAttributeInternal(ILLUSTRATIONDESC, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for FigureFormat, using the alias name FigureFormat.
     * @return the value of FigureFormat
     */
    public String getFigureFormat() {
        return (String)getAttributeInternal(FIGUREFORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureFormat.
     * @param value value to set the FigureFormat
     */
    public void setFigureFormat(String value) {
        setAttributeInternal(FIGUREFORMAT, value);
    }

    /**
     * Gets the attribute value for FigureDimension, using the alias name FigureDimension.
     * @return the value of FigureDimension
     */
    public String getFigureDimension() {
        return (String)getAttributeInternal(FIGUREDIMENSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureDimension.
     * @param value value to set the FigureDimension
     */
    public void setFigureDimension(String value) {
        setAttributeInternal(FIGUREDIMENSION, value);
    }

    /**
     * Gets the attribute value for FigureSize, using the alias name FigureSize.
     * @return the value of FigureSize
     */
    public String getFigureSize() {
        return (String)getAttributeInternal(FIGURESIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureSize.
     * @param value value to set the FigureSize
     */
    public void setFigureSize(String value) {
        setAttributeInternal(FIGURESIZE, value);
    }

    /**
     * Gets the attribute value for CoverDesign, using the alias name CoverDesign.
     * @return the value of CoverDesign
     */
    public String getCoverDesign() {
        return (String)getAttributeInternal(COVERDESIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoverDesign.
     * @param value value to set the CoverDesign
     */
    public void setCoverDesign(String value) {
        setAttributeInternal(COVERDESIGN, value);
    }

    /**
     * Gets the attribute value for FigureResolution, using the alias name FigureResolution.
     * @return the value of FigureResolution
     */
    public String getFigureResolution() {
        return (String)getAttributeInternal(FIGURERESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureResolution.
     * @param value value to set the FigureResolution
     */
    public void setFigureResolution(String value) {
        setAttributeInternal(FIGURERESOLUTION, value);
    }

    /**
     * Gets the attribute value for FigureXResolution, using the alias name FigureXResolution.
     * @return the value of FigureXResolution
     */
    public String getFigureXResolution() {
        return (String)getAttributeInternal(FIGUREXRESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureXResolution.
     * @param value value to set the FigureXResolution
     */
    public void setFigureXResolution(String value) {
        setAttributeInternal(FIGUREXRESOLUTION, value);
    }

    /**
     * Gets the attribute value for FigureYResolution, using the alias name FigureYResolution.
     * @return the value of FigureYResolution
     */
    public String getFigureYResolution() {
        return (String)getAttributeInternal(FIGUREYRESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureYResolution.
     * @param value value to set the FigureYResolution
     */
    public void setFigureYResolution(String value) {
        setAttributeInternal(FIGUREYRESOLUTION, value);
    }

    /**
     * Gets the attribute value for FigureWidth, using the alias name FigureWidth.
     * @return the value of FigureWidth
     */
    public String getFigureWidth() {
        return (String)getAttributeInternal(FIGUREWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureWidth.
     * @param value value to set the FigureWidth
     */
    public void setFigureWidth(String value) {
        setAttributeInternal(FIGUREWIDTH, value);
    }

    /**
     * Gets the attribute value for FigureHeight, using the alias name FigureHeight.
     * @return the value of FigureHeight
     */
    public String getFigureHeight() {
        return (String)getAttributeInternal(FIGUREHEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureHeight.
     * @param value value to set the FigureHeight
     */
    public void setFigureHeight(String value) {
        setAttributeInternal(FIGUREHEIGHT, value);
    }

    /**
     * Gets the attribute value for FigureStoreTime, using the alias name FigureStoreTime.
     * @return the value of FigureStoreTime
     */
    public Date getFigureStoreTime() {
        return (Date)getAttributeInternal(FIGURESTORETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FigureStoreTime.
     * @param value value to set the FigureStoreTime
     */
    public void setFigureStoreTime(Date value) {
        setAttributeInternal(FIGURESTORETIME, value);
    }

    /**
     * Gets the attribute value for CopyrightFlag, using the alias name CopyrightFlag.
     * @return the value of CopyrightFlag
     */
    public String getCopyrightFlag() {
        return (String)getAttributeInternal(COPYRIGHTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CopyrightFlag.
     * @param value value to set the CopyrightFlag
     */
    public void setCopyrightFlag(String value) {
        setAttributeInternal(COPYRIGHTFLAG, value);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param illustrationId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number illustrationId) {
        return new Key(new Object[]{illustrationId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl si = new SequenceImpl("CMS_ILLUSTRATION_S", this.getDBTransaction());
        this.setIllustrationId(si.getSequenceNumber());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }
}
