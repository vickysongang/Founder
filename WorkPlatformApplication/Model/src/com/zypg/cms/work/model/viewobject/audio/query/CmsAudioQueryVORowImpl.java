package com.zypg.cms.work.model.viewobject.audio.query;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 29 12:14:26 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsAudioQueryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AudioId {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getAudioId();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setAudioId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        FileName {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getFileName();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setFileName((String)value);
            }
        }
        ,
        FileFormat {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getFileFormat();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setFileFormat((String)value);
            }
        }
        ,
        FileSize {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getFileSize();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setFileSize((String)value);
            }
        }
        ,
        FileTime {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getFileTime();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setFileTime((String)value);
            }
        }
        ,
        FileStoreTime {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getFileStoreTime();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setFileStoreTime((Date)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Status {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        DeleteFlag {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        AssortBook {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getAssortBook();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setAssortBook((String)value);
            }
        }
        ,
        PreviewUrl {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getPreviewUrl();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setPreviewUrl((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsAudioQueryVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsAudioQueryVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsAudioQueryVORowImpl object);

        public abstract void put(CmsAudioQueryVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int AUDIOID = AttributesEnum.AudioId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILEFORMAT = AttributesEnum.FileFormat.index();
    public static final int FILESIZE = AttributesEnum.FileSize.index();
    public static final int FILETIME = AttributesEnum.FileTime.index();
    public static final int FILESTORETIME = AttributesEnum.FileStoreTime.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int ASSORTBOOK = AttributesEnum.AssortBook.index();
    public static final int PREVIEWURL = AttributesEnum.PreviewUrl.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsAudioQueryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute AudioId.
     * @return the AudioId
     */
    public Number getAudioId() {
        return (Number) getAttributeInternal(AUDIOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AudioId.
     * @param value value to set the  AudioId
     */
    public void setAudioId(Number value) {
        setAttributeInternal(AUDIOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileName.
     * @return the FileName
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileName.
     * @param value value to set the  FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileFormat.
     * @return the FileFormat
     */
    public String getFileFormat() {
        return (String) getAttributeInternal(FILEFORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileFormat.
     * @param value value to set the  FileFormat
     */
    public void setFileFormat(String value) {
        setAttributeInternal(FILEFORMAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileSize.
     * @return the FileSize
     */
    public String getFileSize() {
        return (String) getAttributeInternal(FILESIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileSize.
     * @param value value to set the  FileSize
     */
    public void setFileSize(String value) {
        setAttributeInternal(FILESIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileTime.
     * @return the FileTime
     */
    public String getFileTime() {
        return (String) getAttributeInternal(FILETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileTime.
     * @param value value to set the  FileTime
     */
    public void setFileTime(String value) {
        setAttributeInternal(FILETIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileStoreTime.
     * @return the FileStoreTime
     */
    public Date getFileStoreTime() {
        return (Date) getAttributeInternal(FILESTORETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileStoreTime.
     * @param value value to set the  FileStoreTime
     */
    public void setFileStoreTime(Date value) {
        setAttributeInternal(FILESTORETIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String) getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AssortBook.
     * @return the AssortBook
     */
    public String getAssortBook() {
        return (String) getAttributeInternal(ASSORTBOOK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AssortBook.
     * @param value value to set the  AssortBook
     */
    public void setAssortBook(String value) {
        setAttributeInternal(ASSORTBOOK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PreviewUrl.
     * @return the PreviewUrl
     */
    public String getPreviewUrl() {
        return (String) getAttributeInternal(PREVIEWURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PreviewUrl.
     * @param value value to set the  PreviewUrl
     */
    public void setPreviewUrl(String value) {
        setAttributeInternal(PREVIEWURL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
