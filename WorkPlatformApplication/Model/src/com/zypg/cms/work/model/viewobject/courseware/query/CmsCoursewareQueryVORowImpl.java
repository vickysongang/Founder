package com.zypg.cms.work.model.viewobject.courseware.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 29 12:14:16 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsCoursewareQueryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CoursewareId {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getCoursewareId();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setCoursewareId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        CoursewareName {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getCoursewareName();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setCoursewareName((String)value);
            }
        }
        ,
        TeachingMaterialName {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getTeachingMaterialName();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setTeachingMaterialName((String)value);
            }
        }
        ,
        TeachingMaterialIsbn {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getTeachingMaterialIsbn();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setTeachingMaterialIsbn((String)value);
            }
        }
        ,
        TeachingMaterialAuthor {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getTeachingMaterialAuthor();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setTeachingMaterialAuthor((String)value);
            }
        }
        ,
        UploadTime {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getUploadTime();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setUploadTime((Date)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Status {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        DeleteFlag {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        }
        ,
        SyncFlag {
            public Object get(CmsCoursewareQueryVORowImpl obj) {
                return obj.getSyncFlag();
            }

            public void put(CmsCoursewareQueryVORowImpl obj, Object value) {
                obj.setSyncFlag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsCoursewareQueryVORowImpl object);

        public abstract void put(CmsCoursewareQueryVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COURSEWAREID = AttributesEnum.CoursewareId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int COURSEWARENAME = AttributesEnum.CoursewareName.index();
    public static final int TEACHINGMATERIALNAME = AttributesEnum.TeachingMaterialName.index();
    public static final int TEACHINGMATERIALISBN = AttributesEnum.TeachingMaterialIsbn.index();
    public static final int TEACHINGMATERIALAUTHOR = AttributesEnum.TeachingMaterialAuthor.index();
    public static final int UPLOADTIME = AttributesEnum.UploadTime.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int SYNCFLAG = AttributesEnum.SyncFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsCoursewareQueryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CoursewareId.
     * @return the CoursewareId
     */
    public Number getCoursewareId() {
        return (Number) getAttributeInternal(COURSEWAREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareId.
     * @param value value to set the  CoursewareId
     */
    public void setCoursewareId(Number value) {
        setAttributeInternal(COURSEWAREID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoursewareName.
     * @return the CoursewareName
     */
    public String getCoursewareName() {
        return (String) getAttributeInternal(COURSEWARENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareName.
     * @param value value to set the  CoursewareName
     */
    public void setCoursewareName(String value) {
        setAttributeInternal(COURSEWARENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialName.
     * @return the TeachingMaterialName
     */
    public String getTeachingMaterialName() {
        return (String) getAttributeInternal(TEACHINGMATERIALNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialName.
     * @param value value to set the  TeachingMaterialName
     */
    public void setTeachingMaterialName(String value) {
        setAttributeInternal(TEACHINGMATERIALNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialIsbn.
     * @return the TeachingMaterialIsbn
     */
    public String getTeachingMaterialIsbn() {
        return (String) getAttributeInternal(TEACHINGMATERIALISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialIsbn.
     * @param value value to set the  TeachingMaterialIsbn
     */
    public void setTeachingMaterialIsbn(String value) {
        setAttributeInternal(TEACHINGMATERIALISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialAuthor.
     * @return the TeachingMaterialAuthor
     */
    public String getTeachingMaterialAuthor() {
        return (String) getAttributeInternal(TEACHINGMATERIALAUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialAuthor.
     * @param value value to set the  TeachingMaterialAuthor
     */
    public void setTeachingMaterialAuthor(String value) {
        setAttributeInternal(TEACHINGMATERIALAUTHOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UploadTime.
     * @return the UploadTime
     */
    public Date getUploadTime() {
        return (Date) getAttributeInternal(UPLOADTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UploadTime.
     * @param value value to set the  UploadTime
     */
    public void setUploadTime(Date value) {
        setAttributeInternal(UPLOADTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SyncFlag.
     * @return the SyncFlag
     */
    public String getSyncFlag() {
        return (String) getAttributeInternal(SYNCFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SyncFlag.
     * @param value value to set the  SyncFlag
     */
    public void setSyncFlag(String value) {
        setAttributeInternal(SYNCFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
