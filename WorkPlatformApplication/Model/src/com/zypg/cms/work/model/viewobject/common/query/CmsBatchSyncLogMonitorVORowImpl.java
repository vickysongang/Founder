package com.zypg.cms.work.model.viewobject.common.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 01 15:56:46 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsBatchSyncLogMonitorVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        MonitorId {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getMonitorId();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setMonitorId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        FileName {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getFileName();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setFileName((String)value);
            }
        }
        ,
        FilePath {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getFilePath();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setFilePath((String)value);
            }
        }
        ,
        Result {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getResult();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setResult((String)value);
            }
        }
        ,
        ResultDisplay {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getResultDisplay();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setResultDisplay((String)value);
            }
        }
        ,
        ThumbnailResult {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getThumbnailResult();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setThumbnailResult((String)value);
            }
        }
        ,
        ThumbnailResultDisplay {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getThumbnailResultDisplay();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setThumbnailResultDisplay((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        Attribute1 {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Operation {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getOperation();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setOperation((String)value);
            }
        }
        ,
        CreationDateDisplay {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getCreationDateDisplay();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setCreationDateDisplay((String)value);
            }
        }
        ,
        BatchNum {
            public Object get(CmsBatchSyncLogMonitorVORowImpl obj) {
                return obj.getBatchNum();
            }

            public void put(CmsBatchSyncLogMonitorVORowImpl obj, Object value) {
                obj.setBatchNum((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsBatchSyncLogMonitorVORowImpl object);

        public abstract void put(CmsBatchSyncLogMonitorVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MONITORID = AttributesEnum.MonitorId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILEPATH = AttributesEnum.FilePath.index();
    public static final int RESULT = AttributesEnum.Result.index();
    public static final int RESULTDISPLAY = AttributesEnum.ResultDisplay.index();
    public static final int THUMBNAILRESULT = AttributesEnum.ThumbnailResult.index();
    public static final int THUMBNAILRESULTDISPLAY = AttributesEnum.ThumbnailResultDisplay.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int OPERATION = AttributesEnum.Operation.index();
    public static final int CREATIONDATEDISPLAY = AttributesEnum.CreationDateDisplay.index();
    public static final int BATCHNUM = AttributesEnum.BatchNum.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsBatchSyncLogMonitorVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute MonitorId.
     * @return the MonitorId
     */
    public Number getMonitorId() {
        return (Number) getAttributeInternal(MONITORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MonitorId.
     * @param value value to set the  MonitorId
     */
    public void setMonitorId(Number value) {
        setAttributeInternal(MONITORID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileName.
     * @return the FileName
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileName.
     * @param value value to set the  FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FilePath.
     * @return the FilePath
     */
    public String getFilePath() {
        return (String) getAttributeInternal(FILEPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FilePath.
     * @param value value to set the  FilePath
     */
    public void setFilePath(String value) {
        setAttributeInternal(FILEPATH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Result.
     * @return the Result
     */
    public String getResult() {
        return (String) getAttributeInternal(RESULT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Result.
     * @param value value to set the  Result
     */
    public void setResult(String value) {
        setAttributeInternal(RESULT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResultDisplay.
     * @return the ResultDisplay
     */
    public String getResultDisplay() {
        return (String) getAttributeInternal(RESULTDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResultDisplay.
     * @param value value to set the  ResultDisplay
     */
    public void setResultDisplay(String value) {
        setAttributeInternal(RESULTDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThumbnailResult.
     * @return the ThumbnailResult
     */
    public String getThumbnailResult() {
        return (String) getAttributeInternal(THUMBNAILRESULT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThumbnailResult.
     * @param value value to set the  ThumbnailResult
     */
    public void setThumbnailResult(String value) {
        setAttributeInternal(THUMBNAILRESULT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThumbnailResultDisplay.
     * @return the ThumbnailResultDisplay
     */
    public String getThumbnailResultDisplay() {
        return (String) getAttributeInternal(THUMBNAILRESULTDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThumbnailResultDisplay.
     * @param value value to set the  ThumbnailResultDisplay
     */
    public void setThumbnailResultDisplay(String value) {
        setAttributeInternal(THUMBNAILRESULTDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate.
     * @param value value to set the  CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute1.
     * @param value value to set the  Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute2.
     * @param value value to set the  Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute3.
     * @param value value to set the  Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Operation.
     * @return the Operation
     */
    public String getOperation() {
        return (String) getAttributeInternal(OPERATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Operation.
     * @param value value to set the  Operation
     */
    public void setOperation(String value) {
        setAttributeInternal(OPERATION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDateDisplay.
     * @return the CreationDateDisplay
     */
    public String getCreationDateDisplay() {
        return (String) getAttributeInternal(CREATIONDATEDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDateDisplay.
     * @param value value to set the  CreationDateDisplay
     */
    public void setCreationDateDisplay(String value) {
        setAttributeInternal(CREATIONDATEDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BatchNum.
     * @return the BatchNum
     */
    public String getBatchNum() {
        return (String) getAttributeInternal(BATCHNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BatchNum.
     * @param value value to set the  BatchNum
     */
    public void setBatchNum(String value) {
        setAttributeInternal(BATCHNUM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
