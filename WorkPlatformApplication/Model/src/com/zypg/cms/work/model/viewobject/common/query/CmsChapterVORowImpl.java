package com.zypg.cms.work.model.viewobject.common.query;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 09 11:50:11 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsChapterVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ChapterId {
            public Object get(CmsChapterVORowImpl obj) {
                return obj.getChapterId();
            }

            public void put(CmsChapterVORowImpl obj, Object value) {
                obj.setChapterId((BigDecimal)value);
            }
        }
        ,
        DocId {
            public Object get(CmsChapterVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsChapterVORowImpl obj, Object value) {
                obj.setDocId((BigDecimal)value);
            }
        }
        ,
        ChapterName {
            public Object get(CmsChapterVORowImpl obj) {
                return obj.getChapterName();
            }

            public void put(CmsChapterVORowImpl obj, Object value) {
                obj.setChapterName((String)value);
            }
        }
        ,
        ContentUrl {
            public Object get(CmsChapterVORowImpl obj) {
                return obj.getContentUrl();
            }

            public void put(CmsChapterVORowImpl obj, Object value) {
                obj.setContentUrl((String)value);
            }
        }
        ,
        UcmDid {
            public Object get(CmsChapterVORowImpl obj) {
                return obj.getUcmDid();
            }

            public void put(CmsChapterVORowImpl obj, Object value) {
                obj.setUcmDid((BigDecimal)value);
            }
        }
        ,
        UcmDocname {
            public Object get(CmsChapterVORowImpl obj) {
                return obj.getUcmDocname();
            }

            public void put(CmsChapterVORowImpl obj, Object value) {
                obj.setUcmDocname((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsChapterVORowImpl object);

        public abstract void put(CmsChapterVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CHAPTERID = AttributesEnum.ChapterId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int CHAPTERNAME = AttributesEnum.ChapterName.index();
    public static final int CONTENTURL = AttributesEnum.ContentUrl.index();
    public static final int UCMDID = AttributesEnum.UcmDid.index();
    public static final int UCMDOCNAME = AttributesEnum.UcmDocname.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsChapterVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ChapterId.
     * @return the ChapterId
     */
    public BigDecimal getChapterId() {
        return (BigDecimal) getAttributeInternal(CHAPTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChapterId.
     * @param value value to set the  ChapterId
     */
    public void setChapterId(BigDecimal value) {
        setAttributeInternal(CHAPTERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public BigDecimal getDocId() {
        return (BigDecimal) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(BigDecimal value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChapterName.
     * @return the ChapterName
     */
    public String getChapterName() {
        return (String) getAttributeInternal(CHAPTERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChapterName.
     * @param value value to set the  ChapterName
     */
    public void setChapterName(String value) {
        setAttributeInternal(CHAPTERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContentUrl.
     * @return the ContentUrl
     */
    public String getContentUrl() {
        return (String) getAttributeInternal(CONTENTURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContentUrl.
     * @param value value to set the  ContentUrl
     */
    public void setContentUrl(String value) {
        setAttributeInternal(CONTENTURL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UcmDid.
     * @return the UcmDid
     */
    public BigDecimal getUcmDid() {
        return (BigDecimal) getAttributeInternal(UCMDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UcmDid.
     * @param value value to set the  UcmDid
     */
    public void setUcmDid(BigDecimal value) {
        setAttributeInternal(UCMDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UcmDocname.
     * @return the UcmDocname
     */
    public String getUcmDocname() {
        return (String) getAttributeInternal(UCMDOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UcmDocname.
     * @param value value to set the  UcmDocname
     */
    public void setUcmDocname(String value) {
        setAttributeInternal(UCMDOCNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
