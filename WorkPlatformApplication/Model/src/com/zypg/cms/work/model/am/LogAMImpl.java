package com.zypg.cms.work.model.am;


import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.am.common.LogAM;
import com.zypg.cms.work.model.viewobject.log.CmsProcessLogTVOImpl;
import com.zypg.cms.work.model.viewobject.log.CmsRollbackLogTVOImpl;
import com.zypg.cms.work.model.viewobject.log.CmsRollbackLogTVORowImpl;
import com.zypg.cms.work.model.viewobject.log.query.CmsProcessLogVOImpl;
import com.zypg.cms.work.model.viewobject.log.query.CmsRollbackLogVOImpl;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 29 14:51:14 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------

public class LogAMImpl extends CustomApplicationModuleImpl implements LogAM {

    /**
     * This is the default constructor (do not remove).
     */
    public LogAMImpl() {
    }

    public void insertRollbackLog(Number docId, String reason) {
        CmsRollbackLogTVOImpl cmsRollbackLogTVO = this.getCmsRollbackLogTVO();
        CmsRollbackLogTVORowImpl rollbackNewRow = (CmsRollbackLogTVORowImpl)cmsRollbackLogTVO.createRow();
        rollbackNewRow.setDocId(docId);
        rollbackNewRow.setOperationTime(new oracle.jbo.domain.Date(new java.sql.Timestamp(new java.util.Date().getTime())));
        rollbackNewRow.setRollbackOperator(this.getCustomDBTransaction().getUserId() + "");
        rollbackNewRow.setRollbackReason(reason);
        cmsRollbackLogTVO.insertRow(rollbackNewRow);
    }

    public void preRollbackLog(Number docId) {
        CmsRollbackLogVOImpl rollbackLogVO = (CmsRollbackLogVOImpl)this.getCmsRollbackLogVO();
        rollbackLogVO.setbvDocId(docId);
        rollbackLogVO.executeQuery();
    }

    public void preProcessLog(Number docId) {
        CmsProcessLogVOImpl processLogVO = this.getCmsProcessLogVO();
        processLogVO.setbvDocId(docId);
        processLogVO.executeQuery();

    }

    /**
     * Container's getter for CmsProcessLogVO.
     * @return CmsProcessLogVO
     */
    public CmsProcessLogVOImpl getCmsProcessLogVO() {
        return (CmsProcessLogVOImpl)findViewObject("CmsProcessLogVO");
    }

    /**
     * Container's getter for CmsRollbackLogVO.
     * @return CmsRollbackLogVO
     */
    public ViewObjectImpl getCmsRollbackLogVO() {
        return (ViewObjectImpl)findViewObject("CmsRollbackLogVO");
    }

    /**
     * Container's getter for CmsProcessLogTVO.
     * @return CmsProcessLogTVO
     */
    public CmsProcessLogTVOImpl getCmsProcessLogTVO() {
        return (CmsProcessLogTVOImpl)findViewObject("CmsProcessLogTVO");
    }

    /**
     * Container's getter for CmsRollbackLogTVO.
     * @return CmsRollbackLogTVO
     */
    public CmsRollbackLogTVOImpl getCmsRollbackLogTVO() {
        return (CmsRollbackLogTVOImpl)findViewObject("CmsRollbackLogTVO");
    }
}
