package com.zypg.cms.work.model.viewobject.extendattr;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 18 15:11:21 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsExtendAttrVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ExtendAttrId {
            public Object get(CmsExtendAttrVORowImpl obj) {
                return obj.getExtendAttrId();
            }

            public void put(CmsExtendAttrVORowImpl obj, Object value) {
                obj.setExtendAttrId((Number)value);
            }
        }
        ,
        AttrCode {
            public Object get(CmsExtendAttrVORowImpl obj) {
                return obj.getAttrCode();
            }

            public void put(CmsExtendAttrVORowImpl obj, Object value) {
                obj.setAttrCode((String)value);
            }
        }
        ,
        AttrMeaning {
            public Object get(CmsExtendAttrVORowImpl obj) {
                return obj.getAttrMeaning();
            }

            public void put(CmsExtendAttrVORowImpl obj, Object value) {
                obj.setAttrMeaning((String)value);
            }
        }
        ,
        AttrType {
            public Object get(CmsExtendAttrVORowImpl obj) {
                return obj.getAttrType();
            }

            public void put(CmsExtendAttrVORowImpl obj, Object value) {
                obj.setAttrType((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsExtendAttrVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsExtendAttrVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsExtendAttrVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsExtendAttrVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsExtendAttrVORowImpl object);

        public abstract void put(CmsExtendAttrVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EXTENDATTRID = AttributesEnum.ExtendAttrId.index();
    public static final int ATTRCODE = AttributesEnum.AttrCode.index();
    public static final int ATTRMEANING = AttributesEnum.AttrMeaning.index();
    public static final int ATTRTYPE = AttributesEnum.AttrType.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsExtendAttrVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ExtendAttrId.
     * @return the ExtendAttrId
     */
    public Number getExtendAttrId() {
        return (Number) getAttributeInternal(EXTENDATTRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExtendAttrId.
     * @param value value to set the  ExtendAttrId
     */
    public void setExtendAttrId(Number value) {
        setAttributeInternal(EXTENDATTRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AttrCode.
     * @return the AttrCode
     */
    public String getAttrCode() {
        return (String) getAttributeInternal(ATTRCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttrCode.
     * @param value value to set the  AttrCode
     */
    public void setAttrCode(String value) {
        setAttributeInternal(ATTRCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AttrMeaning.
     * @return the AttrMeaning
     */
    public String getAttrMeaning() {
        return (String) getAttributeInternal(ATTRMEANING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttrMeaning.
     * @param value value to set the  AttrMeaning
     */
    public void setAttrMeaning(String value) {
        setAttributeInternal(ATTRMEANING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AttrType.
     * @return the AttrType
     */
    public String getAttrType() {
        return (String) getAttributeInternal(ATTRTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttrType.
     * @param value value to set the  AttrType
     */
    public void setAttrType(String value) {
        setAttributeInternal(ATTRTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
