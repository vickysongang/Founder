package com.zypg.cms.work.model.am;


import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.am.common.IllustrationAM;
import com.zypg.cms.work.model.viewobject.book.query.CmsBookQVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocUcmRelTVOImpl;
import com.zypg.cms.work.model.viewobject.exif.CmsFigureExifInfoTVOImpl;
import com.zypg.cms.work.model.viewobject.illustration.CmsIllustrationEditVOImpl;
import com.zypg.cms.work.model.viewobject.illustration.CmsIllustrationEditVORowImpl;
import com.zypg.cms.work.model.viewobject.illustration.CmsIllustrationTVOImpl;
import com.zypg.cms.work.model.viewobject.illustration.CmsIllustrationTVORowImpl;
import com.zypg.cms.work.model.viewobject.illustration.query.CmsIllustrationQVOImpl;
import com.zypg.cms.work.model.viewobject.illustration.query.CmsIllustrationQueryVOImpl;
import com.zypg.cms.work.model.viewobject.illustration.query.CmsIllustrationVOImpl;
import com.zypg.cms.work.model.viewobject.relation.CmsDocRelTVOImpl;

import java.sql.SQLException;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 24 15:04:44 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IllustrationAMImpl extends CustomApplicationModuleImpl implements IllustrationAM {
    /**
     * This is the default constructor (do not remove).
     */
    public IllustrationAMImpl() {
    }

    public void preEditIllustration(Number docId) {
        CmsIllustrationTVOImpl vo = this.getCmsIllustrationTVO();
        vo.setbvDocId(docId);
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            row.setAttribute("LastUpdateDate", new Date());
            vo.setCurrentRow(row);
        }
        preDocCategroupRel(docId);
    }

    public void initInfo4View(Number docId) {
        CmsDocTVOImpl docVO = this.getCmsDocTVO4View();
        docVO.setbvDocId(docId);
        docVO.executeQuery();
        CmsDocUcmRelTVOImpl durTVO = this.getCmsDocUcmRelTVO4FileList();
        durTVO.setbvDocId(docId);
        durTVO.executeQuery();
        Row row = docVO.first();
        if (row != null) {
            docVO.setCurrentRow(row);
        }
    }

    public void preDocCategroupRel(Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        docCategoryRelVO.setbvDocId(docId);
        docCategoryRelVO.executeQuery();
        Row row = docCategoryRelVO.first();
        if (row != null) {
            docCategoryRelVO.setCurrentRow(row);
        }
    }

    public void initIllustrationEditVO() {
        CmsIllustrationEditVOImpl vo = this.getCmsIllustrationEditVO();
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public void batchEditIllustration(String docIds) {
        CmsIllustrationTVOImpl vo = this.getCmsIllustrationTVO();
        CmsIllustrationEditVOImpl editVO = this.getCmsIllustrationEditVO();
        CmsIllustrationEditVORowImpl editRow = (CmsIllustrationEditVORowImpl)editVO.getCurrentRow();
        String[] strArray = docIds.split(",");
        for (String id : strArray) {
            try {
                Number docId = new Number(id);
                vo.setbvDocId(docId);
                vo.executeQuery();
                Row firstRow = vo.first();
                if (firstRow != null) {
                    CmsIllustrationTVORowImpl row = (CmsIllustrationTVORowImpl)firstRow;
                    for (String attr : editRow.getAttributeNames()) {
                        if (editRow.getAttribute(attr) != null) {
                            if ("Keyword".equals(attr)) {
                                String oldKeyword = row.getKeyword();
                                String newKeyword = null;
                                if (oldKeyword == null) {
                                    newKeyword = editRow.getAttribute(attr) + "";
                                } else {
                                    newKeyword = oldKeyword + "," + editRow.getAttribute(attr);
                                }
                                row.setAttribute(attr, newKeyword);
                            } else {
                                row.setAttribute(attr, editRow.getAttribute(attr));
                            }
                        }
                    }
                    row.setLastUpdatedBy(this.getCustomDBTransaction().getUserId());
                    row.setLastUpdateDate(new Date());
                    try {
                        if (editRow.getCategoryId() != null) {
                            updateCategoryRel(editRow.getCategoryId(), new Number(id));
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public void updateCategoryRel(Number categoryId, Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        docCategoryRelVO.setbvDocId(docId);
        docCategoryRelVO.executeQuery();
        Row row = docCategoryRelVO.first();
        if (row != null) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow = (CmsDocCategoryRelTVORowImpl)row;
            docCategoryRelNewRow.setCategoryId(categoryId);
        }
    }

    /**
     * 初始化高级查询面板
     */
    public void initComplexSearch4Illustration() {
        CmsIllustrationQVOImpl vo = this.getCmsIllustrationQVO();
        vo.executeQuery();
        vo.setCurrentRow(vo.first());
    }

    /**
     * Container's getter for CmsDocTVO.
     * @return CmsDocTVO
     */
    public CmsDocTVOImpl getCmsDocTVO() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO");
    }

    /**
     * Container's getter for CmsIllustrationTVO.
     * @return CmsIllustrationTVO
     */
    public CmsIllustrationTVOImpl getCmsIllustrationTVO() {
        return (CmsIllustrationTVOImpl)findViewObject("CmsIllustrationTVO");
    }

    /**
     * Container's getter for CmsIllustrationVO.
     * @return CmsIllustrationVO
     */
    public CmsIllustrationVOImpl getCmsIllustrationVO() {
        return (CmsIllustrationVOImpl)findViewObject("CmsIllustrationVO");
    }

    /**
     * Container's getter for CmsDocCategoryRelTVO.
     * @return CmsDocCategoryRelTVO
     */
    public CmsDocCategoryRelTVOImpl getCmsDocCategoryRelTVO() {
        return (CmsDocCategoryRelTVOImpl)findViewObject("CmsDocCategoryRelTVO");
    }

    /**
     * Container's getter for CmsIllustrationEditVO.
     * @return CmsIllustrationEditVO
     */
    public CmsIllustrationEditVOImpl getCmsIllustrationEditVO() {
        return (CmsIllustrationEditVOImpl)findViewObject("CmsIllustrationEditVO");
    }

    /**
     * Container's getter for CmsDocTVO4View.
     * @return CmsDocTVO4View
     */
    public CmsDocTVOImpl getCmsDocTVO4View() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO4View");
    }

    /**
     * Container's getter for CmsIllustrationTVO4View.
     * @return CmsIllustrationTVO4View
     */
    public CmsIllustrationTVOImpl getCmsIllustrationTVO4View() {
        return (CmsIllustrationTVOImpl)findViewObject("CmsIllustrationTVO4View");
    }

    /**
     * Container's getter for CmsDoc2IllustrationVL.
     * @return CmsDoc2IllustrationVL
     */
    public ViewLinkImpl getCmsDoc2IllustrationVL() {
        return (ViewLinkImpl)findViewLink("CmsDoc2IllustrationVL");
    }

    /**
     * Container's getter for CmsDocRelTVO4View.
     * @return CmsDocRelTVO4View
     */
    public CmsDocRelTVOImpl getCmsDocRelTVO4View() {
        return (CmsDocRelTVOImpl)findViewObject("CmsDocRelTVO4View");
    }

    /**
     * Container's getter for CmsDoc2DocRelVL.
     * @return CmsDoc2DocRelVL
     */
    public ViewLinkImpl getCmsDoc2DocRelVL() {
        return (ViewLinkImpl)findViewLink("CmsDoc2DocRelVL");
    }

    /**
     * Container's getter for CmsFigureExifInfoTVO4View.
     * @return CmsFigureExifInfoTVO4View
     */
    public CmsFigureExifInfoTVOImpl getCmsFigureExifInfoTVO4View() {
        return (CmsFigureExifInfoTVOImpl)findViewObject("CmsFigureExifInfoTVO4View");
    }

    /**
     * Container's getter for CmsDoc2ExifVL1.
     * @return CmsDoc2ExifVL1
     */
    public ViewLinkImpl getCmsDoc2ExifVL1() {
        return (ViewLinkImpl)findViewLink("CmsDoc2ExifVL1");
    }

    /**
     * Container's getter for CmsDocUcmRelTVO4FileList.
     * @return CmsDocUcmRelTVO4FileList
     */
    public CmsDocUcmRelTVOImpl getCmsDocUcmRelTVO4FileList() {
        return (CmsDocUcmRelTVOImpl)findViewObject("CmsDocUcmRelTVO4FileList");
    }

    /**
     * Container's getter for CmsIllustrationQueryVO.
     * @return CmsIllustrationQueryVO
     */
    public CmsIllustrationQueryVOImpl getCmsIllustrationQueryVO() {
        return (CmsIllustrationQueryVOImpl)findViewObject("CmsIllustrationQueryVO");
    }

    /**
     * Container's getter for CmsIllustrationQVO.
     * @return CmsIllustrationQVO
     */
    public CmsIllustrationQVOImpl getCmsIllustrationQVO() {
        return (CmsIllustrationQVOImpl)findViewObject("CmsIllustrationQVO");
    }
}
