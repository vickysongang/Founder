package com.zypg.cms.work.model.entity;

import com.honythink.applicationframework.hadf.CustomEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 23 15:11:23 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsFigureExifInfoTEOImpl extends CustomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        InfoId {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getInfoId();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setInfoId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        ImageDescription {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getImageDescription();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setImageDescription((String)value);
            }
        }
        ,
        Make {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getMake();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setMake((String)value);
            }
        }
        ,
        Model {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getModel();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setModel((String)value);
            }
        }
        ,
        Orientation {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getOrientation();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setOrientation((String)value);
            }
        }
        ,
        XResolution {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getXResolution();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setXResolution((String)value);
            }
        }
        ,
        YResolution {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getYResolution();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setYResolution((String)value);
            }
        }
        ,
        ResolutionUnit {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getResolutionUnit();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setResolutionUnit((String)value);
            }
        }
        ,
        DateTime {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getDateTime();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setDateTime((String)value);
            }
        }
        ,
        YcbcrPositioning {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getYcbcrPositioning();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setYcbcrPositioning((String)value);
            }
        }
        ,
        ExposureTime {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getExposureTime();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setExposureTime((String)value);
            }
        }
        ,
        FNumber {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFNumber();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFNumber((String)value);
            }
        }
        ,
        IsoSpeedRatings {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getIsoSpeedRatings();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setIsoSpeedRatings((String)value);
            }
        }
        ,
        ExifVersion {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getExifVersion();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setExifVersion((String)value);
            }
        }
        ,
        DateTimeOriginal {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getDateTimeOriginal();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setDateTimeOriginal((String)value);
            }
        }
        ,
        DateTimeDigitized {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getDateTimeDigitized();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setDateTimeDigitized((String)value);
            }
        }
        ,
        ComponentsConfiguration {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getComponentsConfiguration();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setComponentsConfiguration((String)value);
            }
        }
        ,
        CompressedBitsPerPixel {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getCompressedBitsPerPixel();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setCompressedBitsPerPixel((String)value);
            }
        }
        ,
        ShutterSpeedValue {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getShutterSpeedValue();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setShutterSpeedValue((String)value);
            }
        }
        ,
        ApertureValue {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getApertureValue();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setApertureValue((String)value);
            }
        }
        ,
        ExposureBiasValue {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getExposureBiasValue();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setExposureBiasValue((String)value);
            }
        }
        ,
        MaxApertureValue {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getMaxApertureValue();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setMaxApertureValue((String)value);
            }
        }
        ,
        MeteringMode {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getMeteringMode();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setMeteringMode((String)value);
            }
        }
        ,
        Flash {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFlash();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFlash((String)value);
            }
        }
        ,
        FocalLength {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFocalLength();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFocalLength((String)value);
            }
        }
        ,
        UserComment {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getUserComment();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setUserComment((String)value);
            }
        }
        ,
        FlashpixVersion {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFlashpixVersion();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFlashpixVersion((String)value);
            }
        }
        ,
        ColorSpace {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getColorSpace();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setColorSpace((String)value);
            }
        }
        ,
        ExifImageWidth {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getExifImageWidth();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setExifImageWidth((String)value);
            }
        }
        ,
        ExifImageHeight {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getExifImageHeight();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setExifImageHeight((String)value);
            }
        }
        ,
        FocalPlaneXResolution {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFocalPlaneXResolution();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFocalPlaneXResolution((String)value);
            }
        }
        ,
        FocalPlaneYResolution {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFocalPlaneYResolution();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFocalPlaneYResolution((String)value);
            }
        }
        ,
        FocalPlaneResolutionUnit {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFocalPlaneResolutionUnit();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFocalPlaneResolutionUnit((String)value);
            }
        }
        ,
        SensingMethod {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getSensingMethod();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setSensingMethod((String)value);
            }
        }
        ,
        FileSource {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getFileSource();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setFileSource((String)value);
            }
        }
        ,
        CustomRendered {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getCustomRendered();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setCustomRendered((String)value);
            }
        }
        ,
        ExposureMode {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getExposureMode();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setExposureMode((String)value);
            }
        }
        ,
        WhiteBalance {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getWhiteBalance();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setWhiteBalance((String)value);
            }
        }
        ,
        DigitalZoomRatio {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getDigitalZoomRatio();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setDigitalZoomRatio((String)value);
            }
        }
        ,
        SceneCaptureType {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getSceneCaptureType();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setSceneCaptureType((String)value);
            }
        }
        ,
        Compression {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getCompression();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setCompression((String)value);
            }
        }
        ,
        ThumbnailOffset {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getThumbnailOffset();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setThumbnailOffset((String)value);
            }
        }
        ,
        ThumbnailLength {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getThumbnailLength();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setThumbnailLength((String)value);
            }
        }
        ,
        ThumbnailData {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getThumbnailData();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setThumbnailData((String)value);
            }
        }
        ,
        ObjectVersionNumber {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getObjectVersionNumber();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreatedBy {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Attribute1 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(CmsFigureExifInfoTEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(CmsFigureExifInfoTEOImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsFigureExifInfoTEOImpl object);

        public abstract void put(CmsFigureExifInfoTEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INFOID = AttributesEnum.InfoId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int IMAGEDESCRIPTION = AttributesEnum.ImageDescription.index();
    public static final int MAKE = AttributesEnum.Make.index();
    public static final int MODEL = AttributesEnum.Model.index();
    public static final int ORIENTATION = AttributesEnum.Orientation.index();
    public static final int XRESOLUTION = AttributesEnum.XResolution.index();
    public static final int YRESOLUTION = AttributesEnum.YResolution.index();
    public static final int RESOLUTIONUNIT = AttributesEnum.ResolutionUnit.index();
    public static final int DATETIME = AttributesEnum.DateTime.index();
    public static final int YCBCRPOSITIONING = AttributesEnum.YcbcrPositioning.index();
    public static final int EXPOSURETIME = AttributesEnum.ExposureTime.index();
    public static final int FNUMBER = AttributesEnum.FNumber.index();
    public static final int ISOSPEEDRATINGS = AttributesEnum.IsoSpeedRatings.index();
    public static final int EXIFVERSION = AttributesEnum.ExifVersion.index();
    public static final int DATETIMEORIGINAL = AttributesEnum.DateTimeOriginal.index();
    public static final int DATETIMEDIGITIZED = AttributesEnum.DateTimeDigitized.index();
    public static final int COMPONENTSCONFIGURATION = AttributesEnum.ComponentsConfiguration.index();
    public static final int COMPRESSEDBITSPERPIXEL = AttributesEnum.CompressedBitsPerPixel.index();
    public static final int SHUTTERSPEEDVALUE = AttributesEnum.ShutterSpeedValue.index();
    public static final int APERTUREVALUE = AttributesEnum.ApertureValue.index();
    public static final int EXPOSUREBIASVALUE = AttributesEnum.ExposureBiasValue.index();
    public static final int MAXAPERTUREVALUE = AttributesEnum.MaxApertureValue.index();
    public static final int METERINGMODE = AttributesEnum.MeteringMode.index();
    public static final int FLASH = AttributesEnum.Flash.index();
    public static final int FOCALLENGTH = AttributesEnum.FocalLength.index();
    public static final int USERCOMMENT = AttributesEnum.UserComment.index();
    public static final int FLASHPIXVERSION = AttributesEnum.FlashpixVersion.index();
    public static final int COLORSPACE = AttributesEnum.ColorSpace.index();
    public static final int EXIFIMAGEWIDTH = AttributesEnum.ExifImageWidth.index();
    public static final int EXIFIMAGEHEIGHT = AttributesEnum.ExifImageHeight.index();
    public static final int FOCALPLANEXRESOLUTION = AttributesEnum.FocalPlaneXResolution.index();
    public static final int FOCALPLANEYRESOLUTION = AttributesEnum.FocalPlaneYResolution.index();
    public static final int FOCALPLANERESOLUTIONUNIT = AttributesEnum.FocalPlaneResolutionUnit.index();
    public static final int SENSINGMETHOD = AttributesEnum.SensingMethod.index();
    public static final int FILESOURCE = AttributesEnum.FileSource.index();
    public static final int CUSTOMRENDERED = AttributesEnum.CustomRendered.index();
    public static final int EXPOSUREMODE = AttributesEnum.ExposureMode.index();
    public static final int WHITEBALANCE = AttributesEnum.WhiteBalance.index();
    public static final int DIGITALZOOMRATIO = AttributesEnum.DigitalZoomRatio.index();
    public static final int SCENECAPTURETYPE = AttributesEnum.SceneCaptureType.index();
    public static final int COMPRESSION = AttributesEnum.Compression.index();
    public static final int THUMBNAILOFFSET = AttributesEnum.ThumbnailOffset.index();
    public static final int THUMBNAILLENGTH = AttributesEnum.ThumbnailLength.index();
    public static final int THUMBNAILDATA = AttributesEnum.ThumbnailData.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsFigureExifInfoTEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.zypg.cms.work.model.entity.CmsFigureExifInfoTEO");
    }

    /**
     * Gets the attribute value for InfoId, using the alias name InfoId.
     * @return the value of InfoId
     */
    public Number getInfoId() {
        return (Number)getAttributeInternal(INFOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InfoId.
     * @param value value to set the InfoId
     */
    public void setInfoId(Number value) {
        setAttributeInternal(INFOID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ImageDescription, using the alias name ImageDescription.
     * @return the value of ImageDescription
     */
    public String getImageDescription() {
        return (String)getAttributeInternal(IMAGEDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageDescription.
     * @param value value to set the ImageDescription
     */
    public void setImageDescription(String value) {
        setAttributeInternal(IMAGEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for Make, using the alias name Make.
     * @return the value of Make
     */
    public String getMake() {
        return (String)getAttributeInternal(MAKE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Make.
     * @param value value to set the Make
     */
    public void setMake(String value) {
        setAttributeInternal(MAKE, value);
    }

    /**
     * Gets the attribute value for Model, using the alias name Model.
     * @return the value of Model
     */
    public String getModel() {
        return (String)getAttributeInternal(MODEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Model.
     * @param value value to set the Model
     */
    public void setModel(String value) {
        setAttributeInternal(MODEL, value);
    }

    /**
     * Gets the attribute value for Orientation, using the alias name Orientation.
     * @return the value of Orientation
     */
    public String getOrientation() {
        return (String)getAttributeInternal(ORIENTATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Orientation.
     * @param value value to set the Orientation
     */
    public void setOrientation(String value) {
        setAttributeInternal(ORIENTATION, value);
    }

    /**
     * Gets the attribute value for XResolution, using the alias name XResolution.
     * @return the value of XResolution
     */
    public String getXResolution() {
        return (String)getAttributeInternal(XRESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for XResolution.
     * @param value value to set the XResolution
     */
    public void setXResolution(String value) {
        setAttributeInternal(XRESOLUTION, value);
    }

    /**
     * Gets the attribute value for YResolution, using the alias name YResolution.
     * @return the value of YResolution
     */
    public String getYResolution() {
        return (String)getAttributeInternal(YRESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for YResolution.
     * @param value value to set the YResolution
     */
    public void setYResolution(String value) {
        setAttributeInternal(YRESOLUTION, value);
    }

    /**
     * Gets the attribute value for ResolutionUnit, using the alias name ResolutionUnit.
     * @return the value of ResolutionUnit
     */
    public String getResolutionUnit() {
        return (String)getAttributeInternal(RESOLUTIONUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResolutionUnit.
     * @param value value to set the ResolutionUnit
     */
    public void setResolutionUnit(String value) {
        setAttributeInternal(RESOLUTIONUNIT, value);
    }

    /**
     * Gets the attribute value for DateTime, using the alias name DateTime.
     * @return the value of DateTime
     */
    public String getDateTime() {
        return (String)getAttributeInternal(DATETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateTime.
     * @param value value to set the DateTime
     */
    public void setDateTime(String value) {
        setAttributeInternal(DATETIME, value);
    }

    /**
     * Gets the attribute value for YcbcrPositioning, using the alias name YcbcrPositioning.
     * @return the value of YcbcrPositioning
     */
    public String getYcbcrPositioning() {
        return (String)getAttributeInternal(YCBCRPOSITIONING);
    }

    /**
     * Sets <code>value</code> as the attribute value for YcbcrPositioning.
     * @param value value to set the YcbcrPositioning
     */
    public void setYcbcrPositioning(String value) {
        setAttributeInternal(YCBCRPOSITIONING, value);
    }

    /**
     * Gets the attribute value for ExposureTime, using the alias name ExposureTime.
     * @return the value of ExposureTime
     */
    public String getExposureTime() {
        return (String)getAttributeInternal(EXPOSURETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExposureTime.
     * @param value value to set the ExposureTime
     */
    public void setExposureTime(String value) {
        setAttributeInternal(EXPOSURETIME, value);
    }

    /**
     * Gets the attribute value for FNumber, using the alias name FNumber.
     * @return the value of FNumber
     */
    public String getFNumber() {
        return (String)getAttributeInternal(FNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for FNumber.
     * @param value value to set the FNumber
     */
    public void setFNumber(String value) {
        setAttributeInternal(FNUMBER, value);
    }

    /**
     * Gets the attribute value for IsoSpeedRatings, using the alias name IsoSpeedRatings.
     * @return the value of IsoSpeedRatings
     */
    public String getIsoSpeedRatings() {
        return (String)getAttributeInternal(ISOSPEEDRATINGS);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsoSpeedRatings.
     * @param value value to set the IsoSpeedRatings
     */
    public void setIsoSpeedRatings(String value) {
        setAttributeInternal(ISOSPEEDRATINGS, value);
    }

    /**
     * Gets the attribute value for ExifVersion, using the alias name ExifVersion.
     * @return the value of ExifVersion
     */
    public String getExifVersion() {
        return (String)getAttributeInternal(EXIFVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExifVersion.
     * @param value value to set the ExifVersion
     */
    public void setExifVersion(String value) {
        setAttributeInternal(EXIFVERSION, value);
    }

    /**
     * Gets the attribute value for DateTimeOriginal, using the alias name DateTimeOriginal.
     * @return the value of DateTimeOriginal
     */
    public String getDateTimeOriginal() {
        return (String)getAttributeInternal(DATETIMEORIGINAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateTimeOriginal.
     * @param value value to set the DateTimeOriginal
     */
    public void setDateTimeOriginal(String value) {
        setAttributeInternal(DATETIMEORIGINAL, value);
    }

    /**
     * Gets the attribute value for DateTimeDigitized, using the alias name DateTimeDigitized.
     * @return the value of DateTimeDigitized
     */
    public String getDateTimeDigitized() {
        return (String)getAttributeInternal(DATETIMEDIGITIZED);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateTimeDigitized.
     * @param value value to set the DateTimeDigitized
     */
    public void setDateTimeDigitized(String value) {
        setAttributeInternal(DATETIMEDIGITIZED, value);
    }

    /**
     * Gets the attribute value for ComponentsConfiguration, using the alias name ComponentsConfiguration.
     * @return the value of ComponentsConfiguration
     */
    public String getComponentsConfiguration() {
        return (String)getAttributeInternal(COMPONENTSCONFIGURATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ComponentsConfiguration.
     * @param value value to set the ComponentsConfiguration
     */
    public void setComponentsConfiguration(String value) {
        setAttributeInternal(COMPONENTSCONFIGURATION, value);
    }

    /**
     * Gets the attribute value for CompressedBitsPerPixel, using the alias name CompressedBitsPerPixel.
     * @return the value of CompressedBitsPerPixel
     */
    public String getCompressedBitsPerPixel() {
        return (String)getAttributeInternal(COMPRESSEDBITSPERPIXEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompressedBitsPerPixel.
     * @param value value to set the CompressedBitsPerPixel
     */
    public void setCompressedBitsPerPixel(String value) {
        setAttributeInternal(COMPRESSEDBITSPERPIXEL, value);
    }

    /**
     * Gets the attribute value for ShutterSpeedValue, using the alias name ShutterSpeedValue.
     * @return the value of ShutterSpeedValue
     */
    public String getShutterSpeedValue() {
        return (String)getAttributeInternal(SHUTTERSPEEDVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShutterSpeedValue.
     * @param value value to set the ShutterSpeedValue
     */
    public void setShutterSpeedValue(String value) {
        setAttributeInternal(SHUTTERSPEEDVALUE, value);
    }

    /**
     * Gets the attribute value for ApertureValue, using the alias name ApertureValue.
     * @return the value of ApertureValue
     */
    public String getApertureValue() {
        return (String)getAttributeInternal(APERTUREVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApertureValue.
     * @param value value to set the ApertureValue
     */
    public void setApertureValue(String value) {
        setAttributeInternal(APERTUREVALUE, value);
    }

    /**
     * Gets the attribute value for ExposureBiasValue, using the alias name ExposureBiasValue.
     * @return the value of ExposureBiasValue
     */
    public String getExposureBiasValue() {
        return (String)getAttributeInternal(EXPOSUREBIASVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExposureBiasValue.
     * @param value value to set the ExposureBiasValue
     */
    public void setExposureBiasValue(String value) {
        setAttributeInternal(EXPOSUREBIASVALUE, value);
    }

    /**
     * Gets the attribute value for MaxApertureValue, using the alias name MaxApertureValue.
     * @return the value of MaxApertureValue
     */
    public String getMaxApertureValue() {
        return (String)getAttributeInternal(MAXAPERTUREVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxApertureValue.
     * @param value value to set the MaxApertureValue
     */
    public void setMaxApertureValue(String value) {
        setAttributeInternal(MAXAPERTUREVALUE, value);
    }

    /**
     * Gets the attribute value for MeteringMode, using the alias name MeteringMode.
     * @return the value of MeteringMode
     */
    public String getMeteringMode() {
        return (String)getAttributeInternal(METERINGMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MeteringMode.
     * @param value value to set the MeteringMode
     */
    public void setMeteringMode(String value) {
        setAttributeInternal(METERINGMODE, value);
    }

    /**
     * Gets the attribute value for Flash, using the alias name Flash.
     * @return the value of Flash
     */
    public String getFlash() {
        return (String)getAttributeInternal(FLASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Flash.
     * @param value value to set the Flash
     */
    public void setFlash(String value) {
        setAttributeInternal(FLASH, value);
    }

    /**
     * Gets the attribute value for FocalLength, using the alias name FocalLength.
     * @return the value of FocalLength
     */
    public String getFocalLength() {
        return (String)getAttributeInternal(FOCALLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for FocalLength.
     * @param value value to set the FocalLength
     */
    public void setFocalLength(String value) {
        setAttributeInternal(FOCALLENGTH, value);
    }

    /**
     * Gets the attribute value for UserComment, using the alias name UserComment.
     * @return the value of UserComment
     */
    public String getUserComment() {
        return (String)getAttributeInternal(USERCOMMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserComment.
     * @param value value to set the UserComment
     */
    public void setUserComment(String value) {
        setAttributeInternal(USERCOMMENT, value);
    }

    /**
     * Gets the attribute value for FlashpixVersion, using the alias name FlashpixVersion.
     * @return the value of FlashpixVersion
     */
    public String getFlashpixVersion() {
        return (String)getAttributeInternal(FLASHPIXVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlashpixVersion.
     * @param value value to set the FlashpixVersion
     */
    public void setFlashpixVersion(String value) {
        setAttributeInternal(FLASHPIXVERSION, value);
    }

    /**
     * Gets the attribute value for ColorSpace, using the alias name ColorSpace.
     * @return the value of ColorSpace
     */
    public String getColorSpace() {
        return (String)getAttributeInternal(COLORSPACE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ColorSpace.
     * @param value value to set the ColorSpace
     */
    public void setColorSpace(String value) {
        setAttributeInternal(COLORSPACE, value);
    }

    /**
     * Gets the attribute value for ExifImageWidth, using the alias name ExifImageWidth.
     * @return the value of ExifImageWidth
     */
    public String getExifImageWidth() {
        return (String)getAttributeInternal(EXIFIMAGEWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExifImageWidth.
     * @param value value to set the ExifImageWidth
     */
    public void setExifImageWidth(String value) {
        setAttributeInternal(EXIFIMAGEWIDTH, value);
    }

    /**
     * Gets the attribute value for ExifImageHeight, using the alias name ExifImageHeight.
     * @return the value of ExifImageHeight
     */
    public String getExifImageHeight() {
        return (String)getAttributeInternal(EXIFIMAGEHEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExifImageHeight.
     * @param value value to set the ExifImageHeight
     */
    public void setExifImageHeight(String value) {
        setAttributeInternal(EXIFIMAGEHEIGHT, value);
    }

    /**
     * Gets the attribute value for FocalPlaneXResolution, using the alias name FocalPlaneXResolution.
     * @return the value of FocalPlaneXResolution
     */
    public String getFocalPlaneXResolution() {
        return (String)getAttributeInternal(FOCALPLANEXRESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FocalPlaneXResolution.
     * @param value value to set the FocalPlaneXResolution
     */
    public void setFocalPlaneXResolution(String value) {
        setAttributeInternal(FOCALPLANEXRESOLUTION, value);
    }

    /**
     * Gets the attribute value for FocalPlaneYResolution, using the alias name FocalPlaneYResolution.
     * @return the value of FocalPlaneYResolution
     */
    public String getFocalPlaneYResolution() {
        return (String)getAttributeInternal(FOCALPLANEYRESOLUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FocalPlaneYResolution.
     * @param value value to set the FocalPlaneYResolution
     */
    public void setFocalPlaneYResolution(String value) {
        setAttributeInternal(FOCALPLANEYRESOLUTION, value);
    }

    /**
     * Gets the attribute value for FocalPlaneResolutionUnit, using the alias name FocalPlaneResolutionUnit.
     * @return the value of FocalPlaneResolutionUnit
     */
    public String getFocalPlaneResolutionUnit() {
        return (String)getAttributeInternal(FOCALPLANERESOLUTIONUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FocalPlaneResolutionUnit.
     * @param value value to set the FocalPlaneResolutionUnit
     */
    public void setFocalPlaneResolutionUnit(String value) {
        setAttributeInternal(FOCALPLANERESOLUTIONUNIT, value);
    }

    /**
     * Gets the attribute value for SensingMethod, using the alias name SensingMethod.
     * @return the value of SensingMethod
     */
    public String getSensingMethod() {
        return (String)getAttributeInternal(SENSINGMETHOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for SensingMethod.
     * @param value value to set the SensingMethod
     */
    public void setSensingMethod(String value) {
        setAttributeInternal(SENSINGMETHOD, value);
    }

    /**
     * Gets the attribute value for FileSource, using the alias name FileSource.
     * @return the value of FileSource
     */
    public String getFileSource() {
        return (String)getAttributeInternal(FILESOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileSource.
     * @param value value to set the FileSource
     */
    public void setFileSource(String value) {
        setAttributeInternal(FILESOURCE, value);
    }

    /**
     * Gets the attribute value for CustomRendered, using the alias name CustomRendered.
     * @return the value of CustomRendered
     */
    public String getCustomRendered() {
        return (String)getAttributeInternal(CUSTOMRENDERED);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomRendered.
     * @param value value to set the CustomRendered
     */
    public void setCustomRendered(String value) {
        setAttributeInternal(CUSTOMRENDERED, value);
    }

    /**
     * Gets the attribute value for ExposureMode, using the alias name ExposureMode.
     * @return the value of ExposureMode
     */
    public String getExposureMode() {
        return (String)getAttributeInternal(EXPOSUREMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExposureMode.
     * @param value value to set the ExposureMode
     */
    public void setExposureMode(String value) {
        setAttributeInternal(EXPOSUREMODE, value);
    }

    /**
     * Gets the attribute value for WhiteBalance, using the alias name WhiteBalance.
     * @return the value of WhiteBalance
     */
    public String getWhiteBalance() {
        return (String)getAttributeInternal(WHITEBALANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhiteBalance.
     * @param value value to set the WhiteBalance
     */
    public void setWhiteBalance(String value) {
        setAttributeInternal(WHITEBALANCE, value);
    }

    /**
     * Gets the attribute value for DigitalZoomRatio, using the alias name DigitalZoomRatio.
     * @return the value of DigitalZoomRatio
     */
    public String getDigitalZoomRatio() {
        return (String)getAttributeInternal(DIGITALZOOMRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DigitalZoomRatio.
     * @param value value to set the DigitalZoomRatio
     */
    public void setDigitalZoomRatio(String value) {
        setAttributeInternal(DIGITALZOOMRATIO, value);
    }

    /**
     * Gets the attribute value for SceneCaptureType, using the alias name SceneCaptureType.
     * @return the value of SceneCaptureType
     */
    public String getSceneCaptureType() {
        return (String)getAttributeInternal(SCENECAPTURETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SceneCaptureType.
     * @param value value to set the SceneCaptureType
     */
    public void setSceneCaptureType(String value) {
        setAttributeInternal(SCENECAPTURETYPE, value);
    }

    /**
     * Gets the attribute value for Compression, using the alias name Compression.
     * @return the value of Compression
     */
    public String getCompression() {
        return (String)getAttributeInternal(COMPRESSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Compression.
     * @param value value to set the Compression
     */
    public void setCompression(String value) {
        setAttributeInternal(COMPRESSION, value);
    }

    /**
     * Gets the attribute value for ThumbnailOffset, using the alias name ThumbnailOffset.
     * @return the value of ThumbnailOffset
     */
    public String getThumbnailOffset() {
        return (String)getAttributeInternal(THUMBNAILOFFSET);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThumbnailOffset.
     * @param value value to set the ThumbnailOffset
     */
    public void setThumbnailOffset(String value) {
        setAttributeInternal(THUMBNAILOFFSET, value);
    }

    /**
     * Gets the attribute value for ThumbnailLength, using the alias name ThumbnailLength.
     * @return the value of ThumbnailLength
     */
    public String getThumbnailLength() {
        return (String)getAttributeInternal(THUMBNAILLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThumbnailLength.
     * @param value value to set the ThumbnailLength
     */
    public void setThumbnailLength(String value) {
        setAttributeInternal(THUMBNAILLENGTH, value);
    }

    /**
     * Gets the attribute value for ThumbnailData, using the alias name ThumbnailData.
     * @return the value of ThumbnailData
     */
    public String getThumbnailData() {
        return (String)getAttributeInternal(THUMBNAILDATA);
    }

    /**
     * Sets <code>value</code> as the attribute value for ThumbnailData.
     * @param value value to set the ThumbnailData
     */
    public void setThumbnailData(String value) {
        setAttributeInternal(THUMBNAILDATA, value);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the value of ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the value of Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the value of Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the value of Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the value of Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the value of Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the value of Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the value of Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the value of Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the value of Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the value of Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the value of Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the value of Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the value of Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the value of Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the value of Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param infoId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number infoId) {
        return new Key(new Object[]{infoId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl si = new SequenceImpl("CMS_FIGURE_EXIF_INFO_S", this.getDBTransaction());
        this.setInfoId(si.getSequenceNumber());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }
}
