package com.zypg.cms.work.model.viewobject.copyright.query;

import java.util.Hashtable;
import java.util.List;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 28 20:06:40 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Cms3rdAuthorizationOrderVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        OrderName {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getOrderName();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setOrderName((String)value);
            }
        }
        ,
        AuthorizedCompany {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedCompany();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedCompany((String)value);
            }
        }
        ,
        AuthorizedCompanyName {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedCompanyName();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedCompanyName((String)value);
            }
        }
        ,
        AuthorizedType {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedType();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedType((String)value);
            }
        }
        ,
        AuthorizedTypeDisplay {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedTypeDisplay();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedTypeDisplay((String)value);
            }
        }
        ,
        AuthorizedArea {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedArea();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedArea((String)value);
            }
        }
        ,
        AuthorizedLang {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedLang();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedLang((String)value);
            }
        }
        ,
        AuthorizedFileType {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedFileType();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedFileType((String)value);
            }
        }
        ,
        IncludePublicCopyrightFlag {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getIncludePublicCopyrightFlag();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setIncludePublicCopyrightFlag((String)value);
            }
        }
        ,
        AuthorizedStartTime {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedStartTime();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedStartTime((Date)value);
            }
        }
        ,
        AuthorizedValidPeriod {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getAuthorizedValidPeriod();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAuthorizedValidPeriod((String)value);
            }
        }
        ,
        Status {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        LibCode {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        Checked {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ,
        CategoryId {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        CategoryGroupType {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getCategoryGroupType();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setCategoryGroupType((String)value);
            }
        }
        ,
        DeleteFlag {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        }
        ,
        CompCode {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        Remarks {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CmsAttachVO {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getCmsAttachVO();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4Company {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getLookup4Company();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4AuthorizedType {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getLookup4AuthorizedType();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4AuthorizedFileType {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getLookup4AuthorizedFileType();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4AuthorizedValidPeriod {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getLookup4AuthorizedValidPeriod();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4YesOrNo {
            public Object get(Cms3rdAuthorizationOrderVORowImpl obj) {
                return obj.getLookup4YesOrNo();
            }

            public void put(Cms3rdAuthorizationOrderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cms3rdAuthorizationOrderVORowImpl object);

        public abstract void put(Cms3rdAuthorizationOrderVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ORDERNAME = AttributesEnum.OrderName.index();
    public static final int AUTHORIZEDCOMPANY = AttributesEnum.AuthorizedCompany.index();
    public static final int AUTHORIZEDCOMPANYNAME = AttributesEnum.AuthorizedCompanyName.index();
    public static final int AUTHORIZEDTYPE = AttributesEnum.AuthorizedType.index();
    public static final int AUTHORIZEDTYPEDISPLAY = AttributesEnum.AuthorizedTypeDisplay.index();
    public static final int AUTHORIZEDAREA = AttributesEnum.AuthorizedArea.index();
    public static final int AUTHORIZEDLANG = AttributesEnum.AuthorizedLang.index();
    public static final int AUTHORIZEDFILETYPE = AttributesEnum.AuthorizedFileType.index();
    public static final int INCLUDEPUBLICCOPYRIGHTFLAG = AttributesEnum.IncludePublicCopyrightFlag.index();
    public static final int AUTHORIZEDSTARTTIME = AttributesEnum.AuthorizedStartTime.index();
    public static final int AUTHORIZEDVALIDPERIOD = AttributesEnum.AuthorizedValidPeriod.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int CATEGORYGROUPTYPE = AttributesEnum.CategoryGroupType.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CMSATTACHVO = AttributesEnum.CmsAttachVO.index();
    public static final int LOOKUP4COMPANY = AttributesEnum.Lookup4Company.index();
    public static final int LOOKUP4AUTHORIZEDTYPE = AttributesEnum.Lookup4AuthorizedType.index();
    public static final int LOOKUP4AUTHORIZEDFILETYPE = AttributesEnum.Lookup4AuthorizedFileType.index();
    public static final int LOOKUP4AUTHORIZEDVALIDPERIOD = AttributesEnum.Lookup4AuthorizedValidPeriod.index();
    public static final int LOOKUP4YESORNO = AttributesEnum.Lookup4YesOrNo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Cms3rdAuthorizationOrderVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderName.
     * @return the OrderName
     */
    public String getOrderName() {
        return (String) getAttributeInternal(ORDERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderName.
     * @param value value to set the  OrderName
     */
    public void setOrderName(String value) {
        setAttributeInternal(ORDERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedCompany.
     * @return the AuthorizedCompany
     */
    public String getAuthorizedCompany() {
        return (String) getAttributeInternal(AUTHORIZEDCOMPANY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedCompany.
     * @param value value to set the  AuthorizedCompany
     */
    public void setAuthorizedCompany(String value) {
        setAttributeInternal(AUTHORIZEDCOMPANY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedCompanyName.
     * @return the AuthorizedCompanyName
     */
    public String getAuthorizedCompanyName() {
        return (String) getAttributeInternal(AUTHORIZEDCOMPANYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedCompanyName.
     * @param value value to set the  AuthorizedCompanyName
     */
    public void setAuthorizedCompanyName(String value) {
        setAttributeInternal(AUTHORIZEDCOMPANYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedType.
     * @return the AuthorizedType
     */
    public String getAuthorizedType() {
        return (String) getAttributeInternal(AUTHORIZEDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedType.
     * @param value value to set the  AuthorizedType
     */
    public void setAuthorizedType(String value) {
        setAttributeInternal(AUTHORIZEDTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedTypeDisplay.
     * @return the AuthorizedTypeDisplay
     */
    public String getAuthorizedTypeDisplay() {
        return (String) getAttributeInternal(AUTHORIZEDTYPEDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedTypeDisplay.
     * @param value value to set the  AuthorizedTypeDisplay
     */
    public void setAuthorizedTypeDisplay(String value) {
        setAttributeInternal(AUTHORIZEDTYPEDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedArea.
     * @return the AuthorizedArea
     */
    public String getAuthorizedArea() {
        return (String) getAttributeInternal(AUTHORIZEDAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedArea.
     * @param value value to set the  AuthorizedArea
     */
    public void setAuthorizedArea(String value) {
        setAttributeInternal(AUTHORIZEDAREA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedLang.
     * @return the AuthorizedLang
     */
    public String getAuthorizedLang() {
        return (String) getAttributeInternal(AUTHORIZEDLANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedLang.
     * @param value value to set the  AuthorizedLang
     */
    public void setAuthorizedLang(String value) {
        setAttributeInternal(AUTHORIZEDLANG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedFileType.
     * @return the AuthorizedFileType
     */
    public String getAuthorizedFileType() {
        return (String) getAttributeInternal(AUTHORIZEDFILETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedFileType.
     * @param value value to set the  AuthorizedFileType
     */
    public void setAuthorizedFileType(String value) {
        setAttributeInternal(AUTHORIZEDFILETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IncludePublicCopyrightFlag.
     * @return the IncludePublicCopyrightFlag
     */
    public String getIncludePublicCopyrightFlag() {
        return (String) getAttributeInternal(INCLUDEPUBLICCOPYRIGHTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IncludePublicCopyrightFlag.
     * @param value value to set the  IncludePublicCopyrightFlag
     */
    public void setIncludePublicCopyrightFlag(String value) {
        setAttributeInternal(INCLUDEPUBLICCOPYRIGHTFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedStartTime.
     * @return the AuthorizedStartTime
     */
    public Date getAuthorizedStartTime() {
        return (Date) getAttributeInternal(AUTHORIZEDSTARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedStartTime.
     * @param value value to set the  AuthorizedStartTime
     */
    public void setAuthorizedStartTime(Date value) {
        setAttributeInternal(AUTHORIZEDSTARTTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthorizedValidPeriod.
     * @return the AuthorizedValidPeriod
     */
    public String getAuthorizedValidPeriod() {
        return (String) getAttributeInternal(AUTHORIZEDVALIDPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthorizedValidPeriod.
     * @param value value to set the  AuthorizedValidPeriod
     */
    public void setAuthorizedValidPeriod(String value) {
        setAttributeInternal(AUTHORIZEDVALIDPERIOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        Boolean result = null;
        Hashtable map = this.getDBTransaction().getSession().getUserData();
        String status = null;
        if ("Y".equals(this.getDeleteFlag())) {
            status = "DELETED_"+this.getLibCode();
        } else {
            status = this.getStatus();
        }
        String selectAllFlag = (String)map.get(status + "_selectAllFlag");
        String key = status + "_" + this.getDocId();
        List<String> currSelectedList = (List<String>)map.get(status + "_currSelected");
        if ("O".equals(selectAllFlag)) {
            if (currSelectedList.contains(key)) {
                result = true;
            } else {
                result = false;
            }
        } else {
            if ("Y".equals(selectAllFlag)) {
                result = true;
            } else if ("N".equals(selectAllFlag)) {
                result = false;
            }
        }
        this.setChecked(result);
        return (Boolean)getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryId.
     * @return the CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryId.
     * @param value value to set the  CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryGroupType.
     * @return the CategoryGroupType
     */
    public String getCategoryGroupType() {
        return (String) getAttributeInternal(CATEGORYGROUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryGroupType.
     * @param value value to set the  CategoryGroupType
     */
    public void setCategoryGroupType(String value) {
        setAttributeInternal(CATEGORYGROUPTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CmsAttachVO.
     */
    public RowIterator getCmsAttachVO() {
        return (RowIterator)getAttributeInternal(CMSATTACHVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4Company.
     */
    public RowSet getLookup4Company() {
        return (RowSet)getAttributeInternal(LOOKUP4COMPANY);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4AuthorizedType.
     */
    public RowSet getLookup4AuthorizedType() {
        return (RowSet)getAttributeInternal(LOOKUP4AUTHORIZEDTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4AuthorizedFileType.
     */
    public RowSet getLookup4AuthorizedFileType() {
        return (RowSet)getAttributeInternal(LOOKUP4AUTHORIZEDFILETYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4AuthorizedValidPeriod.
     */
    public RowSet getLookup4AuthorizedValidPeriod() {
        return (RowSet)getAttributeInternal(LOOKUP4AUTHORIZEDVALIDPERIOD);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4YesOrNo.
     */
    public RowSet getLookup4YesOrNo() {
        return (RowSet)getAttributeInternal(LOOKUP4YESORNO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
