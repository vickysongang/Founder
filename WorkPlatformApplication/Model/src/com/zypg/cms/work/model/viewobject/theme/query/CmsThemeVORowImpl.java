package com.zypg.cms.work.model.viewobject.theme.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 28 17:11:10 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsThemeVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ThemeId {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getThemeId();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setThemeId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        ThemeName {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getThemeName();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setThemeName((String)value);
            }
        }
        ,
        ThemeDesc {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getThemeDesc();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setThemeDesc((String)value);
            }
        }
        ,
        BindingThemeId {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getBindingThemeId();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setBindingThemeId((Number)value);
            }
        }
        ,
        BindingThemeName {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getBindingThemeName();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setBindingThemeName((String)value);
            }
        }
        ,
        PublicDate {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getPublicDate();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setPublicDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Status {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        Checked {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ,
        DiplayName {
            public Object get(CmsThemeVORowImpl obj) {
                return obj.getDiplayName();
            }

            public void put(CmsThemeVORowImpl obj, Object value) {
                obj.setDiplayName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsThemeVORowImpl object);

        public abstract void put(CmsThemeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int THEMEID = AttributesEnum.ThemeId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int THEMENAME = AttributesEnum.ThemeName.index();
    public static final int THEMEDESC = AttributesEnum.ThemeDesc.index();
    public static final int BINDINGTHEMEID = AttributesEnum.BindingThemeId.index();
    public static final int BINDINGTHEMENAME = AttributesEnum.BindingThemeName.index();
    public static final int PUBLICDATE = AttributesEnum.PublicDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();
    public static final int DIPLAYNAME = AttributesEnum.DiplayName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsThemeVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ThemeId.
     * @return the ThemeId
     */
    public Number getThemeId() {
        return (Number)getAttributeInternal(THEMEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThemeId.
     * @param value value to set the  ThemeId
     */
    public void setThemeId(Number value) {
        setAttributeInternal(THEMEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThemeName.
     * @return the ThemeName
     */
    public String getThemeName() {
        return (String)getAttributeInternal(THEMENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThemeName.
     * @param value value to set the  ThemeName
     */
    public void setThemeName(String value) {
        setAttributeInternal(THEMENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThemeDesc.
     * @return the ThemeDesc
     */
    public String getThemeDesc() {
        return (String)getAttributeInternal(THEMEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThemeDesc.
     * @param value value to set the  ThemeDesc
     */
    public void setThemeDesc(String value) {
        setAttributeInternal(THEMEDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BindingThemeId.
     * @return the BindingThemeId
     */
    public Number getBindingThemeId() {
        return (Number)getAttributeInternal(BINDINGTHEMEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BindingThemeId.
     * @param value value to set the  BindingThemeId
     */
    public void setBindingThemeId(Number value) {
        setAttributeInternal(BINDINGTHEMEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BindingThemeName.
     * @return the BindingThemeName
     */
    public String getBindingThemeName() {
        return (String)getAttributeInternal(BINDINGTHEMENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BindingThemeName.
     * @param value value to set the  BindingThemeName
     */
    public void setBindingThemeName(String value) {
        setAttributeInternal(BINDINGTHEMENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PublicDate.
     * @return the PublicDate
     */
    public Date getPublicDate() {
        return (Date)getAttributeInternal(PUBLICDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PublicDate.
     * @param value value to set the  PublicDate
     */
    public void setPublicDate(Date value) {
        setAttributeInternal(PUBLICDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedBy.
     * @param value value to set the  CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate.
     * @param value value to set the  CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdatedBy.
     * @param value value to set the  LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String)getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String)getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        Boolean result = null;
        Hashtable map = this.getDBTransaction().getSession().getUserData();
        String selectAllFlag = (String)map.get(this.getStatus() + "_selectAllFlag");
        String key = this.getStatus() + "_" + this.getDocId();
        List<String> currSelectedList = (List<String>)map.get(this.getStatus() + "_currSelected");
        if (currSelectedList == null) {
            currSelectedList = new ArrayList<String>();
        }
        if ("O".equals(selectAllFlag)) {
            if (currSelectedList.contains(key)) {
                result = true;
            } else {
                result = false;
            }
        } else {
            if ("Y".equals(selectAllFlag)) {
                result = true;
            } else if ("N".equals(selectAllFlag)) {
                result = false;
            }
        }
        this.setChecked(result);
        return (Boolean)getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiplayName.
     * @return the DiplayName
     */
    public String getDiplayName() {
        return (String) getAttributeInternal(DIPLAYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiplayName.
     * @param value value to set the  DiplayName
     */
    public void setDiplayName(String value) {
        setAttributeInternal(DIPLAYNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
