package com.zypg.cms.work.model.viewobject.entry;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 18 18:48:36 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsEncyclopediasEntryEditVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Source {
            public Object get(CmsEncyclopediasEntryEditVORowImpl obj) {
                return obj.getSource();
            }

            public void put(CmsEncyclopediasEntryEditVORowImpl obj, Object value) {
                obj.setSource((String)value);
            }
        }
        ,
        KnowledgePoint {
            public Object get(CmsEncyclopediasEntryEditVORowImpl obj) {
                return obj.getKnowledgePoint();
            }

            public void put(CmsEncyclopediasEntryEditVORowImpl obj, Object value) {
                obj.setKnowledgePoint((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsEncyclopediasEntryEditVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsEncyclopediasEntryEditVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        CategoryId {
            public Object get(CmsEncyclopediasEntryEditVORowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(CmsEncyclopediasEntryEditVORowImpl obj, Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        CategoryName {
            public Object get(CmsEncyclopediasEntryEditVORowImpl obj) {
                return obj.getCategoryName();
            }

            public void put(CmsEncyclopediasEntryEditVORowImpl obj, Object value) {
                obj.setCategoryName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsEncyclopediasEntryEditVORowImpl object);

        public abstract void put(CmsEncyclopediasEntryEditVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SOURCE = AttributesEnum.Source.index();
    public static final int KNOWLEDGEPOINT = AttributesEnum.KnowledgePoint.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int CATEGORYNAME = AttributesEnum.CategoryName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsEncyclopediasEntryEditVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Source.
     * @return the Source
     */
    public String getSource() {
        return (String) getAttributeInternal(SOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Source.
     * @param value value to set the  Source
     */
    public void setSource(String value) {
        setAttributeInternal(SOURCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute KnowledgePoint.
     * @return the KnowledgePoint
     */
    public String getKnowledgePoint() {
        return (String) getAttributeInternal(KNOWLEDGEPOINT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute KnowledgePoint.
     * @param value value to set the  KnowledgePoint
     */
    public void setKnowledgePoint(String value) {
        setAttributeInternal(KNOWLEDGEPOINT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String) getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryId.
     * @return the CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryId.
     * @param value value to set the  CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryName.
     * @return the CategoryName
     */
    public String getCategoryName() {
        return (String) getAttributeInternal(CATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryName.
     * @param value value to set the  CategoryName
     */
    public void setCategoryName(String value) {
        setAttributeInternal(CATEGORYNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
