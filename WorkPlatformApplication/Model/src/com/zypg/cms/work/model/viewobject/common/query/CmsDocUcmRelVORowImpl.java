package com.zypg.cms.work.model.viewobject.common.query;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 24 11:49:16 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsDocUcmRelVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        UcmDocname {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getUcmDocname();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setUcmDocname((String)value);
            }
        }
        ,
        FileName {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getFileName();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setFileName((String)value);
            }
        }
        ,
        FtpPath {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getFtpPath();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setFtpPath((String)value);
            }
        }
        ,
        UcmDid {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getUcmDid();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setUcmDid((Number)value);
            }
        }
        ,
        FtpUploadDate {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getFtpUploadDate();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setFtpUploadDate((String)value);
            }
        }
        ,
        RefDocId {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getRefDocId();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setRefDocId((Number)value);
            }
        }
        ,
        Attribute1 {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        DocType {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getDocType();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setDocType((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(CmsDocUcmRelVORowImpl obj) {
                return obj.getAttribute15();
            }

            public void put(CmsDocUcmRelVORowImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsDocUcmRelVORowImpl object);

        public abstract void put(CmsDocUcmRelVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int UCMDOCNAME = AttributesEnum.UcmDocname.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FTPPATH = AttributesEnum.FtpPath.index();
    public static final int UCMDID = AttributesEnum.UcmDid.index();
    public static final int FTPUPLOADDATE = AttributesEnum.FtpUploadDate.index();
    public static final int REFDOCID = AttributesEnum.RefDocId.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsDocUcmRelVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UcmDocname.
     * @return the UcmDocname
     */
    public String getUcmDocname() {
        return (String) getAttributeInternal(UCMDOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UcmDocname.
     * @param value value to set the  UcmDocname
     */
    public void setUcmDocname(String value) {
        setAttributeInternal(UCMDOCNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UcmDocName.
     * @return the UcmDocName
     */
    public String getUcmDocName() {
        return (String) getAttributeInternal(UCMDOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UcmDocName.
     * @param value value to set the  UcmDocName
     */
    public void setUcmDocName(String value) {
        setAttributeInternal(UCMDOCNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileName.
     * @return the FileName
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileName.
     * @param value value to set the  FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FtpPath.
     * @return the FtpPath
     */
    public String getFtpPath() {
        return (String) getAttributeInternal(FTPPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FtpPath.
     * @param value value to set the  FtpPath
     */
    public void setFtpPath(String value) {
        setAttributeInternal(FTPPATH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UcmDid.
     * @return the UcmDid
     */
    public Number getUcmDid() {
        return (Number) getAttributeInternal(UCMDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UcmDid.
     * @param value value to set the  UcmDid
     */
    public void setUcmDid(Number value) {
        setAttributeInternal(UCMDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FtpUploadDate.
     * @return the FtpUploadDate
     */
    public String getFtpUploadDate() {
        return (String) getAttributeInternal(FTPUPLOADDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FtpUploadDate.
     * @param value value to set the  FtpUploadDate
     */
    public void setFtpUploadDate(String value) {
        setAttributeInternal(FTPUPLOADDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RefDocId.
     * @return the RefDocId
     */
    public Number getRefDocId() {
        return (Number)getAttributeInternal(REFDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RefDocId.
     * @param value value to set the  RefDocId
     */
    public void setRefDocId(Number value) {
        setAttributeInternal(REFDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute1.
     * @param value value to set the  Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute2.
     * @param value value to set the  Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute3.
     * @param value value to set the  Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocType.
     * @return the DocType
     */
    public String getDocType() {
        return (String) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocType.
     * @param value value to set the  DocType
     */
    public void setDocType(String value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute15.
     * @param value value to set the  Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
