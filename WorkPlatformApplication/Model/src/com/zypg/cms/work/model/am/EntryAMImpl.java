package com.zypg.cms.work.model.am;


import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryEditVOImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryEditVORowImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryTVOImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVORowImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsEncyclopediasEntryTVOImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryEditVOImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryEditVORowImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsWorksEntryTVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEncyclopediasEntryQueryVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEncyclopediasEntryVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEncyclopediasEntryViewVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEntryDupLibVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEntryDupMasterEntryVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEntryDupResultVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsEntryDupSimilarVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsWorksEntryQueryVOImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsWorksEntryVOImpl;

import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.viewobject.entry.CmsEncyclopediasEntryEditVOImpl;
import com.zypg.cms.work.model.viewobject.entry.CmsEncyclopediasEntryEditVORowImpl;

import com.zypg.cms.work.model.viewobject.entry.CmsEncyclopediasEntryTVORowImpl;


import com.zypg.cms.work.model.viewobject.entry.query.CmsEntryDupSimilarVORowImpl;
import com.zypg.cms.work.model.viewobject.entry.query.CmsWorksEntryViewVOImpl;


import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import java.util.Iterator;
import java.util.Map;

import oracle.jbo.AttributeDef;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 15 11:13:08 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------

public class EntryAMImpl extends CustomApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public EntryAMImpl() {
    }

    public Number preEditWorksEntry(Number docId) {
        CmsWorksEntryTVOImpl worksEntryVO = this.getCmsWorksEntryTVO();
        worksEntryVO.setbvDocId(docId);
        worksEntryVO.executeQuery();
        Row row = worksEntryVO.first();
        if (row != null) {
            row.setAttribute("LastUpdateDate", new Date());
            worksEntryVO.setCurrentRow(row);
        }
        preDocCategroupRel(docId);
        return docId;
    }

    public Number preEditEncyclopediasEntry(Number docId) {
        CmsEncyclopediasEntryTVOImpl encyclopediasEntryTVO = this.getCmsEncyclopediasEntryTVO();
        encyclopediasEntryTVO.setbvDocId(docId);
        encyclopediasEntryTVO.executeQuery();
        Row row = encyclopediasEntryTVO.first();
        if (row != null) {
            row.setAttribute("LastUpdateDate", new Date());
            encyclopediasEntryTVO.setCurrentRow(row);
        }
        preDocCategroupRel(docId);
        return docId;
    }

    public void initWorksEntryEditVO() {
        CmsWorksEntryEditVOImpl vo = this.getCmsWorksEntryEditVO();
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public void batchEditWorksEntry(String docIds) {
        String[] docId = docIds.split(",");
        CmsWorksEntryTVOImpl worksEntryVO = this.getCmsWorksEntryTVO();
        CmsWorksEntryEditVOImpl editVO = this.getCmsWorksEntryEditVO();
        CmsWorksEntryEditVORowImpl editRow = (CmsWorksEntryEditVORowImpl)editVO.getCurrentRow();
        for (String id : docId) {
            try {
                worksEntryVO.setbvDocId(new Number(id));
            } catch (SQLException e) {
                e.printStackTrace();
            }
            worksEntryVO.executeQuery();
            Row row = worksEntryVO.first();
            if (row != null) {
                CmsWorksEntryTVORowImpl worksEntryRow = (CmsWorksEntryTVORowImpl)row;
                for (String attr : editRow.getAttributeNames()) {
                    if (editRow.getAttribute(attr) != null) {
                        if ("Keyword".equals(attr)) {
                            String oldKeyword = worksEntryRow.getKeyword();
                            String newKeyword = null;
                            if (oldKeyword == null) {
                                newKeyword = editRow.getAttribute(attr) + "";
                            } else {
                                newKeyword = oldKeyword + "," + editRow.getAttribute(attr);
                            }
                            worksEntryRow.setAttribute(attr, newKeyword);
                        } else {
                            worksEntryRow.setAttribute(attr, editRow.getAttribute(attr));
                        }
                    }
                }
                worksEntryRow.setLastUpdatedBy(this.getCustomDBTransaction().getUserId());
                worksEntryRow.setLastUpdateDate(new Date());
                try {
                    if (editRow.getCategoryId() != null) {
                        updateCategoryRel(editRow.getCategoryId(), new Number(id));
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void batchEditEncyclopediasEntry(String docIds) {
        String[] docId = docIds.split(",");
        CmsEncyclopediasEntryTVOImpl encyclopediasEntryVO = this.getCmsEncyclopediasEntryTVO();
        CmsEncyclopediasEntryEditVOImpl editVO = this.getCmsEncyclopediasEntryEditVO();
        CmsEncyclopediasEntryEditVORowImpl editRow = (CmsEncyclopediasEntryEditVORowImpl)editVO.getCurrentRow();
        for (String id : docId) {
            try {
                encyclopediasEntryVO.setbvDocId(new Number(id));
            } catch (SQLException e) {
                e.printStackTrace();
            }
            encyclopediasEntryVO.executeQuery();
            Row row = encyclopediasEntryVO.first();
            if (row != null) {
                CmsEncyclopediasEntryTVORowImpl encyclopediasEntryRow = (CmsEncyclopediasEntryTVORowImpl)row;
                for (String attr : editRow.getAttributeNames()) {
                    if (editRow.getAttribute(attr) != null) {
                        if ("Keyword".equals(attr)) {
                            String oldKeyword = encyclopediasEntryRow.getKeyword();
                            String newKeyword = null;
                            if (oldKeyword == null) {
                                newKeyword = editRow.getAttribute(attr) + "";
                            } else {
                                newKeyword = oldKeyword + "," + editRow.getAttribute(attr);
                            }
                            encyclopediasEntryRow.setAttribute(attr, newKeyword);
                        } else {
                            encyclopediasEntryRow.setAttribute(attr, editRow.getAttribute(attr));
                        }
                    }
                }
                encyclopediasEntryRow.setLastUpdatedBy(this.getCustomDBTransaction().getUserId());
                encyclopediasEntryRow.setLastUpdateDate(new Date());
                try {
                    if (editRow.getCategoryId() != null) {
                        updateCategoryRel(editRow.getCategoryId(), new Number(id));
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void updateCategoryRel(Number categoryId, Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        docCategoryRelVO.setbvDocId(docId);
        docCategoryRelVO.executeQuery();
        Row row = docCategoryRelVO.first();
        if (row != null) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow = (CmsDocCategoryRelTVORowImpl)row;
            docCategoryRelNewRow.setCategoryId(categoryId);
        }
    }

    private void preDocCategroupRel(Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        docCategoryRelVO.setbvDocId(docId);
        docCategoryRelVO.executeQuery();
        Row row = docCategoryRelVO.first();
        if (row != null) {
            docCategoryRelVO.setCurrentRow(row);
        }
    }

    public void initWorksEntryViewInfo(Number docId) {
        CmsWorksEntryViewVOImpl entryVO = this.getCmsWorksEntryViewVO();
        entryVO.setbvDocId(docId);
        entryVO.executeQuery();
    }

    public void initEncyclopediasEntryViewInfo(Number docId) {
        CmsEncyclopediasEntryViewVOImpl entryVO = this.getCmsEncyclopediasEntryViewVO();
        entryVO.setbvDocId(docId);
        entryVO.executeQuery();
    }

    public void initMasterEntry4Dup(Number docId) {
        CmsEntryDupMasterEntryVOImpl vo = this.getCmsEntryDupMasterEntryVO();
        vo.setbvDocId(docId);
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public Number querySimilarEntry(Number docId) {
        CmsEntryDupSimilarVOImpl vo = this.getCmsEntryDupSimilarVO();
        vo.setbvThisDocId(docId);
        vo.executeQuery();
        vo.setRangeSize(-1);
        Row row = vo.first();
        if (row != null) {
            CmsEntryDupSimilarVORowImpl r = (CmsEntryDupSimilarVORowImpl)row;
            return r.getThatDocId();
        }
        return null;
    }

    public void initSlaveEntry4Dup(Number docId) {
        CmsEntryDupSimilarVOImpl vo = this.getCmsEntryDupSlaveEntryVO();
        vo.setbvThatDocId(docId);
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public String deleteEntry(Number docId) {
        String result = null;
        CallableStatement st = null;
        try {
            st =
 this.getDBTransaction().createCallableStatement("begin ? := cms_common_pkg.delete_entry(?); end;", this.getDBTransaction().DEFAULT);
            st.registerOutParameter(1, Types.VARCHAR);
            st.setObject(2, docId);
            st.execute();
            this.getDBTransaction().commit();
            result = (String)st.getObject(1);
        } catch (SQLException e) {
            result = "E";
            this.getDBTransaction().rollback();
            e.printStackTrace();
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }


    /**
     * Container's getter for CmsWorksEntryVO.
     * @return CmsWorksEntryVO
     */
    public CmsWorksEntryVOImpl getCmsWorksEntryVO() {
        return (CmsWorksEntryVOImpl)findViewObject("CmsWorksEntryVO");
    }

    /**
     * Container's getter for CmsDocCategoryRelTVO1.
     * @return CmsDocCategoryRelTVO1
     */
    public CmsDocCategoryRelTVOImpl getCmsDocCategoryRelTVO() {
        return (CmsDocCategoryRelTVOImpl)findViewObject("CmsDocCategoryRelTVO");
    }

    /**
     * Container's getter for CmsEncyclopediasEntryVO.
     * @return CmsEncyclopediasEntryVO
     */
    public CmsEncyclopediasEntryVOImpl getCmsEncyclopediasEntryVO() {
        return (CmsEncyclopediasEntryVOImpl)findViewObject("CmsEncyclopediasEntryVO");
    }

    //rollBack

    public String rollBack() {
        String retCode = "S";
        try {
            this.getDBTransaction().rollback();
        } catch (Exception e) {
            e.printStackTrace();
            retCode = "E";
        }
        return retCode;
    }

    /**
     * Container's getter for CmsWorksEntryTVO.
     * @return CmsWorksEntryTVO
     */
    public CmsWorksEntryTVOImpl getCmsWorksEntryTVO() {
        return (CmsWorksEntryTVOImpl)findViewObject("CmsWorksEntryTVO");
    }

    /**
     * Container's getter for CmsEncyclopediasEntryTVO.
     * @return CmsEncyclopediasEntryTVO
     */
    public CmsEncyclopediasEntryTVOImpl getCmsEncyclopediasEntryTVO() {
        return (CmsEncyclopediasEntryTVOImpl)findViewObject("CmsEncyclopediasEntryTVO");
    }

    /**
     * Container's getter for CmsWorksEntryEditVO1.
     * @return CmsWorksEntryEditVO1
     */
    public CmsWorksEntryEditVOImpl getCmsWorksEntryEditVO1() {
        return (CmsWorksEntryEditVOImpl)findViewObject("CmsWorksEntryEditVO1");
    }

    /**
     * Container's getter for CmsWorksEntryEditVO.
     * @return CmsWorksEntryEditVO
     */
    public CmsWorksEntryEditVOImpl getCmsWorksEntryEditVO() {
        return (CmsWorksEntryEditVOImpl)findViewObject("CmsWorksEntryEditVO");
    }


    /**
     * Container's getter for CmsEncyclopediasEntryEditVO.
     * @return CmsEncyclopediasEntryEditVO
     */
    public CmsEncyclopediasEntryEditVOImpl getCmsEncyclopediasEntryEditVO() {
        return (CmsEncyclopediasEntryEditVOImpl)findViewObject("CmsEncyclopediasEntryEditVO");
    }

    /**
     * Container's getter for CmsWorksEntryViewVO.
     * @return CmsWorksEntryViewVO
     */
    public CmsWorksEntryViewVOImpl getCmsWorksEntryViewVO() {
        return (CmsWorksEntryViewVOImpl)findViewObject("CmsWorksEntryViewVO");
    }

    /**
     * Container's getter for CmsEncyclopediasEntryViewVO.
     * @return CmsEncyclopediasEntryViewVO
     */
    public CmsEncyclopediasEntryViewVOImpl getCmsEncyclopediasEntryViewVO() {
        return (CmsEncyclopediasEntryViewVOImpl)findViewObject("CmsEncyclopediasEntryViewVO");
    }

    /**
     * Container's getter for CmsEntryDupResultVO.
     * @return CmsEntryDupResultVO
     */
    public CmsEntryDupResultVOImpl getCmsEntryDupResultVO() {
        return (CmsEntryDupResultVOImpl)findViewObject("CmsEntryDupResultVO");
    }

    /**
     * Container's getter for CmsEntryDupLibVO.
     * @return CmsEntryDupLibVO
     */
    public CmsEntryDupLibVOImpl getCmsEntryDupLibVO() {
        return (CmsEntryDupLibVOImpl)findViewObject("CmsEntryDupLibVO");
    }

    /**
     * Container's getter for CmsEntryDupMasterEntryVO.
     * @return CmsEntryDupMasterEntryVO
     */
    public CmsEntryDupMasterEntryVOImpl getCmsEntryDupMasterEntryVO() {
        return (CmsEntryDupMasterEntryVOImpl)findViewObject("CmsEntryDupMasterEntryVO");
    }

    /**
     * Container's getter for CmsEntryDupSimilarVO.
     * @return CmsEntryDupSimilarVO
     */
    public CmsEntryDupSimilarVOImpl getCmsEntryDupSimilarVO() {
        return (CmsEntryDupSimilarVOImpl)findViewObject("CmsEntryDupSimilarVO");
    }

    /**
     * Container's getter for CmsEntryDupSlaveEntryVO.
     * @return CmsEntryDupSlaveEntryVO
     */
    public CmsEntryDupSimilarVOImpl getCmsEntryDupSlaveEntryVO() {
        return (CmsEntryDupSimilarVOImpl)findViewObject("CmsEntryDupSlaveEntryVO");
    }

    /**
     * Container's getter for CmsEncyclopediasEntryQueryVO1.
     * @return CmsEncyclopediasEntryQueryVO1
     */
    public CmsEncyclopediasEntryQueryVOImpl getCmsEncyclopediasEntryQueryVO() {
        return (CmsEncyclopediasEntryQueryVOImpl)findViewObject("CmsEncyclopediasEntryQueryVO");
    }

    /**
     * Container's getter for CmsWorksEntryQueryVO.
     * @return CmsWorksEntryQueryVO
     */
    public CmsWorksEntryQueryVOImpl getCmsWorksEntryQueryVO() {
        return (CmsWorksEntryQueryVOImpl)findViewObject("CmsWorksEntryQueryVO");
    }
}
