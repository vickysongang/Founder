package com.zypg.cms.work.model.viewobject.figuregroup.query;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 09 20:10:47 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsDocGroupRelVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        RelId {
            public Object get(CmsDocGroupRelVORowImpl obj) {
                return obj.getRelId();
            }

            public void put(CmsDocGroupRelVORowImpl obj, Object value) {
                obj.setRelId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsDocGroupRelVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsDocGroupRelVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        GroupId {
            public Object get(CmsDocGroupRelVORowImpl obj) {
                return obj.getGroupId();
            }

            public void put(CmsDocGroupRelVORowImpl obj, Object value) {
                obj.setGroupId((Number)value);
            }
        }
        ,
        IndexFlag {
            public Object get(CmsDocGroupRelVORowImpl obj) {
                return obj.getIndexFlag();
            }

            public void put(CmsDocGroupRelVORowImpl obj, Object value) {
                obj.setIndexFlag((String)value);
            }
        }
        ,
        GroupName {
            public Object get(CmsDocGroupRelVORowImpl obj) {
                return obj.getGroupName();
            }

            public void put(CmsDocGroupRelVORowImpl obj, Object value) {
                obj.setGroupName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsDocGroupRelVORowImpl object);

        public abstract void put(CmsDocGroupRelVORowImpl object, Object value);

        public int index() {
            return CmsDocGroupRelVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return CmsDocGroupRelVORowImpl.AttributesEnum.firstIndex() + CmsDocGroupRelVORowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = CmsDocGroupRelVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RELID = AttributesEnum.RelId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int GROUPID = AttributesEnum.GroupId.index();
    public static final int INDEXFLAG = AttributesEnum.IndexFlag.index();
    public static final int GROUPNAME = AttributesEnum.GroupName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsDocGroupRelVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute RelId.
     * @return the RelId
     */
    public Number getRelId() {
        return (Number) getAttributeInternal(RELID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RelId.
     * @param value value to set the  RelId
     */
    public void setRelId(Number value) {
        setAttributeInternal(RELID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GroupId.
     * @return the GroupId
     */
    public Number getGroupId() {
        return (Number) getAttributeInternal(GROUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GroupId.
     * @param value value to set the  GroupId
     */
    public void setGroupId(Number value) {
        setAttributeInternal(GROUPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IndexFlag.
     * @return the IndexFlag
     */
    public String getIndexFlag() {
        return (String) getAttributeInternal(INDEXFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IndexFlag.
     * @param value value to set the  IndexFlag
     */
    public void setIndexFlag(String value) {
        setAttributeInternal(INDEXFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GroupName.
     * @return the GroupName
     */
    public String getGroupName() {
        return (String) getAttributeInternal(GROUPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GroupName.
     * @param value value to set the  GroupName
     */
    public void setGroupName(String value) {
        setAttributeInternal(GROUPNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
