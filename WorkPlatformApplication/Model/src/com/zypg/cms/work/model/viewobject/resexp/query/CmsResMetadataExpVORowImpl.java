package com.zypg.cms.work.model.viewobject.resexp.query;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 23 16:34:25 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsResMetadataExpVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ApplyId {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getApplyId();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setApplyId((Number)value);
            }
        }
        ,
        ApplyName {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getApplyName();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setApplyName((String)value);
            }
        }
        ,
        LineId {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getLineId();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        TemplateId {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getTemplateId();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setTemplateId((Number)value);
            }
        }
        ,
        TemplateName {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getTemplateName();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setTemplateName((String)value);
            }
        }
        ,
        ResCode {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getResCode();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setResCode((String)value);
            }
        }
        ,
        ResName {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getResName();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setResName((String)value);
            }
        }
        ,
        ResTypeCode {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getResTypeCode();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setResTypeCode((String)value);
            }
        }
        ,
        ResTypeName {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getResTypeName();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setResTypeName((String)value);
            }
        }
        ,
        ResTypeSimpleCode {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getResTypeSimpleCode();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setResTypeSimpleCode((String)value);
            }
        }
        ,
        ColumnName {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getColumnName();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setColumnName((String)value);
            }
        }
        ,
        TableName {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getTableName();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setTableName((String)value);
            }
        }
        ,
        ShelfId {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getShelfId();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setShelfId((Number)value);
            }
        }
        ,
        ResId {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getResId();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setResId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsResMetadataExpVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsResMetadataExpVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsResMetadataExpVORowImpl object);

        public abstract void put(CmsResMetadataExpVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int APPLYID = AttributesEnum.ApplyId.index();
    public static final int APPLYNAME = AttributesEnum.ApplyName.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int TEMPLATEID = AttributesEnum.TemplateId.index();
    public static final int TEMPLATENAME = AttributesEnum.TemplateName.index();
    public static final int RESCODE = AttributesEnum.ResCode.index();
    public static final int RESNAME = AttributesEnum.ResName.index();
    public static final int RESTYPECODE = AttributesEnum.ResTypeCode.index();
    public static final int RESTYPENAME = AttributesEnum.ResTypeName.index();
    public static final int RESTYPESIMPLECODE = AttributesEnum.ResTypeSimpleCode.index();
    public static final int COLUMNNAME = AttributesEnum.ColumnName.index();
    public static final int TABLENAME = AttributesEnum.TableName.index();
    public static final int SHELFID = AttributesEnum.ShelfId.index();
    public static final int RESID = AttributesEnum.ResId.index();
    public static final int DOCID = AttributesEnum.DocId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsResMetadataExpVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ApplyId.
     * @return the ApplyId
     */
    public Number getApplyId() {
        return (Number) getAttributeInternal(APPLYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ApplyId.
     * @param value value to set the  ApplyId
     */
    public void setApplyId(Number value) {
        setAttributeInternal(APPLYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ApplyName.
     * @return the ApplyName
     */
    public String getApplyName() {
        return (String) getAttributeInternal(APPLYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ApplyName.
     * @param value value to set the  ApplyName
     */
    public void setApplyName(String value) {
        setAttributeInternal(APPLYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LineId.
     * @param value value to set the  LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TemplateId.
     * @return the TemplateId
     */
    public Number getTemplateId() {
        return (Number) getAttributeInternal(TEMPLATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TemplateId.
     * @param value value to set the  TemplateId
     */
    public void setTemplateId(Number value) {
        setAttributeInternal(TEMPLATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TemplateName.
     * @return the TemplateName
     */
    public String getTemplateName() {
        return (String) getAttributeInternal(TEMPLATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TemplateName.
     * @param value value to set the  TemplateName
     */
    public void setTemplateName(String value) {
        setAttributeInternal(TEMPLATENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResCode.
     * @return the ResCode
     */
    public String getResCode() {
        return (String) getAttributeInternal(RESCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResCode.
     * @param value value to set the  ResCode
     */
    public void setResCode(String value) {
        setAttributeInternal(RESCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResName.
     * @return the ResName
     */
    public String getResName() {
        return (String) getAttributeInternal(RESNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResName.
     * @param value value to set the  ResName
     */
    public void setResName(String value) {
        setAttributeInternal(RESNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeCode.
     * @return the ResTypeCode
     */
    public String getResTypeCode() {
        return (String) getAttributeInternal(RESTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeCode.
     * @param value value to set the  ResTypeCode
     */
    public void setResTypeCode(String value) {
        setAttributeInternal(RESTYPECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeName.
     * @return the ResTypeName
     */
    public String getResTypeName() {
        return (String) getAttributeInternal(RESTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeName.
     * @param value value to set the  ResTypeName
     */
    public void setResTypeName(String value) {
        setAttributeInternal(RESTYPENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResTypeSimpleCode.
     * @return the ResTypeSimpleCode
     */
    public String getResTypeSimpleCode() {
        return (String) getAttributeInternal(RESTYPESIMPLECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResTypeSimpleCode.
     * @param value value to set the  ResTypeSimpleCode
     */
    public void setResTypeSimpleCode(String value) {
        setAttributeInternal(RESTYPESIMPLECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColumnName.
     * @return the ColumnName
     */
    public String getColumnName() {
        return (String) getAttributeInternal(COLUMNNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColumnName.
     * @param value value to set the  ColumnName
     */
    public void setColumnName(String value) {
        setAttributeInternal(COLUMNNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TableName.
     * @return the TableName
     */
    public String getTableName() {
        return (String) getAttributeInternal(TABLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TableName.
     * @param value value to set the  TableName
     */
    public void setTableName(String value) {
        setAttributeInternal(TABLENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShelfId.
     * @return the ShelfId
     */
    public Number getShelfId() {
        return (Number) getAttributeInternal(SHELFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShelfId.
     * @param value value to set the  ShelfId
     */
    public void setShelfId(Number value) {
        setAttributeInternal(SHELFID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResId.
     * @return the ResId
     */
    public Number getResId() {
        return (Number) getAttributeInternal(RESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResId.
     * @param value value to set the  ResId
     */
    public void setResId(Number value) {
        setAttributeInternal(RESID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
