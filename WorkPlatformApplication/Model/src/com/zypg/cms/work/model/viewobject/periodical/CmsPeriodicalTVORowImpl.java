package com.zypg.cms.work.model.viewobject.periodical;


import com.zypg.cms.work.model.entity.CmsPeriodicalTEOImpl;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewAccessorDef;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 10 10:56:58 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsPeriodicalTVORowImpl extends ViewRowImpl {


    public static final int ENTITY_CMSPERIODICALTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PeriodicalId {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodicalId();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodicalId((Number)value);
            }
        }
        ,
        PeriodicalCategoryId {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodicalCategoryId();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodicalCategoryId((Number)value);
            }
        }
        ,
        PeriodicalCategoryName {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodicalCategoryName();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodicalCategoryName((String)value);
            }
        }
        ,
        PeriodicalType {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodicalType();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodicalType((String)value);
            }
        }
        ,
        PeriodicalTypeMeaning {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodicalTypeMeaning();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodicalTypeMeaning((String)value);
            }
        }
        ,
        Issn {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getIssn();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setIssn((String)value);
            }
        }
        ,
        Cn {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getCn();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setCn((String)value);
            }
        }
        ,
        Year {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getYear();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setYear((String)value);
            }
        }
        ,
        PeriodId {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodId();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodId((Number)value);
            }
        }
        ,
        PeriodNum {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPeriodNum();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPeriodNum((Number)value);
            }
        }
        ,
        Total {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getTotal();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setTotal((Number)value);
            }
        }
        ,
        PublicDate {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPublicDate();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPublicDate((Date)value);
            }
        }
        ,
        Lang {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLang();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setLang((String)value);
            }
        }
        ,
        LangMeaning {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLangMeaning();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setLangMeaning((String)value);
            }
        }
        ,
        ChiefEditor {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getChiefEditor();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setChiefEditor((String)value);
            }
        }
        ,
        Editor {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getEditor();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setEditor((String)value);
            }
        }
        ,
        FormatDesign {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getFormatDesign();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setFormatDesign((String)value);
            }
        }
        ,
        CoverDesign {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getCoverDesign();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setCoverDesign((String)value);
            }
        }
        ,
        Price {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPrice();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPrice((Number)value);
            }
        }
        ,
        Pagination {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPagination();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPagination((Number)value);
            }
        }
        ,
        MainPage {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getMainPage();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setMainPage((String)value);
            }
        }
        ,
        BookSize {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getBookSize();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setBookSize((String)value);
            }
        }
        ,
        BookSizeMeaning {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getBookSizeMeaning();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setBookSizeMeaning((String)value);
            }
        }
        ,
        MainTypeset {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getMainTypeset();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setMainTypeset((String)value);
            }
        }
        ,
        ColorNum {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getColorNum();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setColorNum((String)value);
            }
        }
        ,
        CoverTypeset {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getCoverTypeset();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setCoverTypeset((String)value);
            }
        }
        ,
        ProdSize {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getProdSize();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setProdSize((String)value);
            }
        }
        ,
        ProdSizeMeaning {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getProdSizeMeaning();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setProdSizeMeaning((String)value);
            }
        }
        ,
        AssortProd {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getAssortProd();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAssortProd((String)value);
            }
        }
        ,
        ReaderGroup {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getReaderGroup();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setReaderGroup((String)value);
            }
        }
        ,
        ReaderGroupMeaning {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getReaderGroupMeaning();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setReaderGroupMeaning((String)value);
            }
        }
        ,
        Suggestion {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getSuggestion();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setSuggestion((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        DocId {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        CompName {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getCompName();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setCompName((String)value);
            }
        }
        ,
        TypesetComp {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getTypesetComp();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setTypesetComp((String)value);
            }
        }
        ,
        PubTime {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPubTime();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPubTime((Date)value);
            }
        }
        ,
        Publishing {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getPublishing();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setPublishing((String)value);
            }
        }
        ,
        TotalNum {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getTotalNum();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setTotalNum((Number)value);
            }
        }
        ,
        Lookup4PeriodicalCategory {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4PeriodicalCategory();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4PeriodYear {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4PeriodYear();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4Lang {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4Lang();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4Mainpage {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4Mainpage();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4ColorNum {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4ColorNum();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4Typeset {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4Typeset();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4AssortProd {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4AssortProd();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Lookup4SetupId {
            public Object get(CmsPeriodicalTVORowImpl obj) {
                return obj.getLookup4SetupId();
            }

            public void put(CmsPeriodicalTVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsPeriodicalTVORowImpl object);

        public abstract void put(CmsPeriodicalTVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PERIODICALID = AttributesEnum.PeriodicalId.index();
    public static final int PERIODICALCATEGORYID = AttributesEnum.PeriodicalCategoryId.index();
    public static final int PERIODICALCATEGORYNAME = AttributesEnum.PeriodicalCategoryName.index();
    public static final int PERIODICALTYPE = AttributesEnum.PeriodicalType.index();
    public static final int PERIODICALTYPEMEANING = AttributesEnum.PeriodicalTypeMeaning.index();
    public static final int ISSN = AttributesEnum.Issn.index();
    public static final int CN = AttributesEnum.Cn.index();
    public static final int YEAR = AttributesEnum.Year.index();
    public static final int PERIODID = AttributesEnum.PeriodId.index();
    public static final int PERIODNUM = AttributesEnum.PeriodNum.index();
    public static final int TOTAL = AttributesEnum.Total.index();
    public static final int PUBLICDATE = AttributesEnum.PublicDate.index();
    public static final int LANG = AttributesEnum.Lang.index();
    public static final int LANGMEANING = AttributesEnum.LangMeaning.index();
    public static final int CHIEFEDITOR = AttributesEnum.ChiefEditor.index();
    public static final int EDITOR = AttributesEnum.Editor.index();
    public static final int FORMATDESIGN = AttributesEnum.FormatDesign.index();
    public static final int COVERDESIGN = AttributesEnum.CoverDesign.index();
    public static final int PRICE = AttributesEnum.Price.index();
    public static final int PAGINATION = AttributesEnum.Pagination.index();
    public static final int MAINPAGE = AttributesEnum.MainPage.index();
    public static final int BOOKSIZE = AttributesEnum.BookSize.index();
    public static final int BOOKSIZEMEANING = AttributesEnum.BookSizeMeaning.index();
    public static final int MAINTYPESET = AttributesEnum.MainTypeset.index();
    public static final int COLORNUM = AttributesEnum.ColorNum.index();
    public static final int COVERTYPESET = AttributesEnum.CoverTypeset.index();
    public static final int PRODSIZE = AttributesEnum.ProdSize.index();
    public static final int PRODSIZEMEANING = AttributesEnum.ProdSizeMeaning.index();
    public static final int ASSORTPROD = AttributesEnum.AssortProd.index();
    public static final int READERGROUP = AttributesEnum.ReaderGroup.index();
    public static final int READERGROUPMEANING = AttributesEnum.ReaderGroupMeaning.index();
    public static final int SUGGESTION = AttributesEnum.Suggestion.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int COMPNAME = AttributesEnum.CompName.index();
    public static final int TYPESETCOMP = AttributesEnum.TypesetComp.index();
    public static final int PUBTIME = AttributesEnum.PubTime.index();
    public static final int PUBLISHING = AttributesEnum.Publishing.index();
    public static final int TOTALNUM = AttributesEnum.TotalNum.index();
    public static final int LOOKUP4PERIODICALCATEGORY = AttributesEnum.Lookup4PeriodicalCategory.index();
    public static final int LOOKUP4PERIODYEAR = AttributesEnum.Lookup4PeriodYear.index();
    public static final int LOOKUP4LANG = AttributesEnum.Lookup4Lang.index();
    public static final int LOOKUP4MAINPAGE = AttributesEnum.Lookup4Mainpage.index();
    public static final int LOOKUP4COLORNUM = AttributesEnum.Lookup4ColorNum.index();
    public static final int LOOKUP4TYPESET = AttributesEnum.Lookup4Typeset.index();
    public static final int LOOKUP4ASSORTPROD = AttributesEnum.Lookup4AssortProd.index();
    public static final int LOOKUP4SETUPID = AttributesEnum.Lookup4SetupId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsPeriodicalTVORowImpl() {
    }

    /**
     * Gets CmsPeriodicalTEO entity object.
     * @return the CmsPeriodicalTEO
     */
    public CmsPeriodicalTEOImpl getCmsPeriodicalTEO() {
        return (CmsPeriodicalTEOImpl)getEntity(ENTITY_CMSPERIODICALTEO);
    }

    /**
     * Gets the attribute value for PERIODICAL_ID using the alias name PeriodicalId.
     * @return the PERIODICAL_ID
     */
    public Number getPeriodicalId() {
        return (Number)getAttributeInternal(PERIODICALID);
    }

    /**
     * Sets <code>value</code> as attribute value for PERIODICAL_ID using the alias name PeriodicalId.
     * @param value value to set the PERIODICAL_ID
     */
    public void setPeriodicalId(Number value) {
        setAttributeInternal(PERIODICALID, value);
    }

    /**
     * Gets the attribute value for PERIODICAL_CATEGORY_ID using the alias name PeriodicalCategoryId.
     * @return the PERIODICAL_CATEGORY_ID
     */
    public Number getPeriodicalCategoryId() {
        return (Number)getAttributeInternal(PERIODICALCATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for PERIODICAL_CATEGORY_ID using the alias name PeriodicalCategoryId.
     * @param value value to set the PERIODICAL_CATEGORY_ID
     */
    public void setPeriodicalCategoryId(Number value) {
        setAttributeInternal(PERIODICALCATEGORYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PeriodicalCategoryName.
     * @return the PeriodicalCategoryName
     */
    public String getPeriodicalCategoryName() {
        return (String) getAttributeInternal(PERIODICALCATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PeriodicalCategoryName.
     * @param value value to set the  PeriodicalCategoryName
     */
    public void setPeriodicalCategoryName(String value) {
        setAttributeInternal(PERIODICALCATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PeriodicalType.
     * @return the PeriodicalType
     */
    public String getPeriodicalType() {
        return (String)getAttributeInternal(PERIODICALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PeriodicalType.
     * @param value value to set the  PeriodicalType
     */
    public void setPeriodicalType(String value) {
        setAttributeInternal(PERIODICALTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PeriodicalTypeMeaning.
     * @return the PeriodicalTypeMeaning
     */
    public String getPeriodicalTypeMeaning() {
        return (String)getAttributeInternal(PERIODICALTYPEMEANING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PeriodicalTypeMeaning.
     * @param value value to set the  PeriodicalTypeMeaning
     */
    public void setPeriodicalTypeMeaning(String value) {
        setAttributeInternal(PERIODICALTYPEMEANING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Issn.
     * @return the Issn
     */
    public String getIssn() {
        return (String)getAttributeInternal(ISSN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Issn.
     * @param value value to set the  Issn
     */
    public void setIssn(String value) {
        setAttributeInternal(ISSN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Cn.
     * @return the Cn
     */
    public String getCn() {
        return (String)getAttributeInternal(CN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Cn.
     * @param value value to set the  Cn
     */
    public void setCn(String value) {
        setAttributeInternal(CN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Year.
     * @return the Year
     */
    public String getYear() {
        return (String)getAttributeInternal(YEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Year.
     * @param value value to set the  Year
     */
    public void setYear(String value) {
        setAttributeInternal(YEAR, value);
    }


    /**
     * Gets the attribute value for PERIOD_ID using the alias name PeriodId.
     * @return the PERIOD_ID
     */
    public Number getPeriodId() {
        return (Number) getAttributeInternal(PERIODID);
    }

    /**
     * Sets <code>value</code> as attribute value for PERIOD_ID using the alias name PeriodId.
     * @param value value to set the PERIOD_ID
     */
    public void setPeriodId(Number value) {
        setAttributeInternal(PERIODID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PeriodNum.
     * @return the PeriodNum
     */
    public Number getPeriodNum() {
        return (Number) getAttributeInternal(PERIODNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PeriodNum.
     * @param value value to set the  PeriodNum
     */
    public void setPeriodNum(Number value) {
        setAttributeInternal(PERIODNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Total.
     * @return the Total
     */
    public Number getTotal() {
        return (Number)getAttributeInternal(TOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Total.
     * @param value value to set the  Total
     */
    public void setTotal(Number value) {
        setAttributeInternal(TOTAL, value);
    }


    /**
     * Gets the attribute value for the calculated attribute PublicDate.
     * @return the PublicDate
     */
    public Date getPublicDate() {
        return (Date) getAttributeInternal(PUBLICDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PublicDate.
     * @param value value to set the  PublicDate
     */
    public void setPublicDate(Date value) {
        setAttributeInternal(PUBLICDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String)getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompName.
     * @return the CompName
     */
    public String getCompName() {
        return (String) getAttributeInternal(COMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompName.
     * @param value value to set the  CompName
     */
    public void setCompName(String value) {
        setAttributeInternal(COMPNAME, value);
    }


    /**
     * Gets the attribute value for TYPESET_COMP using the alias name TypesetComp.
     * @return the TYPESET_COMP
     */
    public String getTypesetComp() {
        return (String) getAttributeInternal(TYPESETCOMP);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPESET_COMP using the alias name TypesetComp.
     * @param value value to set the TYPESET_COMP
     */
    public void setTypesetComp(String value) {
        setAttributeInternal(TYPESETCOMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PubTime.
     * @return the PubTime
     */
    public Date getPubTime() {
        return (Date) getAttributeInternal(PUBTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PubTime.
     * @param value value to set the  PubTime
     */
    public void setPubTime(Date value) {
        setAttributeInternal(PUBTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Publishing.
     * @return the Publishing
     */
    public String getPublishing() {
        return (String) getAttributeInternal(PUBLISHING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Publishing.
     * @param value value to set the  Publishing
     */
    public void setPublishing(String value) {
        setAttributeInternal(PUBLISHING, value);
    }

    /**
     * Gets the attribute value for TOTAL_NUM using the alias name TotalNum.
     * @return the TOTAL_NUM
     */
    public Number getTotalNum() {
        return (Number) getAttributeInternal(TOTALNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_NUM using the alias name TotalNum.
     * @param value value to set the TOTAL_NUM
     */
    public void setTotalNum(Number value) {
        setAttributeInternal(TOTALNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Lang.
     * @return the Lang
     */
    public String getLang() {
        return (String)getAttributeInternal(LANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Lang.
     * @param value value to set the  Lang
     */
    public void setLang(String value) {
        setAttributeInternal(LANG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LangMeaning.
     * @return the LangMeaning
     */
    public String getLangMeaning() {
        return (String) getAttributeInternal(LANGMEANING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LangMeaning.
     * @param value value to set the  LangMeaning
     */
    public void setLangMeaning(String value) {
        setAttributeInternal(LANGMEANING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChiefEditor.
     * @return the ChiefEditor
     */
    public String getChiefEditor() {
        return (String)getAttributeInternal(CHIEFEDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChiefEditor.
     * @param value value to set the  ChiefEditor
     */
    public void setChiefEditor(String value) {
        setAttributeInternal(CHIEFEDITOR, value);
    }

    /**
     * Gets the attribute value for EDITOR using the alias name Editor.
     * @return the EDITOR
     */
    public String getEditor() {
        return (String)getAttributeInternal(EDITOR);
    }

    /**
     * Sets <code>value</code> as attribute value for EDITOR using the alias name Editor.
     * @param value value to set the EDITOR
     */
    public void setEditor(String value) {
        setAttributeInternal(EDITOR, value);
    }

    /**
     * Gets the attribute value for FORMAT_DESIGN using the alias name FormatDesign.
     * @return the FORMAT_DESIGN
     */
    public String getFormatDesign() {
        return (String)getAttributeInternal(FORMATDESIGN);
    }

    /**
     * Sets <code>value</code> as attribute value for FORMAT_DESIGN using the alias name FormatDesign.
     * @param value value to set the FORMAT_DESIGN
     */
    public void setFormatDesign(String value) {
        setAttributeInternal(FORMATDESIGN, value);
    }

    /**
     * Gets the attribute value for COVER_DESIGN using the alias name CoverDesign.
     * @return the COVER_DESIGN
     */
    public String getCoverDesign() {
        return (String)getAttributeInternal(COVERDESIGN);
    }

    /**
     * Sets <code>value</code> as attribute value for COVER_DESIGN using the alias name CoverDesign.
     * @param value value to set the COVER_DESIGN
     */
    public void setCoverDesign(String value) {
        setAttributeInternal(COVERDESIGN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Price.
     * @return the Price
     */
    public Number getPrice() {
        return (Number)getAttributeInternal(PRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Price.
     * @param value value to set the  Price
     */
    public void setPrice(Number value) {
        setAttributeInternal(PRICE, value);
    }

    /**
     * Gets the attribute value for PAGINATION using the alias name Pagination.
     * @return the PAGINATION
     */
    public Number getPagination() {
        return (Number)getAttributeInternal(PAGINATION);
    }

    /**
     * Sets <code>value</code> as attribute value for PAGINATION using the alias name Pagination.
     * @param value value to set the PAGINATION
     */
    public void setPagination(Number value) {
        setAttributeInternal(PAGINATION, value);
    }

    /**
     * Gets the attribute value for MAIN_PAGE using the alias name MainPage.
     * @return the MAIN_PAGE
     */
    public String getMainPage() {
        return (String)getAttributeInternal(MAINPAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for MAIN_PAGE using the alias name MainPage.
     * @param value value to set the MAIN_PAGE
     */
    public void setMainPage(String value) {
        setAttributeInternal(MAINPAGE, value);
    }

    /**
     * Gets the attribute value for BOOK_SIZE using the alias name BookSize.
     * @return the BOOK_SIZE
     */
    public String getBookSize() {
        return (String)getAttributeInternal(BOOKSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for BOOK_SIZE using the alias name BookSize.
     * @param value value to set the BOOK_SIZE
     */
    public void setBookSize(String value) {
        setAttributeInternal(BOOKSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BookSizeMeaning.
     * @return the BookSizeMeaning
     */
    public String getBookSizeMeaning() {
        return (String)getAttributeInternal(BOOKSIZEMEANING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookSizeMeaning.
     * @param value value to set the  BookSizeMeaning
     */
    public void setBookSizeMeaning(String value) {
        setAttributeInternal(BOOKSIZEMEANING, value);
    }

    /**
     * Gets the attribute value for MAIN_TYPESET using the alias name MainTypeset.
     * @return the MAIN_TYPESET
     */
    public String getMainTypeset() {
        return (String)getAttributeInternal(MAINTYPESET);
    }

    /**
     * Sets <code>value</code> as attribute value for MAIN_TYPESET using the alias name MainTypeset.
     * @param value value to set the MAIN_TYPESET
     */
    public void setMainTypeset(String value) {
        setAttributeInternal(MAINTYPESET, value);
    }

    /**
     * Gets the attribute value for COLOR_NUM using the alias name ColorNum.
     * @return the COLOR_NUM
     */
    public String getColorNum() {
        return (String)getAttributeInternal(COLORNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_NUM using the alias name ColorNum.
     * @param value value to set the COLOR_NUM
     */
    public void setColorNum(String value) {
        setAttributeInternal(COLORNUM, value);
    }


    /**
     * Gets the attribute value for COVER_TYPESET using the alias name CoverTypeset.
     * @return the COVER_TYPESET
     */
    public String getCoverTypeset() {
        return (String)getAttributeInternal(COVERTYPESET);
    }

    /**
     * Sets <code>value</code> as attribute value for COVER_TYPESET using the alias name CoverTypeset.
     * @param value value to set the COVER_TYPESET
     */
    public void setCoverTypeset(String value) {
        setAttributeInternal(COVERTYPESET, value);
    }

    /**
     * Gets the attribute value for PROD_SIZE using the alias name ProdSize.
     * @return the PROD_SIZE
     */
    public String getProdSize() {
        return (String)getAttributeInternal(PRODSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for PROD_SIZE using the alias name ProdSize.
     * @param value value to set the PROD_SIZE
     */
    public void setProdSize(String value) {
        setAttributeInternal(PRODSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProdSizeMeaning.
     * @return the ProdSizeMeaning
     */
    public String getProdSizeMeaning() {
        return (String)getAttributeInternal(PRODSIZEMEANING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProdSizeMeaning.
     * @param value value to set the  ProdSizeMeaning
     */
    public void setProdSizeMeaning(String value) {
        setAttributeInternal(PRODSIZEMEANING, value);
    }

    /**
     * Gets the attribute value for ASSORT_PROD using the alias name AssortProd.
     * @return the ASSORT_PROD
     */
    public String getAssortProd() {
        return (String)getAttributeInternal(ASSORTPROD);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSORT_PROD using the alias name AssortProd.
     * @param value value to set the ASSORT_PROD
     */
    public void setAssortProd(String value) {
        setAttributeInternal(ASSORTPROD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReaderGroup.
     * @return the ReaderGroup
     */
    public String getReaderGroup() {
        return (String)getAttributeInternal(READERGROUP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReaderGroup.
     * @param value value to set the  ReaderGroup
     */
    public void setReaderGroup(String value) {
        setAttributeInternal(READERGROUP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReaderGroupMeaning.
     * @return the ReaderGroupMeaning
     */
    public String getReaderGroupMeaning() {
        return (String)getAttributeInternal(READERGROUPMEANING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReaderGroupMeaning.
     * @param value value to set the  ReaderGroupMeaning
     */
    public void setReaderGroupMeaning(String value) {
        setAttributeInternal(READERGROUPMEANING, value);
    }

    /**
     * Gets the attribute value for SUGGESTION using the alias name Suggestion.
     * @return the SUGGESTION
     */
    public String getSuggestion() {
        return (String)getAttributeInternal(SUGGESTION);
    }

    /**
     * Sets <code>value</code> as attribute value for SUGGESTION using the alias name Suggestion.
     * @param value value to set the SUGGESTION
     */
    public void setSuggestion(String value) {
        setAttributeInternal(SUGGESTION, value);
    }

    /**
     * Gets the attribute value for KEYWORD using the alias name Keyword.
     * @return the KEYWORD
     */
    public String getKeyword() {
        return (String)getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for KEYWORD using the alias name Keyword.
     * @param value value to set the KEYWORD
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4PeriodicalCategory.
     */
    public RowSet getLookup4PeriodicalCategory() {
        return (RowSet)getAttributeInternal(LOOKUP4PERIODICALCATEGORY);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4PeriodYear.
     */
    public RowSet getLookup4PeriodYear() {
        return (RowSet)getAttributeInternal(LOOKUP4PERIODYEAR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4Lang.
     */
    public RowSet getLookup4Lang() {
        return (RowSet)getAttributeInternal(LOOKUP4LANG);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4Mainpage.
     */
    public RowSet getLookup4Mainpage() {
        return (RowSet)getAttributeInternal(LOOKUP4MAINPAGE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4ColorNum.
     */
    public RowSet getLookup4ColorNum() {
        return (RowSet)getAttributeInternal(LOOKUP4COLORNUM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4Typeset.
     */
    public RowSet getLookup4Typeset() {
        return (RowSet)getAttributeInternal(LOOKUP4TYPESET);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4AssortProd.
     */
    public RowSet getLookup4AssortProd() {
        return (RowSet)getAttributeInternal(LOOKUP4ASSORTPROD);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Lookup4SetupId.
     */
    public RowSet getLookup4SetupId() {
        return (RowSet)getAttributeInternal(LOOKUP4SETUPID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    protected ViewObject findOrCreateLocalViewObject(ViewAccessorDef viewAccessorDef) {
        return super.findOrCreateLocalViewObject(viewAccessorDef);
    }

    public ViewObject findOrCreateVO(String string) {
        return findOrCreateLocalViewObject(findViewAccessorDef(string));
    }
}
