package com.zypg.cms.work.model.am;


import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.am.common.VideoAM;
import com.zypg.cms.work.model.viewobject.book.query.CmsBookQVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocUcmRelTVOImpl;
import com.zypg.cms.work.model.viewobject.video.CmsVideoEditVOImpl;
import com.zypg.cms.work.model.viewobject.video.CmsVideoEditVORowImpl;
import com.zypg.cms.work.model.viewobject.video.CmsVideoTVOImpl;
import com.zypg.cms.work.model.viewobject.video.CmsVideoTVORowImpl;
import com.zypg.cms.work.model.viewobject.video.query.CmsVideoQVOImpl;
import com.zypg.cms.work.model.viewobject.video.query.CmsVideoQueryVOImpl;
import com.zypg.cms.work.model.viewobject.video.query.CmsVideoVOImpl;

import java.sql.SQLException;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 21 11:26:36 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VideoAMImpl extends CustomApplicationModuleImpl implements VideoAM {
    /**
     * This is the default constructor (do not remove).
     */
    public VideoAMImpl() {
    }

    /****************************************视频库相关**************************************************************/
    public Number preEditVideo(String mode, Number docId, String compCode) {
        CmsVideoTVOImpl cmsVideoTVO = this.getCmsVideoTVO();
        if ("CREATE".equals(mode)) {
            CmsDocTVOImpl docVO = this.getCmsDocTVO();
            CmsDocTVORowImpl docNewRow = (CmsDocTVORowImpl)docVO.createRow();
            docNewRow.setStatus("TO_INDEX_VIDEO");
            docNewRow.setLibCode("VIDEO");
            docNewRow.setLibTypeCode("MATERIAL_LIB");
            docNewRow.setCompCode(compCode);
            docVO.insertRow(docNewRow);
            CmsVideoTVORowImpl videoNewRow = (CmsVideoTVORowImpl)cmsVideoTVO.createRow();
            videoNewRow.setDocId(docNewRow.getDocId());
            cmsVideoTVO.insertRow(videoNewRow);

            preDocCategroupRel(mode, docNewRow.getDocId());
            docId = docNewRow.getDocId();
        } else {
            cmsVideoTVO.setbvDocId(docId);
            cmsVideoTVO.executeQuery();
            Row row = cmsVideoTVO.first();
            if (row != null) {
                row.setAttribute("LastUpdateDate", new Date());
                cmsVideoTVO.setCurrentRow(row);
            }
            preDocCategroupRel(mode, docId);
        }
        return docId;
    }

    public void initVideoEditVO() {
        CmsVideoEditVOImpl vo = this.getCmsVideoEditVO();
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public void preDocCategroupRel(String mode, Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        if ("CREATE".equals(mode)) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow =
                (CmsDocCategoryRelTVORowImpl)docCategoryRelVO.createRow();
            docCategoryRelNewRow.setDocId(docId);
            docCategoryRelNewRow.setCategoryGroupType("BY_CATEGORY");
            docCategoryRelNewRow.setCategoryId(new Number(-1));
            docCategoryRelVO.insertRow(docCategoryRelNewRow);
        } else {
            docCategoryRelVO.setbvDocId(docId);
            docCategoryRelVO.executeQuery();
            Row row = docCategoryRelVO.first();
            if (row != null) {
                docCategoryRelVO.setCurrentRow(row);
            }
        }
    }

    public void initInfo4View(Number docId) {
        CmsVideoTVOImpl vo = this.getCmsVideoTVO4View();
        vo.setbvDocId(docId);
        vo.executeQuery();
        CmsDocUcmRelTVOImpl durTVO = this.getCmsDocUcmRelTVO4FileList();
        durTVO.setbvDocId(docId);
        durTVO.executeQuery();
    }

    public Number preScriptVideo(Number docId) {
        CmsVideoTVOImpl videoVO = this.getCmsVideoTVO();
        videoVO.setbvDocId(docId);
        videoVO.executeQuery();
        Row r = videoVO.first();
        if (r != null) {
            CmsVideoTVORowImpl row = (CmsVideoTVORowImpl)r;
            boolean b = videoVO.setCurrentRow(row);
        }
        return null;
    }

    public void batchEditVideo(String docIds) {
        String[] docId = docIds.split(",");
        CmsVideoTVOImpl videoVO = this.getCmsVideoTVO();
        CmsVideoEditVOImpl editVO = this.getCmsVideoEditVO();
        CmsVideoEditVORowImpl editRow = (CmsVideoEditVORowImpl)editVO.getCurrentRow();
        for (String id : docId) {
            try {
                videoVO.setbvDocId(new Number(id));
            } catch (SQLException e) {
                e.printStackTrace();
            }
            videoVO.executeQuery();
            Row row = videoVO.first();
            if (row != null) {
                CmsVideoTVORowImpl videoRow = (CmsVideoTVORowImpl)row;
                for (String attr : editRow.getAttributeNames()) {
                    if (editRow.getAttribute(attr) != null) {
                        if ("Keyword".equals(attr)) {
                            String oldKeyword = videoRow.getKeyword();
                            String newKeyword = null;
                            if (oldKeyword == null) {
                                newKeyword = editRow.getAttribute(attr) + "";
                            } else {
                                newKeyword = oldKeyword + "," + editRow.getAttribute(attr);
                            }
                            videoRow.setAttribute(attr, newKeyword);
                        } else {
                            videoRow.setAttribute(attr, editRow.getAttribute(attr));
                        }
                    }
                }
                videoRow.setLastUpdatedBy(this.getCustomDBTransaction().getUserId());
                videoRow.setLastUpdateDate(new Date());
                try {
                    if (editRow.getCategoryId() != null) {
                        updateCategoryRel(editRow.getCategoryId(), new Number(id));
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void updateCategoryRel(Number categoryId, Number docId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        docCategoryRelVO.setbvDocId(docId);
        docCategoryRelVO.executeQuery();
        Row row = docCategoryRelVO.first();
        if (row != null) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow = (CmsDocCategoryRelTVORowImpl)row;
            docCategoryRelNewRow.setCategoryId(categoryId);
        }
    }

    public void initVideo4View(Number docId) {
        CmsVideoTVOImpl videoVO = this.getCmsVideoTVO4View();
        videoVO.setbvDocId(docId);
        videoVO.executeQuery();
        Row row = videoVO.first();
        if (row != null) {
            videoVO.setCurrentRow(row);
        }
    }

    /**
     * 初始化高级查询面板
     */
    public void initComplexSearch4Video() {
        CmsVideoQVOImpl vo = this.getCmsVideoQVO();
        vo.executeQuery();
        vo.setCurrentRow(vo.first());
    }


    /**
     * Container's getter for CmsVideoTVO.
     * @return CmsVideoTVO
     */
    public CmsVideoTVOImpl getCmsVideoTVO() {
        return (CmsVideoTVOImpl)findViewObject("CmsVideoTVO");
    }

    /**
     * Container's getter for CmsVideoVO.
     * @return CmsVideoVO
     */
    public CmsVideoVOImpl getCmsVideoVO() {
        return (CmsVideoVOImpl)findViewObject("CmsVideoVO");
    }

    /**
     * Container's getter for CmsDocTVO.
     * @return CmsDocTVO
     */
    public CmsDocTVOImpl getCmsDocTVO() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO");
    }

    /**
     * Container's getter for CmsDocCategoryRelTVO.
     * @return CmsDocCategoryRelTVO
     */
    public CmsDocCategoryRelTVOImpl getCmsDocCategoryRelTVO() {
        return (CmsDocCategoryRelTVOImpl)findViewObject("CmsDocCategoryRelTVO");
    }

    /**
     * Container's getter for CmsVideoEditVO.
     * @return CmsVideoEditVO
     */
    public CmsVideoEditVOImpl getCmsVideoEditVO() {
        return (CmsVideoEditVOImpl)findViewObject("CmsVideoEditVO");
    }


    /**
     * Container's getter for CmsVideoTVO4View.
     * @return CmsVideoTVO4View
     */
    public CmsVideoTVOImpl getCmsVideoTVO4View() {
        return (CmsVideoTVOImpl)findViewObject("CmsVideoTVO4View");
    }

    /**
     * Container's getter for CmsDocUcmRelTVO4FileList.
     * @return CmsDocUcmRelTVO4FileList
     */
    public CmsDocUcmRelTVOImpl getCmsDocUcmRelTVO4FileList() {
        return (CmsDocUcmRelTVOImpl)findViewObject("CmsDocUcmRelTVO4FileList");
    }

    /**
     * Container's getter for CmsVideoQueryVO.
     * @return CmsVideoQueryVO
     */
    public CmsVideoQueryVOImpl getCmsVideoQueryVO() {
        return (CmsVideoQueryVOImpl)findViewObject("CmsVideoQueryVO");
    }

    /**
     * Container's getter for CmsVideoQVO.
     * @return CmsVideoQVO
     */
    public CmsVideoQVOImpl getCmsVideoQVO() {
        return (CmsVideoQVOImpl)findViewObject("CmsVideoQVO");
    }
}
