package com.zypg.cms.work.model.am;


import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.viewobject.common.CmsDocTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVORowImpl;
import com.zypg.cms.work.model.viewobject.resexp.query.CmsResCommonInfoVOImpl;
import com.zypg.cms.work.model.viewobject.resexp.query.CmsResCommonInfoVORowImpl;
import com.zypg.cms.work.model.viewobject.theme.CmsThemeResourceTVOImpl;
import com.zypg.cms.work.model.viewobject.theme.CmsThemeTVOImpl;
import com.zypg.cms.work.model.viewobject.theme.CmsThemeTVORowImpl;
import com.zypg.cms.work.model.viewobject.theme.CmsThemeTreeTVOImpl;
import com.zypg.cms.work.model.viewobject.theme.CmsThemeTreeTVORowImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsAudioOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsBookOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsCoursewareOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsElecProdOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsEncyclopediasEntryOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsIllustrationOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsMaterialFigureOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsNewspaperOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsPeriodicalOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsPhotographyFigureOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsTeachingPlanOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsVideoOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.origin.CmsWorksEntryOriginVOImpl;
import com.zypg.cms.work.model.viewobject.theme.query.CmsThemeExportLibVOImpl;
import com.zypg.cms.work.model.viewobject.theme.query.CmsThemeResourceVOImpl;
import com.zypg.cms.work.model.viewobject.theme.query.CmsThemeTreeVOImpl;
import com.zypg.cms.work.model.viewobject.theme.query.CmsThemeVOImpl;
import com.zypg.cms.work.model.viewobject.theme.query.CmsThemeVORowImpl;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 27 10:33:09 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ThemeAMImpl extends CustomApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public ThemeAMImpl() {
    }

    /**
     * 创建导出日志，由于申请下载是后加，复用主题导出，所有方法名等均以主题命名
     * @param log   日志内容
     * @param batch 导出批次
     * @param type 日志类型，主题导出（THEME）、申请下载(APPLY)
     */
    public void createThemeExportLog(String log, Number batch, String type) {
        ViewObject vo = this.getCmsThemeExportLogTVO();
        Row newRow = vo.createRow();
        vo.insertRow(newRow);
        newRow.setAttribute("LogContent", log);
        newRow.setAttribute("BatchNumber", batch);
        newRow.setAttribute("Attribute1", 0);
        newRow.setAttribute("Attribute2", type);
    }

    public void updateThemeExportLogStatus(String log, Number batch) {
        ViewObject vo = this.getCmsThemeExportLogTVO();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vr = vc.createViewCriteriaRow();
        vr.setAttribute("LogContent", log);
        vr.setAttribute("BatchNumber", batch);
        vc.add(vr);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
        Row firstRow = vo.first();
        if (firstRow != null) {
            firstRow.setAttribute("Attribute1", 1);
        }
    }

    public oracle.jbo.domain.Number getThemeExportMaxBatchNumber() {
        ViewObject vo = this.getExportLogCurrentBatchVO();
        vo.executeQuery();
        Row firstRow = vo.first();
        if (firstRow != null) {
            return (oracle.jbo.domain.Number)firstRow.getAttribute("Maxbatchnumber");
        }
        return new oracle.jbo.domain.Number(0);
    }


    public Number preEditTheme(String mode, Number docId, String compCode) {
        CmsThemeTVOImpl themeVO = this.getCmsThemeTVO();
        if ("CREATE".equals(mode)) {
            CmsDocTVOImpl docVO = this.getCmsDocTVO();
            CmsDocTVORowImpl docNewRow = (CmsDocTVORowImpl)docVO.createRow();
            docNewRow.setStatus("TO_INDEX_THEME");
            docNewRow.setLibCode("THEME");
            docNewRow.setLibTypeCode("THEME_LIB");
            docNewRow.setCompCode(compCode);
            docVO.insertRow(docNewRow);

            CmsThemeTVORowImpl themeNewRow = (CmsThemeTVORowImpl)themeVO.createRow();
            themeNewRow.setDocId(docNewRow.getDocId());
            themeNewRow.setUserDisplayName(this.getCustomDBTransaction().getDisplayName());
            themeVO.insertRow(themeNewRow);
            themeVO.setCurrentRow(themeNewRow);
            return docNewRow.getDocId();
        } else {
            themeVO.setbvDocId(docId);
            themeVO.executeQuery();
            Row row = themeVO.first();
            if (row != null) {
                row.setAttribute("LastUpdateDate", new Date());
                themeVO.setCurrentRow(row);
            }
            return docId;
        }
    }

    public Row getRootNode(String compCode, Number docId) {
        System.out.println("compCode:" + compCode + "  docId:" + docId);
        CmsThemeTreeVOImpl vo = this.getCmsThemeTreeVO();
        vo.setbvCompCode(compCode);
        vo.setbvDocId(docId);
        vo.setbvNodeType("ROOT");
        vo.executeQuery();
        return vo.first();
    }

    public CmsThemeVORowImpl getThemeRow(Number docId) {
        CmsThemeVOImpl vo = this.getCmsThemeVO4Query();
        vo.setbvDocId(docId);
        vo.executeQuery();
        CmsThemeVORowImpl row = (CmsThemeVORowImpl)vo.first();
        if (row != null) {
            return row;
        }
        return null;
    }

    public String preMakeTheme(String compCode, Number docId) {
        CmsThemeTreeTVOImpl treeTVO = this.getCmsThemeTreeTVO();
        Row row = getRootNode(compCode, docId);
        if (row == null) {
            CmsThemeTreeTVORowImpl treeRow = (CmsThemeTreeTVORowImpl)treeTVO.createRow();
            treeRow.setNodeName(this.getThemeRow(docId).getThemeName());
            treeRow.setNodeType("ROOT");
            treeRow.setCompCode(compCode);
            treeRow.setParentNodeId(docId);
            treeTVO.insertRow(treeRow);
            this.getDBTransaction().commit();
            return treeRow.getNodeId().toString();
        }
        return row.getAttribute("NodeId").toString();
    }

    public void addThemeTreeNode(String compCode, Number parentNodeId) {
        CmsThemeTreeTVOImpl treeTVO = this.getCmsThemeTreeTVO();
        CmsThemeTreeTVORowImpl treeRow = (CmsThemeTreeTVORowImpl)treeTVO.createRow();
        treeRow.setNodeName("未命名");
        treeRow.setNodeType("CHILD");
        treeRow.setCompCode(compCode);
        treeRow.setParentNodeId(parentNodeId);
        treeTVO.insertRow(treeRow);
        treeTVO.setCurrentRow(treeRow);
        this.getDBTransaction().commit();
    }

    public String deleteThemeTreeNode(Number nodeId) {
        String result = null;
        CallableStatement st = null;
        try {
            st =
 this.getDBTransaction().createCallableStatement("begin ? := cms_work_platform_pkg.delete_theme_tree_node(?); end;",
                                                 this.getDBTransaction().DEFAULT);
            st.registerOutParameter(1, Types.VARCHAR);
            st.setObject(2, nodeId);
            st.execute();
            this.getDBTransaction().commit();
            result = (String)st.getObject(1);
        } catch (SQLException e) {
            result = "E";
            e.printStackTrace();
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }


    public String getThemeResourceStatistics(Number nodeId) {
        String result = null;
        CallableStatement st = null;
        try {
            st =
 this.getDBTransaction().createCallableStatement("begin ? := cms_work_platform_pkg.get_theme_resource_statistics(?); end;",
                                                 this.getDBTransaction().DEFAULT);
            st.registerOutParameter(1, Types.VARCHAR);
            st.setObject(2, nodeId);
            st.execute();
            result = (String)st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }


    public String deleteThemeResource(Number resourceId) {
        String result = null;
        CallableStatement st = null;
        try {
            st =
 this.getDBTransaction().createCallableStatement("begin ? := cms_work_platform_pkg.delete_theme_resource(?); end;",
                                                 this.getDBTransaction().DEFAULT);
            st.registerOutParameter(1, Types.VARCHAR);
            st.setObject(2, resourceId);
            st.execute();
            result = (String)st.getObject(1);
        } catch (SQLException e) {
            result = e.getMessage();
            e.printStackTrace();
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }

    /**
     * 检验资源是否已经在主题中已存在
     * @param docId
     * @param nodeId
     * @param compCode
     * @return
     */
    private String checkResExsitInTheme(String docId, String nodeId, String compCode) {
        String resName = null;
        CallableStatement st = null;
        try {
            st =
 this.getDBTransaction().createCallableStatement("begin ? := cms_work_platform_pkg.check_res_exsit_in_theme(?,?,?); end;",
                                                 this.getDBTransaction().DEFAULT);
            st.registerOutParameter(1, Types.VARCHAR);
            st.setObject(2, docId);
            st.setObject(3, nodeId);
            st.setObject(4, compCode);
            st.execute();
            resName = st.getString(1);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return resName;
    }


    /**
     * 检验资源是否在主题中已经存在
     * @param docIds
     * @param nodeId
     * @param compCode
     * @return
     */
    public Map<String, String> checkaddThemeResource(String docIds, String nodeId, String compCode) {
        Map<String, String> map = new HashMap<String, String>();
        String resNames = "";
        String docIdStr = "";
        if (docIds != null && docIds.length() > 0) {
            for (String docId : docIds.substring(0, docIds.length() - 1).split(",")) {
                String resName = this.checkResExsitInTheme(docId, nodeId, compCode);
                if (resName != null) {
                    resNames = resNames + "," + resName;
                    docIdStr = docIdStr + "," + docId;
                }
            }
        }
        if (docIdStr != null && docIdStr.length() > 0) {
            map.put("name", resNames.substring(1, resNames.length()));
            map.put("docId", docIdStr.substring(1, docIdStr.length()));
        }
        return map;
    }


    public String addThemeResource(String nodeId, String docId, String compCode) {
        String result = null;
        CallableStatement st = null;
        try {
            st =
 this.getDBTransaction().createCallableStatement("begin ? := cms_work_platform_pkg.insert_theme_resource(?,?,?,?); end;",
                                                 this.getDBTransaction().DEFAULT);
            st.registerOutParameter(1, Types.VARCHAR);
            st.setObject(2, nodeId);
            st.setObject(3, docId);
            st.setObject(4, compCode);
            st.setObject(5, this.getCustomDBTransaction().getUserId());
            st.execute();
            result = (String)st.getObject(1);
        } catch (SQLException e) {
            result = e.getMessage();
            e.printStackTrace();
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }


    /**
     * Container's getter for CmsDocTVO.
     * @return CmsDocTVO
     */
    public CmsDocTVOImpl getCmsDocTVO() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO");
    }

    /**
     * Container's getter for CmsThemeVO.
     * @return CmsThemeVO
     */
    public CmsThemeVOImpl getCmsThemeVO() {
        return (CmsThemeVOImpl)findViewObject("CmsThemeVO");
    }

    /**
     * Container's getter for CmsThemeTVO.
     * @return CmsThemeTVO
     */
    public CmsThemeTVOImpl getCmsThemeTVO() {
        return (CmsThemeTVOImpl)findViewObject("CmsThemeTVO");
    }


    /**
     * Container's getter for CmsThemeTreeVO.
     * @return CmsThemeTreeVO
     */
    public CmsThemeTreeVOImpl getCmsThemeTreeVO() {
        return (CmsThemeTreeVOImpl)findViewObject("CmsThemeTreeVO");
    }


    /**
     * Container's getter for CmsThemeVO4Query.
     * @return CmsThemeVO4Query
     */
    public CmsThemeVOImpl getCmsThemeVO4Query() {
        return (CmsThemeVOImpl)findViewObject("CmsThemeVO4Query");
    }


    /**
     * Container's getter for CmsThemeTreeTVO.
     * @return CmsThemeTreeTVO
     */
    public CmsThemeTreeTVOImpl getCmsThemeTreeTVO() {
        return (CmsThemeTreeTVOImpl)findViewObject("CmsThemeTreeTVO");
    }


    /**
     * Container's getter for CmsThemeResourceVO.
     * @return CmsThemeResourceVO
     */
    public CmsThemeResourceVOImpl getCmsThemeResourceVO() {
        return (CmsThemeResourceVOImpl)findViewObject("CmsThemeResourceVO");
    }

    /**
     * Container's getter for CmsBookOriginVO.
     * @return CmsBookOriginVO
     */
    public CmsBookOriginVOImpl getCmsBookOriginVO() {
        return (CmsBookOriginVOImpl)findViewObject("CmsBookOriginVO");
    }

    /**
     * Container's getter for CmsAudioOriginVO1.
     * @return CmsAudioOriginVO1
     */
    public CmsAudioOriginVOImpl getCmsAudioOriginVO() {
        return (CmsAudioOriginVOImpl)findViewObject("CmsAudioOriginVO");
    }

    /**
     * Container's getter for CmsEncyclopediasEntryOriginVO.
     * @return CmsEncyclopediasEntryOriginVO
     */
    public CmsEncyclopediasEntryOriginVOImpl getCmsEncyclopediasEntryOriginVO() {
        return (CmsEncyclopediasEntryOriginVOImpl)findViewObject("CmsEncyclopediasEntryOriginVO");
    }

    /**
     * Container's getter for CmsWorksEntryOriginVO.
     * @return CmsWorksEntryOriginVO
     */
    public CmsWorksEntryOriginVOImpl getCmsWorksEntryOriginVO() {
        return (CmsWorksEntryOriginVOImpl)findViewObject("CmsWorksEntryOriginVO");
    }

    /**
     * Container's getter for CmsVideoOriginVO.
     * @return CmsVideoOriginVO
     */
    public CmsVideoOriginVOImpl getCmsVideoOriginVO() {
        return (CmsVideoOriginVOImpl)findViewObject("CmsVideoOriginVO");
    }

    /**
     * Container's getter for CmsPhotographyFigureOriginVO.
     * @return CmsPhotographyFigureOriginVO
     */
    public CmsPhotographyFigureOriginVOImpl getCmsPhotographyFigureOriginVO() {
        return (CmsPhotographyFigureOriginVOImpl)findViewObject("CmsPhotographyFigureOriginVO");
    }

    /**
     * Container's getter for CmsMaterialFigureOriginVO.
     * @return CmsMaterialFigureOriginVO
     */
    public CmsMaterialFigureOriginVOImpl getCmsMaterialFigureOriginVO() {
        return (CmsMaterialFigureOriginVOImpl)findViewObject("CmsMaterialFigureOriginVO");
    }

    /**
     * Container's getter for CmsIllustrationOriginVO.
     * @return CmsIllustrationOriginVO
     */
    public CmsIllustrationOriginVOImpl getCmsIllustrationOriginVO() {
        return (CmsIllustrationOriginVOImpl)findViewObject("CmsIllustrationOriginVO");
    }

    /**
     * Container's getter for CmsThemeResourceTVO.
     * @return CmsThemeResourceTVO
     */
    public CmsThemeResourceTVOImpl getCmsThemeResourceTVO() {
        return (CmsThemeResourceTVOImpl)findViewObject("CmsThemeResourceTVO");
    }

    /**
     * Container's getter for CmsThemeExportLibVO.
     * @return CmsThemeExportLibVO
     */
    public CmsThemeExportLibVOImpl getCmsThemeExportLibVO() {
        return (CmsThemeExportLibVOImpl)findViewObject("CmsThemeExportLibVO");
    }

    /**
     * Container's getter for CmsCoursewareOriginVO.
     * @return CmsCoursewareOriginVO
     */
    public CmsCoursewareOriginVOImpl getCmsCoursewareOriginVO() {
        return (CmsCoursewareOriginVOImpl)findViewObject("CmsCoursewareOriginVO");
    }

    /**
     * Container's getter for CmsElecProdOriginVO.
     * @return CmsElecProdOriginVO
     */
    public CmsElecProdOriginVOImpl getCmsElecProdOriginVO() {
        return (CmsElecProdOriginVOImpl)findViewObject("CmsElecProdOriginVO");
    }

    /**
     * Container's getter for CmsNewspaperOriginVO.
     * @return CmsNewspaperOriginVO
     */
    public CmsNewspaperOriginVOImpl getCmsNewspaperOriginVO() {
        return (CmsNewspaperOriginVOImpl)findViewObject("CmsNewspaperOriginVO");
    }

    /**
     * Container's getter for CmsPeriodicalOriginVO.
     * @return CmsPeriodicalOriginVO
     */
    public CmsPeriodicalOriginVOImpl getCmsPeriodicalOriginVO() {
        return (CmsPeriodicalOriginVOImpl)findViewObject("CmsPeriodicalOriginVO");
    }

    /**
     * Container's getter for CmsTeachingPlanOriginVO.
     * @return CmsTeachingPlanOriginVO
     */
    public CmsTeachingPlanOriginVOImpl getCmsTeachingPlanOriginVO() {
        return (CmsTeachingPlanOriginVOImpl)findViewObject("CmsTeachingPlanOriginVO");
    }

    /**
     * Container's getter for CmsResCommonInfoVO1.
     * @return CmsResCommonInfoVO1
     */
    public CmsResCommonInfoVOImpl getCmsResCommonInfoVO1() {
        return (CmsResCommonInfoVOImpl)findViewObject("CmsResCommonInfoVO1");
    }


    /**
     * Container's getter for CmsThemeExportLogTVO1.
     * @return CmsThemeExportLogTVO1
     */
    public ViewObjectImpl getCmsThemeExportLogTVO() {
        return (ViewObjectImpl)findViewObject("CmsThemeExportLogTVO");
    }

    /**
     * Container's getter for ExportLogCurrentBatchVO1.
     * @return ExportLogCurrentBatchVO1
     */
    public ViewObjectImpl getExportLogCurrentBatchVO() {
        return (ViewObjectImpl)findViewObject("ExportLogCurrentBatchVO");
    }

    /**
     * Container's getter for showExportLogVO1.
     * @return showExportLogVO1
     */
    public ViewObjectImpl getshowExportLogVO1() {
        return (ViewObjectImpl)findViewObject("showExportLogVO1");
    }
}
