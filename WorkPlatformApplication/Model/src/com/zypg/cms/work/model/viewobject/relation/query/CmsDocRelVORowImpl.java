package com.zypg.cms.work.model.viewobject.relation.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 14 11:38:39 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsDocRelVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        DocIdDisplay {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getDocIdDisplay();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setDocIdDisplay((String)value);
            }
        }
        ,
        Title {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getTitle();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        LibName {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getLibName();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setLibName((String)value);
            }
        }
        ,
        Status {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        StatusName {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getStatusName();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setStatusName((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        ParentDocId {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getParentDocId();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setParentDocId((Number)value);
            }
        }
        ,
        RelType {
            public Object get(CmsDocRelVORowImpl obj) {
                return obj.getRelType();
            }

            public void put(CmsDocRelVORowImpl obj, Object value) {
                obj.setRelType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsDocRelVORowImpl object);

        public abstract void put(CmsDocRelVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDDISPLAY = AttributesEnum.DocIdDisplay.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int LIBNAME = AttributesEnum.LibName.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int STATUSNAME = AttributesEnum.StatusName.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int PARENTDOCID = AttributesEnum.ParentDocId.index();
    public static final int RELTYPE = AttributesEnum.RelType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsDocRelVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdDisplay.
     * @return the DocIdDisplay
     */
    public String getDocIdDisplay() {
        return (String) getAttributeInternal(DOCIDDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdDisplay.
     * @param value value to set the  DocIdDisplay
     */
    public void setDocIdDisplay(String value) {
        setAttributeInternal(DOCIDDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Title.
     * @return the Title
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Title.
     * @param value value to set the  Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibName.
     * @return the LibName
     */
    public String getLibName() {
        return (String) getAttributeInternal(LIBNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibName.
     * @param value value to set the  LibName
     */
    public void setLibName(String value) {
        setAttributeInternal(LIBNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatusName.
     * @return the StatusName
     */
    public String getStatusName() {
        return (String) getAttributeInternal(STATUSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatusName.
     * @param value value to set the  StatusName
     */
    public void setStatusName(String value) {
        setAttributeInternal(STATUSNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentDocId.
     * @return the ParentDocId
     */
    public Number getParentDocId() {
        return (Number) getAttributeInternal(PARENTDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParentDocId.
     * @param value value to set the  ParentDocId
     */
    public void setParentDocId(Number value) {
        setAttributeInternal(PARENTDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RelType.
     * @return the RelType
     */
    public String getRelType() {
        return (String) getAttributeInternal(RELTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RelType.
     * @param value value to set the  RelType
     */
    public void setRelType(String value) {
        setAttributeInternal(RELTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
