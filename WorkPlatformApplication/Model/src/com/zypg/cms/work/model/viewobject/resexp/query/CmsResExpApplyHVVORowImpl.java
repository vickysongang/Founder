package com.zypg.cms.work.model.viewobject.resexp.query;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 22 12:34:18 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsResExpApplyHVVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ApplyId {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getApplyId();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setApplyId((Number)value);
            }
        }
        ,
        ApplyName {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getApplyName();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setApplyName((String)value);
            }
        }
        ,
        TemplateId {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getTemplateId();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setTemplateId((Number)value);
            }
        }
        ,
        UserId {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getUserId();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setUserId((Number)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        Status {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        BatchCode {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getBatchCode();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setBatchCode((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsResExpApplyHVVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsResExpApplyHVVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsResExpApplyHVVORowImpl object);

        public abstract void put(CmsResExpApplyHVVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int APPLYID = AttributesEnum.ApplyId.index();
    public static final int APPLYNAME = AttributesEnum.ApplyName.index();
    public static final int TEMPLATEID = AttributesEnum.TemplateId.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int BATCHCODE = AttributesEnum.BatchCode.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsResExpApplyHVVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ApplyId.
     * @return the ApplyId
     */
    public Number getApplyId() {
        return (Number) getAttributeInternal(APPLYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ApplyId.
     * @param value value to set the  ApplyId
     */
    public void setApplyId(Number value) {
        setAttributeInternal(APPLYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ApplyName.
     * @return the ApplyName
     */
    public String getApplyName() {
        return (String) getAttributeInternal(APPLYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ApplyName.
     * @param value value to set the  ApplyName
     */
    public void setApplyName(String value) {
        setAttributeInternal(APPLYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TemplateId.
     * @return the TemplateId
     */
    public Number getTemplateId() {
        return (Number) getAttributeInternal(TEMPLATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TemplateId.
     * @param value value to set the  TemplateId
     */
    public void setTemplateId(Number value) {
        setAttributeInternal(TEMPLATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UserId.
     * @return the UserId
     */
    public Number getUserId() {
        return (Number) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UserId.
     * @param value value to set the  UserId
     */
    public void setUserId(Number value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BatchCode.
     * @return the BatchCode
     */
    public String getBatchCode() {
        return (String) getAttributeInternal(BATCHCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BatchCode.
     * @param value value to set the  BatchCode
     */
    public void setBatchCode(String value) {
        setAttributeInternal(BATCHCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
