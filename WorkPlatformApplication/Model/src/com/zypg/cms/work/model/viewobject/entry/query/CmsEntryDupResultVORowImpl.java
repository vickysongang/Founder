package com.zypg.cms.work.model.viewobject.entry.query;

import java.math.BigDecimal;
import java.math.BigInteger;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 04 11:41:53 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsEntryDupResultVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EntryId {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getEntryId();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setEntryId((Number)value);
            }
        }
        ,
        EntryName {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getEntryName();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setEntryName((String)value);
            }
        }
        ,
        Source {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getSource();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setSource((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        DocId {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        ThisFillTime {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getThisFillTime();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setThisFillTime((Date)value);
            }
        }
        ,
        FillTimeDisplay {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getFillTimeDisplay();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setFillTimeDisplay((String)value);
            }
        }
        ,
        Rate {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getRate();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setRate((Number)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsEntryDupResultVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsEntryDupResultVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsEntryDupResultVORowImpl object);

        public abstract void put(CmsEntryDupResultVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ENTRYID = AttributesEnum.EntryId.index();
    public static final int ENTRYNAME = AttributesEnum.EntryName.index();
    public static final int SOURCE = AttributesEnum.Source.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int THISFILLTIME = AttributesEnum.ThisFillTime.index();
    public static final int FILLTIMEDISPLAY = AttributesEnum.FillTimeDisplay.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsEntryDupResultVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute EntryId.
     * @return the EntryId
     */
    public Number getEntryId() {
        return (Number) getAttributeInternal(ENTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EntryId.
     * @param value value to set the  EntryId
     */
    public void setEntryId(Number value) {
        setAttributeInternal(ENTRYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EntryName.
     * @return the EntryName
     */
    public String getEntryName() {
        return (String) getAttributeInternal(ENTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EntryName.
     * @param value value to set the  EntryName
     */
    public void setEntryName(String value) {
        setAttributeInternal(ENTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Source.
     * @return the Source
     */
    public String getSource() {
        return (String) getAttributeInternal(SOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Source.
     * @param value value to set the  Source
     */
    public void setSource(String value) {
        setAttributeInternal(SOURCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String) getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThisFillTime.
     * @return the ThisFillTime
     */
    public Date getThisFillTime() {
        return (Date) getAttributeInternal(THISFILLTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThisFillTime.
     * @param value value to set the  ThisFillTime
     */
    public void setThisFillTime(Date value) {
        setAttributeInternal(THISFILLTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FillTimeDisplay.
     * @return the FillTimeDisplay
     */
    public String getFillTimeDisplay() {
        return (String) getAttributeInternal(FILLTIMEDISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FillTimeDisplay.
     * @param value value to set the  FillTimeDisplay
     */
    public void setFillTimeDisplay(String value) {
        setAttributeInternal(FILLTIMEDISPLAY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Rate.
     * @return the Rate
     */
    public Number getRate() {
        return (Number) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Rate.
     * @param value value to set the  Rate
     */
    public void setRate(Number value) {
        setAttributeInternal(RATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
