package com.zypg.cms.work.model.viewobject.book.query;

import java.math.BigDecimal;

import java.util.Hashtable;
import java.util.List;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 14 12:23:15 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsBookVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BookId {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getBookId();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setBookId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        BookName {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getBookName();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setBookName((String)value);
            }
        }
        ,
        Isbn {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getIsbn();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setIsbn((String)value);
            }
        }
        ,
        PubTime {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getPubTime();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setPubTime((Date)value);
            }
        }
        ,
        EditionImpression {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getEditionImpression();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setEditionImpression((String)value);
            }
        }
        ,
        Author {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getAuthor();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setAuthor((String)value);
            }
        }
        ,
        Edition {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getEdition();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setEdition((Number)value);
            }
        }
        ,
        Impression {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getImpression();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setImpression((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Status {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        CategoryId {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        CategoryGroupType {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getCategoryGroupType();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setCategoryGroupType((String)value);
            }
        }
        ,
        DeleteFlag {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        }
        ,
        Checked {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ,
        ThumbnailUrl {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getThumbnailUrl();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setThumbnailUrl((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        PublishingHouse {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getPublishingHouse();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setPublishingHouse((String)value);
            }
        }
        ,
        ChapterFlag {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getChapterFlag();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setChapterFlag((String)value);
            }
        }
        ,
        SyncFlag {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getSyncFlag();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setSyncFlag((String)value);
            }
        }
        ,
        Series {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getSeries();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setSeries((String)value);
            }
        }
        ,
        CategoryName {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getCategoryName();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setCategoryName((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        ItemCode {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getItemCode();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setItemCode((String)value);
            }
        }
        ,
        Lang {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getLang();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setLang((String)value);
            }
        }
        ,
        Editor {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getEditor();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setEditor((String)value);
            }
        }
        ,
        FormatDesign {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getFormatDesign();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setFormatDesign((String)value);
            }
        }
        ,
        CoverDesign {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getCoverDesign();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setCoverDesign((String)value);
            }
        }
        ,
        ChiefEditor {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getChiefEditor();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setChiefEditor((String)value);
            }
        }
        ,
        Translator {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getTranslator();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setTranslator((String)value);
            }
        }
        ,
        Pagination {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getPagination();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setPagination((BigDecimal)value);
            }
        }
        ,
        Price {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getPrice();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setPrice((BigDecimal)value);
            }
        }
        ,
        ReaderGroup {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getReaderGroup();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setReaderGroup((String)value);
            }
        }
        ,
        Suggestion {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getSuggestion();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setSuggestion((String)value);
            }
        }
        ,
        ProdSize {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getProdSize();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setProdSize((String)value);
            }
        }
        ,
        ColorNum {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getColorNum();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setColorNum((String)value);
            }
        }
        ,
        CoverTypeset {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getCoverTypeset();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setCoverTypeset((String)value);
            }
        }
        ,
        AssortProd {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getAssortProd();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setAssortProd((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        BookSize {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getBookSize();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setBookSize((String)value);
            }
        }
        ,
        MainPage {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getMainPage();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setMainPage((String)value);
            }
        }
        ,
        MainTypeset {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getMainTypeset();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setMainTypeset((String)value);
            }
        }
        ,
        FormatComp {
            public Object get(CmsBookVORowImpl obj) {
                return obj.getFormatComp();
            }

            public void put(CmsBookVORowImpl obj, Object value) {
                obj.setFormatComp((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsBookVORowImpl object);

        public abstract void put(CmsBookVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BOOKID = AttributesEnum.BookId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int BOOKNAME = AttributesEnum.BookName.index();
    public static final int ISBN = AttributesEnum.Isbn.index();
    public static final int PUBTIME = AttributesEnum.PubTime.index();
    public static final int EDITIONIMPRESSION = AttributesEnum.EditionImpression.index();
    public static final int AUTHOR = AttributesEnum.Author.index();
    public static final int EDITION = AttributesEnum.Edition.index();
    public static final int IMPRESSION = AttributesEnum.Impression.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int CATEGORYGROUPTYPE = AttributesEnum.CategoryGroupType.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int CHECKED = AttributesEnum.Checked.index();
    public static final int THUMBNAILURL = AttributesEnum.ThumbnailUrl.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int PUBLISHINGHOUSE = AttributesEnum.PublishingHouse.index();
    public static final int CHAPTERFLAG = AttributesEnum.ChapterFlag.index();
    public static final int SYNCFLAG = AttributesEnum.SyncFlag.index();
    public static final int SERIES = AttributesEnum.Series.index();
    public static final int CATEGORYNAME = AttributesEnum.CategoryName.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ITEMCODE = AttributesEnum.ItemCode.index();
    public static final int LANG = AttributesEnum.Lang.index();
    public static final int EDITOR = AttributesEnum.Editor.index();
    public static final int FORMATDESIGN = AttributesEnum.FormatDesign.index();
    public static final int COVERDESIGN = AttributesEnum.CoverDesign.index();
    public static final int CHIEFEDITOR = AttributesEnum.ChiefEditor.index();
    public static final int TRANSLATOR = AttributesEnum.Translator.index();
    public static final int PAGINATION = AttributesEnum.Pagination.index();
    public static final int PRICE = AttributesEnum.Price.index();
    public static final int READERGROUP = AttributesEnum.ReaderGroup.index();
    public static final int SUGGESTION = AttributesEnum.Suggestion.index();
    public static final int PRODSIZE = AttributesEnum.ProdSize.index();
    public static final int COLORNUM = AttributesEnum.ColorNum.index();
    public static final int COVERTYPESET = AttributesEnum.CoverTypeset.index();
    public static final int ASSORTPROD = AttributesEnum.AssortProd.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int BOOKSIZE = AttributesEnum.BookSize.index();
    public static final int MAINPAGE = AttributesEnum.MainPage.index();
    public static final int MAINTYPESET = AttributesEnum.MainTypeset.index();
    public static final int FORMATCOMP = AttributesEnum.FormatComp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsBookVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute BookId.
     * @return the BookId
     */
    public Number getBookId() {
        return (Number)getAttributeInternal(BOOKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookId.
     * @param value value to set the  BookId
     */
    public void setBookId(Number value) {
        setAttributeInternal(BOOKID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BookName.
     * @return the BookName
     */
    public String getBookName() {
        return (String)getAttributeInternal(BOOKNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookName.
     * @param value value to set the  BookName
     */
    public void setBookName(String value) {
        setAttributeInternal(BOOKNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Isbn.
     * @return the Isbn
     */
    public String getIsbn() {
        return (String)getAttributeInternal(ISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Isbn.
     * @param value value to set the  Isbn
     */
    public void setIsbn(String value) {
        setAttributeInternal(ISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PubTime.
     * @return the PubTime
     */
    public Date getPubTime() {
        return (Date)getAttributeInternal(PUBTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PubTime.
     * @param value value to set the  PubTime
     */
    public void setPubTime(Date value) {
        setAttributeInternal(PUBTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EditionImpression.
     * @return the EditionImpression
     */
    public String getEditionImpression() {
        return (String)getAttributeInternal(EDITIONIMPRESSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EditionImpression.
     * @param value value to set the  EditionImpression
     */
    public void setEditionImpression(String value) {
        setAttributeInternal(EDITIONIMPRESSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Author.
     * @return the Author
     */
    public String getAuthor() {
        return (String)getAttributeInternal(AUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Author.
     * @param value value to set the  Author
     */
    public void setAuthor(String value) {
        setAttributeInternal(AUTHOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Edition.
     * @return the Edition
     */
    public Number getEdition() {
        return (Number)getAttributeInternal(EDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Edition.
     * @param value value to set the  Edition
     */
    public void setEdition(Number value) {
        setAttributeInternal(EDITION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Impression.
     * @return the Impression
     */
    public Number getImpression() {
        return (Number)getAttributeInternal(IMPRESSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Impression.
     * @param value value to set the  Impression
     */
    public void setImpression(Number value) {
        setAttributeInternal(IMPRESSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String)getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryId.
     * @return the CategoryId
     */
    public Number getCategoryId() {
        return (Number)getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryId.
     * @param value value to set the  CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryGroupType.
     * @return the CategoryGroupType
     */
    public String getCategoryGroupType() {
        return (String)getAttributeInternal(CATEGORYGROUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryGroupType.
     * @param value value to set the  CategoryGroupType
     */
    public void setCategoryGroupType(String value) {
        setAttributeInternal(CATEGORYGROUPTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String)getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        Boolean result = null;
        Hashtable map = this.getDBTransaction().getSession().getUserData();
        String status = null;
        if ("Y".equals(this.getDeleteFlag())) {
            status = "DELETED_" + this.getLibCode();
        } else {
            status = this.getStatus();
        }
        String selectAllFlag = (String)map.get(status + "_selectAllFlag");
        String key = status + "_" + this.getDocId();
        List<String> currSelectedList = (List<String>)map.get(status + "_currSelected");
        if ("O".equals(selectAllFlag)) {
            if (currSelectedList.contains(key)) {
                result = true;
            } else {
                result = false;
            }
        } else {
            if ("Y".equals(selectAllFlag)) {
                result = true;
            } else if ("N".equals(selectAllFlag)) {
                result = false;
            }
        }
        this.setChecked(result);
        return (Boolean)getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThumbnailUrl.
     * @return the ThumbnailUrl
     */
    public String getThumbnailUrl() {
        return (String)getAttributeInternal(THUMBNAILURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThumbnailUrl.
     * @param value value to set the  ThumbnailUrl
     */
    public void setThumbnailUrl(String value) {
        setAttributeInternal(THUMBNAILURL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String)getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String)getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PublishingHouse.
     * @return the PublishingHouse
     */
    public String getPublishingHouse() {
        return (String)getAttributeInternal(PUBLISHINGHOUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PublishingHouse.
     * @param value value to set the  PublishingHouse
     */
    public void setPublishingHouse(String value) {
        setAttributeInternal(PUBLISHINGHOUSE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChapterFlag.
     * @return the ChapterFlag
     */
    public String getChapterFlag() {
        return (String)getAttributeInternal(CHAPTERFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChapterFlag.
     * @param value value to set the  ChapterFlag
     */
    public void setChapterFlag(String value) {
        setAttributeInternal(CHAPTERFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SyncFlag.
     * @return the SyncFlag
     */
    public String getSyncFlag() {
        return (String)getAttributeInternal(SYNCFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SyncFlag.
     * @param value value to set the  SyncFlag
     */
    public void setSyncFlag(String value) {
        setAttributeInternal(SYNCFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Series.
     * @return the Series
     */
    public String getSeries() {
        return (String) getAttributeInternal(SERIES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Series.
     * @param value value to set the  Series
     */
    public void setSeries(String value) {
        setAttributeInternal(SERIES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryName.
     * @return the CategoryName
     */
    public String getCategoryName() {
        return (String) getAttributeInternal(CATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryName.
     * @param value value to set the  CategoryName
     */
    public void setCategoryName(String value) {
        setAttributeInternal(CATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Attribute2.
     * @param value value to set the  Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemCode.
     * @return the ItemCode
     */
    public String getItemCode() {
        return (String) getAttributeInternal(ITEMCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemCode.
     * @param value value to set the  ItemCode
     */
    public void setItemCode(String value) {
        setAttributeInternal(ITEMCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Lang.
     * @return the Lang
     */
    public String getLang() {
        return (String) getAttributeInternal(LANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Lang.
     * @param value value to set the  Lang
     */
    public void setLang(String value) {
        setAttributeInternal(LANG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Editor.
     * @return the Editor
     */
    public String getEditor() {
        return (String) getAttributeInternal(EDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Editor.
     * @param value value to set the  Editor
     */
    public void setEditor(String value) {
        setAttributeInternal(EDITOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FormatDesign.
     * @return the FormatDesign
     */
    public String getFormatDesign() {
        return (String) getAttributeInternal(FORMATDESIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FormatDesign.
     * @param value value to set the  FormatDesign
     */
    public void setFormatDesign(String value) {
        setAttributeInternal(FORMATDESIGN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoverDesign.
     * @return the CoverDesign
     */
    public String getCoverDesign() {
        return (String) getAttributeInternal(COVERDESIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoverDesign.
     * @param value value to set the  CoverDesign
     */
    public void setCoverDesign(String value) {
        setAttributeInternal(COVERDESIGN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChiefEditor.
     * @return the ChiefEditor
     */
    public String getChiefEditor() {
        return (String) getAttributeInternal(CHIEFEDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChiefEditor.
     * @param value value to set the  ChiefEditor
     */
    public void setChiefEditor(String value) {
        setAttributeInternal(CHIEFEDITOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Translator.
     * @return the Translator
     */
    public String getTranslator() {
        return (String) getAttributeInternal(TRANSLATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Translator.
     * @param value value to set the  Translator
     */
    public void setTranslator(String value) {
        setAttributeInternal(TRANSLATOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Pagination.
     * @return the Pagination
     */
    public BigDecimal getPagination() {
        return (BigDecimal) getAttributeInternal(PAGINATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Pagination.
     * @param value value to set the  Pagination
     */
    public void setPagination(BigDecimal value) {
        setAttributeInternal(PAGINATION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Price.
     * @return the Price
     */
    public BigDecimal getPrice() {
        return (BigDecimal) getAttributeInternal(PRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Price.
     * @param value value to set the  Price
     */
    public void setPrice(BigDecimal value) {
        setAttributeInternal(PRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReaderGroup.
     * @return the ReaderGroup
     */
    public String getReaderGroup() {
        return (String) getAttributeInternal(READERGROUP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReaderGroup.
     * @param value value to set the  ReaderGroup
     */
    public void setReaderGroup(String value) {
        setAttributeInternal(READERGROUP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Suggestion.
     * @return the Suggestion
     */
    public String getSuggestion() {
        return (String) getAttributeInternal(SUGGESTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Suggestion.
     * @param value value to set the  Suggestion
     */
    public void setSuggestion(String value) {
        setAttributeInternal(SUGGESTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProdSize.
     * @return the ProdSize
     */
    public String getProdSize() {
        return (String) getAttributeInternal(PRODSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProdSize.
     * @param value value to set the  ProdSize
     */
    public void setProdSize(String value) {
        setAttributeInternal(PRODSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColorNum.
     * @return the ColorNum
     */
    public String getColorNum() {
        return (String) getAttributeInternal(COLORNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColorNum.
     * @param value value to set the  ColorNum
     */
    public void setColorNum(String value) {
        setAttributeInternal(COLORNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoverTypeset.
     * @return the CoverTypeset
     */
    public String getCoverTypeset() {
        return (String) getAttributeInternal(COVERTYPESET);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoverTypeset.
     * @param value value to set the  CoverTypeset
     */
    public void setCoverTypeset(String value) {
        setAttributeInternal(COVERTYPESET, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AssortProd.
     * @return the AssortProd
     */
    public String getAssortProd() {
        return (String) getAttributeInternal(ASSORTPROD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AssortProd.
     * @param value value to set the  AssortProd
     */
    public void setAssortProd(String value) {
        setAttributeInternal(ASSORTPROD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BookSize.
     * @return the BookSize
     */
    public String getBookSize() {
        return (String) getAttributeInternal(BOOKSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookSize.
     * @param value value to set the  BookSize
     */
    public void setBookSize(String value) {
        setAttributeInternal(BOOKSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MainPage.
     * @return the MainPage
     */
    public String getMainPage() {
        return (String) getAttributeInternal(MAINPAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MainPage.
     * @param value value to set the  MainPage
     */
    public void setMainPage(String value) {
        setAttributeInternal(MAINPAGE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MainTypeset.
     * @return the MainTypeset
     */
    public String getMainTypeset() {
        return (String) getAttributeInternal(MAINTYPESET);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MainTypeset.
     * @param value value to set the  MainTypeset
     */
    public void setMainTypeset(String value) {
        setAttributeInternal(MAINTYPESET, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FormatComp.
     * @return the FormatComp
     */
    public String getFormatComp() {
        return (String) getAttributeInternal(FORMATCOMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FormatComp.
     * @param value value to set the  FormatComp
     */
    public void setFormatComp(String value) {
        setAttributeInternal(FORMATCOMP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
