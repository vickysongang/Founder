package com.zypg.cms.work.model.am;


import com.honythink.applicationframework.hadf.CustomApplicationModuleImpl;

import com.zypg.cms.work.model.am.common.NewspaperAM;
import com.zypg.cms.work.model.viewobject.book.query.CmsBookQVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocCategoryRelTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVOImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocTVORowImpl;
import com.zypg.cms.work.model.viewobject.common.CmsDocUcmRelTVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.CmsNewspaperEditVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.CmsNewspaperEditVORowImpl;
import com.zypg.cms.work.model.viewobject.newspaper.CmsNewspaperTVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.CmsNewspaperTVORowImpl;
import com.zypg.cms.work.model.viewobject.newspaper.lov.CmsNewsNumVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.lov.CmsNewsYearVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.lov.CmsNewspaperCategoryVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.lov.CmsNewspaperCategoryVORowImpl;
import com.zypg.cms.work.model.viewobject.newspaper.query.CmsNewspaperQVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.query.CmsNewspaperQueryVOImpl;
import com.zypg.cms.work.model.viewobject.newspaper.query.CmsNewspaperVOImpl;
import com.zypg.cms.work.model.viewobject.relation.CmsDocRelTVOImpl;

import java.sql.SQLException;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 21 13:17:32 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NewspaperAMImpl extends CustomApplicationModuleImpl implements NewspaperAM {
    /**
     * This is the default constructor (do not remove).
     */
    public NewspaperAMImpl() {
    }

    public Number preEditNewspaper(String mode, Number docId, String compCode) {
        this.getDBTransaction().getSession().getUserData().put("compCode", compCode);
        Number result = null;
        CmsNewspaperTVOImpl newspaperTVO = this.getCmsNewspaperTVO();
        if ("CREATE".equals(mode)) {
            CmsDocTVOImpl docVO = this.getCmsDocTVO();
            CmsDocTVORowImpl docNewRow = (CmsDocTVORowImpl)docVO.createRow();
            docNewRow.setStatus("TO_GATHER_NEWSPAPER");
            docNewRow.setLibCode("NEWSPAPER");
            docNewRow.setLibTypeCode("END_PROD_LIB");
            docNewRow.setCompCode(compCode);
            docVO.insertRow(docNewRow);

            CmsNewspaperTVORowImpl newRow = (CmsNewspaperTVORowImpl)newspaperTVO.createRow();

            //初始化
            CmsNewspaperCategoryVOImpl newspaperCategoryVO = this.getCmsNewspaperCategoryVO();
            CmsNewspaperCategoryVORowImpl row = (CmsNewspaperCategoryVORowImpl)newspaperCategoryVO.first();
            if (row != null) {
                newRow.setNewspaperCategoryId(row.getNewspaperCategoryId());
                newRow.setDocId(docNewRow.getDocId());
                newRow.setPrice(row.getPrice());
                newRow.setNewspaperType(row.getNewspaperType());
                newRow.setNewspaperTypeMeaning(row.getNewspaperTypeMeaning());
                newRow.setIssn(row.getIssn());
                newRow.setCn(row.getCn());
                newRow.setLang(row.getLang());
                newRow.setLangMeaning(row.getLangMeaning());
                newRow.setChiefEditor(row.getChiefEditor());
                newRow.setBookSize(row.getBookSize());
                newRow.setBookSizeMeaning(row.getBookSizeMeaning());
                newRow.setProdSize(row.getProdSize());
                newRow.setProdSizeMeaning(row.getProdSizeMeaning());
                newRow.setReaderGroup(row.getReaderGroup());
                newRow.setReaderGroupMeaning(row.getReaderGroupMeaning());
                newspaperTVO.insertRow(newRow);
                preDocCategroupRel(mode, docNewRow.getDocId(), row.getNewspaperCategoryId());
            }

            result = newRow.getDocId();
        } else {
            result = docId;
            newspaperTVO.setbvDocId(docId);
            newspaperTVO.executeQuery();
            Row row = newspaperTVO.first();
            if (row != null) {
                row.setAttribute("LastUpdateDate", new Date());
                newspaperTVO.setCurrentRow(row);
            }
            preDocCategroupRel(mode, docId, null);
        }
        return result;
    }

    public void initInfo4View(Number docId) {
        CmsDocTVOImpl docVO = this.getCmsDocTVO4View();
        docVO.setbvDocId(docId);
        docVO.executeQuery();
        CmsDocUcmRelTVOImpl durTVO = this.getCmsDocUcmRelTVO4FileList();
        durTVO.setbvDocId(docId);
        durTVO.executeQuery();
        Row row = docVO.first();
        if (row != null) {
            docVO.setCurrentRow(row);
        }
    }

    private void preDocCategroupRel(String mode, Number docId, Number categoryId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        if ("CREATE".equals(mode)) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow =
                (CmsDocCategoryRelTVORowImpl)docCategoryRelVO.createRow();
            docCategoryRelNewRow.setDocId(docId);
            docCategoryRelNewRow.setCategoryGroupType("BY_CATEGORY");
            docCategoryRelNewRow.setCategoryId(categoryId);
            docCategoryRelVO.insertRow(docCategoryRelNewRow);
            docCategoryRelVO.setCurrentRow(docCategoryRelNewRow);
        } else {
            docCategoryRelVO.setbvDocId(docId);
            docCategoryRelVO.executeQuery();
            Row row = docCategoryRelVO.first();
            if (row != null) {
                docCategoryRelVO.setCurrentRow(row);
            }
        }
    }

    public void updateDocCategroupRel(Number categoryId) {
        CmsDocCategoryRelTVOImpl docCategoryRelVO = this.getCmsDocCategoryRelTVO();
        Row row = docCategoryRelVO.getCurrentRow();
        if (row != null) {
            CmsDocCategoryRelTVORowImpl docCategoryRelNewRow = (CmsDocCategoryRelTVORowImpl)row;
            docCategoryRelNewRow.setCategoryId(categoryId);
        }
    }

    public void initNewspaperEditVO() {
        CmsNewspaperEditVOImpl vo = this.getCmsNewspaperEditVO();
        vo.executeQuery();
        Row row = vo.first();
        if (row != null) {
            vo.setCurrentRow(row);
        }
    }

    public void initNewsNum(Number categoryId, Number year) {
        CmsNewsNumVOImpl vo = (CmsNewsNumVOImpl)this.getCmsNewsNumVO();
        vo.setbvNewspaperCategoryId(categoryId);
        vo.setbvYear(year);
        vo.executeQuery();
    }

    public void initYear(Number categoryId) {
        CmsNewspaperTVOImpl newspaperTVO = this.getCmsNewspaperTVO();
        CmsNewspaperTVORowImpl currentRow = (CmsNewspaperTVORowImpl)newspaperTVO.getCurrentRow();
        //初始化
        CmsNewspaperCategoryVOImpl newspaperCategoryVO = this.getCmsNewspaperCategoryVO();
        Row[] categoryRows = newspaperCategoryVO.getFilteredRows("NewspaperCategoryId", categoryId);
        if (categoryRows.length > 0) {
            CmsNewspaperCategoryVORowImpl row = (CmsNewspaperCategoryVORowImpl)categoryRows[0];
            currentRow.setNewspaperCategoryId(row.getNewspaperCategoryId());
            currentRow.setPrice(row.getPrice());
            currentRow.setNewspaperType(row.getNewspaperTypeMeaning());
            currentRow.setIssn(row.getIssn());
            currentRow.setCn(row.getCn());
            currentRow.setLang(row.getLangMeaning());
            currentRow.setChiefEditor(row.getChiefEditor());
            currentRow.setBookSize(row.getBookSizeMeaning());
            newspaperTVO.setCurrentRow(currentRow);
        }
    }

    public void batchEditNewspaper(String docIds) {
        String[] docId = docIds.split(",");
        CmsNewspaperTVOImpl newspaperVO = this.getCmsNewspaperTVO();
        CmsNewspaperEditVOImpl editVO = this.getCmsNewspaperEditVO();
        CmsNewspaperEditVORowImpl editRow = (CmsNewspaperEditVORowImpl)editVO.getCurrentRow();
        for (String id : docId) {
            try {
                newspaperVO.setbvDocId(new Number(id));
            } catch (SQLException e) {
                e.printStackTrace();
            }
            newspaperVO.executeQuery();
            Row row = newspaperVO.first();
            if (row != null) {
                CmsNewspaperTVORowImpl newspaperRow = (CmsNewspaperTVORowImpl)row;
                for (String attr : editRow.getAttributeNames()) {
                    if (editRow.getAttribute(attr) != null) {
                        if ("Keyword".equals(attr)) {
                            String oldKeyword = newspaperRow.getKeyword();
                            String newKeyword = null;
                            if (oldKeyword == null) {
                                newKeyword = editRow.getAttribute(attr) + "";
                            } else {
                                newKeyword = oldKeyword + "," + editRow.getAttribute(attr);
                            }
                            newspaperRow.setAttribute(attr, newKeyword);
                        } else if (attr.indexOf("Lookup") >= 0) {

                        } else {
                            newspaperRow.setAttribute(attr, editRow.getAttribute(attr));
                        }
                    }
                }
                newspaperRow.setLastUpdatedBy(this.getCustomDBTransaction().getUserId());
                newspaperRow.setLastUpdateDate(new Date());
            }
        }
    }

    public long initOnlineReadInfo(Number docId) {
        CmsDocUcmRelTVOImpl onlineReadVO = this.getCmsDocUcmRelTVO4OnlineRead();
        onlineReadVO.setbvDocId(docId);
        onlineReadVO.executeQuery();
        onlineReadVO.setRangeSize(-1);
        return onlineReadVO.getEstimatedRowCount();
    }

    /**
     * 初始化高级查询面板
     */
    public void initComplexSearch4Newspaper() {
        CmsNewspaperQVOImpl vo = this.getCmsNewspaperQVO();
        vo.executeQuery();
        vo.setCurrentRow(vo.first());
    }

    /**
     * Container's getter for CmsDocCategoryRelTVO.
     * @return CmsDocCategoryRelTVO
     */
    public CmsDocCategoryRelTVOImpl getCmsDocCategoryRelTVO() {
        return (CmsDocCategoryRelTVOImpl)findViewObject("CmsDocCategoryRelTVO");
    }

    /**
     * Container's getter for CmsDocTVO.
     * @return CmsDocTVO
     */
    public CmsDocTVOImpl getCmsDocTVO() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO");
    }

    /**
     * Container's getter for CmsNewspaperVO.
     * @return CmsNewspaperVO
     */
    public CmsNewspaperVOImpl getCmsNewspaperVO() {
        return (CmsNewspaperVOImpl)findViewObject("CmsNewspaperVO");
    }


    /**
     * Container's getter for CmsNewsNumVO.
     * @return CmsNewsNumVO
     */
    public ViewObjectImpl getCmsNewsNumVO() {
        return (ViewObjectImpl)findViewObject("CmsNewsNumVO");
    }

    /**
     * Container's getter for CmsNewspaperCategoryVO.
     * @return CmsNewspaperCategoryVO
     */
    public CmsNewspaperCategoryVOImpl getCmsNewspaperCategoryVO() {
        return (CmsNewspaperCategoryVOImpl)findViewObject("CmsNewspaperCategoryVO");
    }

    /**
     * Container's getter for CmsNewsYearVO.
     * @return CmsNewsYearVO
     */
    public ViewObjectImpl getCmsNewsYearVO() {
        return (ViewObjectImpl)findViewObject("CmsNewsYearVO");
    }

    /**
     * Container's getter for CmsNewspaperTVO.
     * @return CmsNewspaperTVO
     */
    public CmsNewspaperTVOImpl getCmsNewspaperTVO() {
        return (CmsNewspaperTVOImpl)findViewObject("CmsNewspaperTVO");
    }

    /**
     * Container's getter for CmsNewspaperEditVO.
     * @return CmsNewspaperEditVO
     */
    public CmsNewspaperEditVOImpl getCmsNewspaperEditVO() {
        return (CmsNewspaperEditVOImpl)findViewObject("CmsNewspaperEditVO");
    }

    /**
     * Container's getter for CmsDocTVO4View.
     * @return CmsDocTVO4View
     */
    public CmsDocTVOImpl getCmsDocTVO4View() {
        return (CmsDocTVOImpl)findViewObject("CmsDocTVO4View");
    }

    /**
     * Container's getter for CmsNewspaperTVO4View.
     * @return CmsNewspaperTVO4View
     */
    public CmsNewspaperTVOImpl getCmsNewspaperTVO4View() {
        return (CmsNewspaperTVOImpl)findViewObject("CmsNewspaperTVO4View");
    }

    /**
     * Container's getter for CmsDoc2NewspaperVL.
     * @return CmsDoc2NewspaperVL
     */
    public ViewLinkImpl getCmsDoc2NewspaperVL() {
        return (ViewLinkImpl)findViewLink("CmsDoc2NewspaperVL");
    }

    /**
     * Container's getter for CmsDocRelTVO4View.
     * @return CmsDocRelTVO4View
     */
    public CmsDocRelTVOImpl getCmsDocRelTVO4View() {
        return (CmsDocRelTVOImpl)findViewObject("CmsDocRelTVO4View");
    }

    /**
     * Container's getter for CmsDoc2DocRelVL.
     * @return CmsDoc2DocRelVL
     */
    public ViewLinkImpl getCmsDoc2DocRelVL() {
        return (ViewLinkImpl)findViewLink("CmsDoc2DocRelVL");
    }

    /**
     * Container's getter for CmsDocUcmRelTVO4FileList.
     * @return CmsDocUcmRelTVO4FileList
     */
    public CmsDocUcmRelTVOImpl getCmsDocUcmRelTVO4FileList() {
        return (CmsDocUcmRelTVOImpl)findViewObject("CmsDocUcmRelTVO4FileList");
    }

    /**
     * Container's getter for CmsDocUcmRelTVO4OnlineRead.
     * @return CmsDocUcmRelTVO4OnlineRead
     */
    public CmsDocUcmRelTVOImpl getCmsDocUcmRelTVO4OnlineRead() {
        return (CmsDocUcmRelTVOImpl)findViewObject("CmsDocUcmRelTVO4OnlineRead");
    }

    /**
     * Container's getter for CmsNewspaperQueryVO.
     * @return CmsNewspaperQueryVO
     */
    public CmsNewspaperQueryVOImpl getCmsNewspaperQueryVO() {
        return (CmsNewspaperQueryVOImpl)findViewObject("CmsNewspaperQueryVO");
    }

    /**
     * Container's getter for CmsNewspaperQVO.
     * @return CmsNewspaperQVO
     */
    public CmsNewspaperQVOImpl getCmsNewspaperQVO() {
        return (CmsNewspaperQVOImpl)findViewObject("CmsNewspaperQVO");
    }
}
