package com.zypg.cms.work.model.viewobject.exif;

import com.zypg.cms.work.model.entity.CmsFigureExifInfoTEOImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 23 15:17:49 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsFigureExifInfoTVORowImpl extends ViewRowImpl {


    public static final int ENTITY_CMSFIGUREEXIFINFOTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        InfoId {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getInfoId();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setInfoId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        ImageDescription {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getImageDescription();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setImageDescription((String)value);
            }
        }
        ,
        Make {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getMake();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setMake((String)value);
            }
        }
        ,
        Model {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getModel();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setModel((String)value);
            }
        }
        ,
        Orientation {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getOrientation();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setOrientation((String)value);
            }
        }
        ,
        XResolution {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getXResolution();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setXResolution((String)value);
            }
        }
        ,
        YResolution {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getYResolution();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setYResolution((String)value);
            }
        }
        ,
        ResolutionUnit {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getResolutionUnit();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setResolutionUnit((String)value);
            }
        }
        ,
        DateTime {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getDateTime();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setDateTime((String)value);
            }
        }
        ,
        YcbcrPositioning {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getYcbcrPositioning();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setYcbcrPositioning((String)value);
            }
        }
        ,
        ExposureTime {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getExposureTime();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setExposureTime((String)value);
            }
        }
        ,
        FNumber {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFNumber();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFNumber((String)value);
            }
        }
        ,
        IsoSpeedRatings {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getIsoSpeedRatings();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setIsoSpeedRatings((String)value);
            }
        }
        ,
        ExifVersion {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getExifVersion();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setExifVersion((String)value);
            }
        }
        ,
        DateTimeOriginal {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getDateTimeOriginal();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setDateTimeOriginal((String)value);
            }
        }
        ,
        DateTimeDigitized {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getDateTimeDigitized();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setDateTimeDigitized((String)value);
            }
        }
        ,
        ComponentsConfiguration {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getComponentsConfiguration();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setComponentsConfiguration((String)value);
            }
        }
        ,
        CompressedBitsPerPixel {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getCompressedBitsPerPixel();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setCompressedBitsPerPixel((String)value);
            }
        }
        ,
        ShutterSpeedValue {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getShutterSpeedValue();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setShutterSpeedValue((String)value);
            }
        }
        ,
        ApertureValue {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getApertureValue();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setApertureValue((String)value);
            }
        }
        ,
        ExposureBiasValue {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getExposureBiasValue();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setExposureBiasValue((String)value);
            }
        }
        ,
        MaxApertureValue {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getMaxApertureValue();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setMaxApertureValue((String)value);
            }
        }
        ,
        MeteringMode {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getMeteringMode();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setMeteringMode((String)value);
            }
        }
        ,
        Flash {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFlash();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFlash((String)value);
            }
        }
        ,
        FocalLength {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFocalLength();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFocalLength((String)value);
            }
        }
        ,
        UserComment {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getUserComment();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setUserComment((String)value);
            }
        }
        ,
        FlashpixVersion {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFlashpixVersion();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFlashpixVersion((String)value);
            }
        }
        ,
        ColorSpace {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getColorSpace();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setColorSpace((String)value);
            }
        }
        ,
        ExifImageWidth {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getExifImageWidth();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setExifImageWidth((String)value);
            }
        }
        ,
        ExifImageHeight {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getExifImageHeight();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setExifImageHeight((String)value);
            }
        }
        ,
        FocalPlaneXResolution {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFocalPlaneXResolution();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFocalPlaneXResolution((String)value);
            }
        }
        ,
        FocalPlaneYResolution {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFocalPlaneYResolution();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFocalPlaneYResolution((String)value);
            }
        }
        ,
        FocalPlaneResolutionUnit {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFocalPlaneResolutionUnit();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFocalPlaneResolutionUnit((String)value);
            }
        }
        ,
        SensingMethod {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getSensingMethod();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setSensingMethod((String)value);
            }
        }
        ,
        FileSource {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getFileSource();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setFileSource((String)value);
            }
        }
        ,
        CustomRendered {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getCustomRendered();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setCustomRendered((String)value);
            }
        }
        ,
        ExposureMode {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getExposureMode();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setExposureMode((String)value);
            }
        }
        ,
        WhiteBalance {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getWhiteBalance();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setWhiteBalance((String)value);
            }
        }
        ,
        DigitalZoomRatio {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getDigitalZoomRatio();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setDigitalZoomRatio((String)value);
            }
        }
        ,
        SceneCaptureType {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getSceneCaptureType();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setSceneCaptureType((String)value);
            }
        }
        ,
        Compression {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getCompression();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setCompression((String)value);
            }
        }
        ,
        ThumbnailOffset {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getThumbnailOffset();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setThumbnailOffset((String)value);
            }
        }
        ,
        ThumbnailLength {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getThumbnailLength();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setThumbnailLength((String)value);
            }
        }
        ,
        ThumbnailData {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getThumbnailData();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setThumbnailData((String)value);
            }
        }
        ,
        ObjectVersionNumber {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getObjectVersionNumber();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setObjectVersionNumber((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Attribute1 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute6();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute7();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute8();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute9();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute10();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        Attribute11 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute11();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute11((String)value);
            }
        }
        ,
        Attribute12 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute12();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute12((String)value);
            }
        }
        ,
        Attribute13 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute13();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute13((String)value);
            }
        }
        ,
        Attribute14 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute14();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute14((String)value);
            }
        }
        ,
        Attribute15 {
            public Object get(CmsFigureExifInfoTVORowImpl obj) {
                return obj.getAttribute15();
            }

            public void put(CmsFigureExifInfoTVORowImpl obj, Object value) {
                obj.setAttribute15((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsFigureExifInfoTVORowImpl object);

        public abstract void put(CmsFigureExifInfoTVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INFOID = AttributesEnum.InfoId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int IMAGEDESCRIPTION = AttributesEnum.ImageDescription.index();
    public static final int MAKE = AttributesEnum.Make.index();
    public static final int MODEL = AttributesEnum.Model.index();
    public static final int ORIENTATION = AttributesEnum.Orientation.index();
    public static final int XRESOLUTION = AttributesEnum.XResolution.index();
    public static final int YRESOLUTION = AttributesEnum.YResolution.index();
    public static final int RESOLUTIONUNIT = AttributesEnum.ResolutionUnit.index();
    public static final int DATETIME = AttributesEnum.DateTime.index();
    public static final int YCBCRPOSITIONING = AttributesEnum.YcbcrPositioning.index();
    public static final int EXPOSURETIME = AttributesEnum.ExposureTime.index();
    public static final int FNUMBER = AttributesEnum.FNumber.index();
    public static final int ISOSPEEDRATINGS = AttributesEnum.IsoSpeedRatings.index();
    public static final int EXIFVERSION = AttributesEnum.ExifVersion.index();
    public static final int DATETIMEORIGINAL = AttributesEnum.DateTimeOriginal.index();
    public static final int DATETIMEDIGITIZED = AttributesEnum.DateTimeDigitized.index();
    public static final int COMPONENTSCONFIGURATION = AttributesEnum.ComponentsConfiguration.index();
    public static final int COMPRESSEDBITSPERPIXEL = AttributesEnum.CompressedBitsPerPixel.index();
    public static final int SHUTTERSPEEDVALUE = AttributesEnum.ShutterSpeedValue.index();
    public static final int APERTUREVALUE = AttributesEnum.ApertureValue.index();
    public static final int EXPOSUREBIASVALUE = AttributesEnum.ExposureBiasValue.index();
    public static final int MAXAPERTUREVALUE = AttributesEnum.MaxApertureValue.index();
    public static final int METERINGMODE = AttributesEnum.MeteringMode.index();
    public static final int FLASH = AttributesEnum.Flash.index();
    public static final int FOCALLENGTH = AttributesEnum.FocalLength.index();
    public static final int USERCOMMENT = AttributesEnum.UserComment.index();
    public static final int FLASHPIXVERSION = AttributesEnum.FlashpixVersion.index();
    public static final int COLORSPACE = AttributesEnum.ColorSpace.index();
    public static final int EXIFIMAGEWIDTH = AttributesEnum.ExifImageWidth.index();
    public static final int EXIFIMAGEHEIGHT = AttributesEnum.ExifImageHeight.index();
    public static final int FOCALPLANEXRESOLUTION = AttributesEnum.FocalPlaneXResolution.index();
    public static final int FOCALPLANEYRESOLUTION = AttributesEnum.FocalPlaneYResolution.index();
    public static final int FOCALPLANERESOLUTIONUNIT = AttributesEnum.FocalPlaneResolutionUnit.index();
    public static final int SENSINGMETHOD = AttributesEnum.SensingMethod.index();
    public static final int FILESOURCE = AttributesEnum.FileSource.index();
    public static final int CUSTOMRENDERED = AttributesEnum.CustomRendered.index();
    public static final int EXPOSUREMODE = AttributesEnum.ExposureMode.index();
    public static final int WHITEBALANCE = AttributesEnum.WhiteBalance.index();
    public static final int DIGITALZOOMRATIO = AttributesEnum.DigitalZoomRatio.index();
    public static final int SCENECAPTURETYPE = AttributesEnum.SceneCaptureType.index();
    public static final int COMPRESSION = AttributesEnum.Compression.index();
    public static final int THUMBNAILOFFSET = AttributesEnum.ThumbnailOffset.index();
    public static final int THUMBNAILLENGTH = AttributesEnum.ThumbnailLength.index();
    public static final int THUMBNAILDATA = AttributesEnum.ThumbnailData.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsFigureExifInfoTVORowImpl() {
    }

    /**
     * Gets CmsFigureExifInfoTEO entity object.
     * @return the CmsFigureExifInfoTEO
     */
    public CmsFigureExifInfoTEOImpl getCmsFigureExifInfoTEO() {
        return (CmsFigureExifInfoTEOImpl)getEntity(ENTITY_CMSFIGUREEXIFINFOTEO);
    }

    /**
     * Gets the attribute value for INFO_ID using the alias name InfoId.
     * @return the INFO_ID
     */
    public Number getInfoId() {
        return (Number) getAttributeInternal(INFOID);
    }

    /**
     * Sets <code>value</code> as attribute value for INFO_ID using the alias name InfoId.
     * @param value value to set the INFO_ID
     */
    public void setInfoId(Number value) {
        setAttributeInternal(INFOID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for IMAGE_DESCRIPTION using the alias name ImageDescription.
     * @return the IMAGE_DESCRIPTION
     */
    public String getImageDescription() {
        return (String) getAttributeInternal(IMAGEDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_DESCRIPTION using the alias name ImageDescription.
     * @param value value to set the IMAGE_DESCRIPTION
     */
    public void setImageDescription(String value) {
        setAttributeInternal(IMAGEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for MAKE using the alias name Make.
     * @return the MAKE
     */
    public String getMake() {
        return (String) getAttributeInternal(MAKE);
    }

    /**
     * Sets <code>value</code> as attribute value for MAKE using the alias name Make.
     * @param value value to set the MAKE
     */
    public void setMake(String value) {
        setAttributeInternal(MAKE, value);
    }

    /**
     * Gets the attribute value for MODEL using the alias name Model.
     * @return the MODEL
     */
    public String getModel() {
        return (String) getAttributeInternal(MODEL);
    }

    /**
     * Sets <code>value</code> as attribute value for MODEL using the alias name Model.
     * @param value value to set the MODEL
     */
    public void setModel(String value) {
        setAttributeInternal(MODEL, value);
    }

    /**
     * Gets the attribute value for ORIENTATION using the alias name Orientation.
     * @return the ORIENTATION
     */
    public String getOrientation() {
        return (String) getAttributeInternal(ORIENTATION);
    }

    /**
     * Sets <code>value</code> as attribute value for ORIENTATION using the alias name Orientation.
     * @param value value to set the ORIENTATION
     */
    public void setOrientation(String value) {
        setAttributeInternal(ORIENTATION, value);
    }

    /**
     * Gets the attribute value for X_RESOLUTION using the alias name XResolution.
     * @return the X_RESOLUTION
     */
    public String getXResolution() {
        return (String) getAttributeInternal(XRESOLUTION);
    }

    /**
     * Sets <code>value</code> as attribute value for X_RESOLUTION using the alias name XResolution.
     * @param value value to set the X_RESOLUTION
     */
    public void setXResolution(String value) {
        setAttributeInternal(XRESOLUTION, value);
    }

    /**
     * Gets the attribute value for Y_RESOLUTION using the alias name YResolution.
     * @return the Y_RESOLUTION
     */
    public String getYResolution() {
        return (String) getAttributeInternal(YRESOLUTION);
    }

    /**
     * Sets <code>value</code> as attribute value for Y_RESOLUTION using the alias name YResolution.
     * @param value value to set the Y_RESOLUTION
     */
    public void setYResolution(String value) {
        setAttributeInternal(YRESOLUTION, value);
    }

    /**
     * Gets the attribute value for RESOLUTION_UNIT using the alias name ResolutionUnit.
     * @return the RESOLUTION_UNIT
     */
    public String getResolutionUnit() {
        return (String) getAttributeInternal(RESOLUTIONUNIT);
    }

    /**
     * Sets <code>value</code> as attribute value for RESOLUTION_UNIT using the alias name ResolutionUnit.
     * @param value value to set the RESOLUTION_UNIT
     */
    public void setResolutionUnit(String value) {
        setAttributeInternal(RESOLUTIONUNIT, value);
    }

    /**
     * Gets the attribute value for DATE_TIME using the alias name DateTime.
     * @return the DATE_TIME
     */
    public String getDateTime() {
        return (String) getAttributeInternal(DATETIME);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_TIME using the alias name DateTime.
     * @param value value to set the DATE_TIME
     */
    public void setDateTime(String value) {
        setAttributeInternal(DATETIME, value);
    }

    /**
     * Gets the attribute value for YCBCR_POSITIONING using the alias name YcbcrPositioning.
     * @return the YCBCR_POSITIONING
     */
    public String getYcbcrPositioning() {
        return (String) getAttributeInternal(YCBCRPOSITIONING);
    }

    /**
     * Sets <code>value</code> as attribute value for YCBCR_POSITIONING using the alias name YcbcrPositioning.
     * @param value value to set the YCBCR_POSITIONING
     */
    public void setYcbcrPositioning(String value) {
        setAttributeInternal(YCBCRPOSITIONING, value);
    }

    /**
     * Gets the attribute value for EXPOSURE_TIME using the alias name ExposureTime.
     * @return the EXPOSURE_TIME
     */
    public String getExposureTime() {
        return (String) getAttributeInternal(EXPOSURETIME);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPOSURE_TIME using the alias name ExposureTime.
     * @param value value to set the EXPOSURE_TIME
     */
    public void setExposureTime(String value) {
        setAttributeInternal(EXPOSURETIME, value);
    }

    /**
     * Gets the attribute value for F_NUMBER using the alias name FNumber.
     * @return the F_NUMBER
     */
    public String getFNumber() {
        return (String) getAttributeInternal(FNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for F_NUMBER using the alias name FNumber.
     * @param value value to set the F_NUMBER
     */
    public void setFNumber(String value) {
        setAttributeInternal(FNUMBER, value);
    }

    /**
     * Gets the attribute value for ISO_SPEED_RATINGS using the alias name IsoSpeedRatings.
     * @return the ISO_SPEED_RATINGS
     */
    public String getIsoSpeedRatings() {
        return (String) getAttributeInternal(ISOSPEEDRATINGS);
    }

    /**
     * Sets <code>value</code> as attribute value for ISO_SPEED_RATINGS using the alias name IsoSpeedRatings.
     * @param value value to set the ISO_SPEED_RATINGS
     */
    public void setIsoSpeedRatings(String value) {
        setAttributeInternal(ISOSPEEDRATINGS, value);
    }

    /**
     * Gets the attribute value for EXIF_VERSION using the alias name ExifVersion.
     * @return the EXIF_VERSION
     */
    public String getExifVersion() {
        return (String) getAttributeInternal(EXIFVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for EXIF_VERSION using the alias name ExifVersion.
     * @param value value to set the EXIF_VERSION
     */
    public void setExifVersion(String value) {
        setAttributeInternal(EXIFVERSION, value);
    }

    /**
     * Gets the attribute value for DATE_TIME_ORIGINAL using the alias name DateTimeOriginal.
     * @return the DATE_TIME_ORIGINAL
     */
    public String getDateTimeOriginal() {
        return (String) getAttributeInternal(DATETIMEORIGINAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_TIME_ORIGINAL using the alias name DateTimeOriginal.
     * @param value value to set the DATE_TIME_ORIGINAL
     */
    public void setDateTimeOriginal(String value) {
        setAttributeInternal(DATETIMEORIGINAL, value);
    }

    /**
     * Gets the attribute value for DATE_TIME_DIGITIZED using the alias name DateTimeDigitized.
     * @return the DATE_TIME_DIGITIZED
     */
    public String getDateTimeDigitized() {
        return (String) getAttributeInternal(DATETIMEDIGITIZED);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_TIME_DIGITIZED using the alias name DateTimeDigitized.
     * @param value value to set the DATE_TIME_DIGITIZED
     */
    public void setDateTimeDigitized(String value) {
        setAttributeInternal(DATETIMEDIGITIZED, value);
    }

    /**
     * Gets the attribute value for COMPONENTS_CONFIGURATION using the alias name ComponentsConfiguration.
     * @return the COMPONENTS_CONFIGURATION
     */
    public String getComponentsConfiguration() {
        return (String) getAttributeInternal(COMPONENTSCONFIGURATION);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPONENTS_CONFIGURATION using the alias name ComponentsConfiguration.
     * @param value value to set the COMPONENTS_CONFIGURATION
     */
    public void setComponentsConfiguration(String value) {
        setAttributeInternal(COMPONENTSCONFIGURATION, value);
    }

    /**
     * Gets the attribute value for COMPRESSED_BITS_PER_PIXEL using the alias name CompressedBitsPerPixel.
     * @return the COMPRESSED_BITS_PER_PIXEL
     */
    public String getCompressedBitsPerPixel() {
        return (String) getAttributeInternal(COMPRESSEDBITSPERPIXEL);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPRESSED_BITS_PER_PIXEL using the alias name CompressedBitsPerPixel.
     * @param value value to set the COMPRESSED_BITS_PER_PIXEL
     */
    public void setCompressedBitsPerPixel(String value) {
        setAttributeInternal(COMPRESSEDBITSPERPIXEL, value);
    }

    /**
     * Gets the attribute value for SHUTTER_SPEED_VALUE using the alias name ShutterSpeedValue.
     * @return the SHUTTER_SPEED_VALUE
     */
    public String getShutterSpeedValue() {
        return (String) getAttributeInternal(SHUTTERSPEEDVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for SHUTTER_SPEED_VALUE using the alias name ShutterSpeedValue.
     * @param value value to set the SHUTTER_SPEED_VALUE
     */
    public void setShutterSpeedValue(String value) {
        setAttributeInternal(SHUTTERSPEEDVALUE, value);
    }

    /**
     * Gets the attribute value for APERTURE_VALUE using the alias name ApertureValue.
     * @return the APERTURE_VALUE
     */
    public String getApertureValue() {
        return (String) getAttributeInternal(APERTUREVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for APERTURE_VALUE using the alias name ApertureValue.
     * @param value value to set the APERTURE_VALUE
     */
    public void setApertureValue(String value) {
        setAttributeInternal(APERTUREVALUE, value);
    }

    /**
     * Gets the attribute value for EXPOSURE_BIAS_VALUE using the alias name ExposureBiasValue.
     * @return the EXPOSURE_BIAS_VALUE
     */
    public String getExposureBiasValue() {
        return (String) getAttributeInternal(EXPOSUREBIASVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPOSURE_BIAS_VALUE using the alias name ExposureBiasValue.
     * @param value value to set the EXPOSURE_BIAS_VALUE
     */
    public void setExposureBiasValue(String value) {
        setAttributeInternal(EXPOSUREBIASVALUE, value);
    }

    /**
     * Gets the attribute value for MAX_APERTURE_VALUE using the alias name MaxApertureValue.
     * @return the MAX_APERTURE_VALUE
     */
    public String getMaxApertureValue() {
        return (String) getAttributeInternal(MAXAPERTUREVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for MAX_APERTURE_VALUE using the alias name MaxApertureValue.
     * @param value value to set the MAX_APERTURE_VALUE
     */
    public void setMaxApertureValue(String value) {
        setAttributeInternal(MAXAPERTUREVALUE, value);
    }

    /**
     * Gets the attribute value for METERING_MODE using the alias name MeteringMode.
     * @return the METERING_MODE
     */
    public String getMeteringMode() {
        return (String) getAttributeInternal(METERINGMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for METERING_MODE using the alias name MeteringMode.
     * @param value value to set the METERING_MODE
     */
    public void setMeteringMode(String value) {
        setAttributeInternal(METERINGMODE, value);
    }

    /**
     * Gets the attribute value for FLASH using the alias name Flash.
     * @return the FLASH
     */
    public String getFlash() {
        return (String) getAttributeInternal(FLASH);
    }

    /**
     * Sets <code>value</code> as attribute value for FLASH using the alias name Flash.
     * @param value value to set the FLASH
     */
    public void setFlash(String value) {
        setAttributeInternal(FLASH, value);
    }

    /**
     * Gets the attribute value for FOCAL_LENGTH using the alias name FocalLength.
     * @return the FOCAL_LENGTH
     */
    public String getFocalLength() {
        return (String) getAttributeInternal(FOCALLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for FOCAL_LENGTH using the alias name FocalLength.
     * @param value value to set the FOCAL_LENGTH
     */
    public void setFocalLength(String value) {
        setAttributeInternal(FOCALLENGTH, value);
    }

    /**
     * Gets the attribute value for USER_COMMENT using the alias name UserComment.
     * @return the USER_COMMENT
     */
    public String getUserComment() {
        return (String) getAttributeInternal(USERCOMMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_COMMENT using the alias name UserComment.
     * @param value value to set the USER_COMMENT
     */
    public void setUserComment(String value) {
        setAttributeInternal(USERCOMMENT, value);
    }

    /**
     * Gets the attribute value for FLASHPIX_VERSION using the alias name FlashpixVersion.
     * @return the FLASHPIX_VERSION
     */
    public String getFlashpixVersion() {
        return (String) getAttributeInternal(FLASHPIXVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for FLASHPIX_VERSION using the alias name FlashpixVersion.
     * @param value value to set the FLASHPIX_VERSION
     */
    public void setFlashpixVersion(String value) {
        setAttributeInternal(FLASHPIXVERSION, value);
    }

    /**
     * Gets the attribute value for COLOR_SPACE using the alias name ColorSpace.
     * @return the COLOR_SPACE
     */
    public String getColorSpace() {
        return (String) getAttributeInternal(COLORSPACE);
    }

    /**
     * Sets <code>value</code> as attribute value for COLOR_SPACE using the alias name ColorSpace.
     * @param value value to set the COLOR_SPACE
     */
    public void setColorSpace(String value) {
        setAttributeInternal(COLORSPACE, value);
    }

    /**
     * Gets the attribute value for EXIF_IMAGE_WIDTH using the alias name ExifImageWidth.
     * @return the EXIF_IMAGE_WIDTH
     */
    public String getExifImageWidth() {
        return (String) getAttributeInternal(EXIFIMAGEWIDTH);
    }

    /**
     * Sets <code>value</code> as attribute value for EXIF_IMAGE_WIDTH using the alias name ExifImageWidth.
     * @param value value to set the EXIF_IMAGE_WIDTH
     */
    public void setExifImageWidth(String value) {
        setAttributeInternal(EXIFIMAGEWIDTH, value);
    }

    /**
     * Gets the attribute value for EXIF_IMAGE_HEIGHT using the alias name ExifImageHeight.
     * @return the EXIF_IMAGE_HEIGHT
     */
    public String getExifImageHeight() {
        return (String) getAttributeInternal(EXIFIMAGEHEIGHT);
    }

    /**
     * Sets <code>value</code> as attribute value for EXIF_IMAGE_HEIGHT using the alias name ExifImageHeight.
     * @param value value to set the EXIF_IMAGE_HEIGHT
     */
    public void setExifImageHeight(String value) {
        setAttributeInternal(EXIFIMAGEHEIGHT, value);
    }

    /**
     * Gets the attribute value for FOCAL_PLANE_X_RESOLUTION using the alias name FocalPlaneXResolution.
     * @return the FOCAL_PLANE_X_RESOLUTION
     */
    public String getFocalPlaneXResolution() {
        return (String) getAttributeInternal(FOCALPLANEXRESOLUTION);
    }

    /**
     * Sets <code>value</code> as attribute value for FOCAL_PLANE_X_RESOLUTION using the alias name FocalPlaneXResolution.
     * @param value value to set the FOCAL_PLANE_X_RESOLUTION
     */
    public void setFocalPlaneXResolution(String value) {
        setAttributeInternal(FOCALPLANEXRESOLUTION, value);
    }

    /**
     * Gets the attribute value for FOCAL_PLANE_Y_RESOLUTION using the alias name FocalPlaneYResolution.
     * @return the FOCAL_PLANE_Y_RESOLUTION
     */
    public String getFocalPlaneYResolution() {
        return (String) getAttributeInternal(FOCALPLANEYRESOLUTION);
    }

    /**
     * Sets <code>value</code> as attribute value for FOCAL_PLANE_Y_RESOLUTION using the alias name FocalPlaneYResolution.
     * @param value value to set the FOCAL_PLANE_Y_RESOLUTION
     */
    public void setFocalPlaneYResolution(String value) {
        setAttributeInternal(FOCALPLANEYRESOLUTION, value);
    }

    /**
     * Gets the attribute value for FOCAL_PLANE_RESOLUTION_UNIT using the alias name FocalPlaneResolutionUnit.
     * @return the FOCAL_PLANE_RESOLUTION_UNIT
     */
    public String getFocalPlaneResolutionUnit() {
        return (String) getAttributeInternal(FOCALPLANERESOLUTIONUNIT);
    }

    /**
     * Sets <code>value</code> as attribute value for FOCAL_PLANE_RESOLUTION_UNIT using the alias name FocalPlaneResolutionUnit.
     * @param value value to set the FOCAL_PLANE_RESOLUTION_UNIT
     */
    public void setFocalPlaneResolutionUnit(String value) {
        setAttributeInternal(FOCALPLANERESOLUTIONUNIT, value);
    }

    /**
     * Gets the attribute value for SENSING_METHOD using the alias name SensingMethod.
     * @return the SENSING_METHOD
     */
    public String getSensingMethod() {
        return (String) getAttributeInternal(SENSINGMETHOD);
    }

    /**
     * Sets <code>value</code> as attribute value for SENSING_METHOD using the alias name SensingMethod.
     * @param value value to set the SENSING_METHOD
     */
    public void setSensingMethod(String value) {
        setAttributeInternal(SENSINGMETHOD, value);
    }

    /**
     * Gets the attribute value for FILE_SOURCE using the alias name FileSource.
     * @return the FILE_SOURCE
     */
    public String getFileSource() {
        return (String) getAttributeInternal(FILESOURCE);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_SOURCE using the alias name FileSource.
     * @param value value to set the FILE_SOURCE
     */
    public void setFileSource(String value) {
        setAttributeInternal(FILESOURCE, value);
    }

    /**
     * Gets the attribute value for CUSTOM_RENDERED using the alias name CustomRendered.
     * @return the CUSTOM_RENDERED
     */
    public String getCustomRendered() {
        return (String) getAttributeInternal(CUSTOMRENDERED);
    }

    /**
     * Sets <code>value</code> as attribute value for CUSTOM_RENDERED using the alias name CustomRendered.
     * @param value value to set the CUSTOM_RENDERED
     */
    public void setCustomRendered(String value) {
        setAttributeInternal(CUSTOMRENDERED, value);
    }

    /**
     * Gets the attribute value for EXPOSURE_MODE using the alias name ExposureMode.
     * @return the EXPOSURE_MODE
     */
    public String getExposureMode() {
        return (String) getAttributeInternal(EXPOSUREMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPOSURE_MODE using the alias name ExposureMode.
     * @param value value to set the EXPOSURE_MODE
     */
    public void setExposureMode(String value) {
        setAttributeInternal(EXPOSUREMODE, value);
    }

    /**
     * Gets the attribute value for WHITE_BALANCE using the alias name WhiteBalance.
     * @return the WHITE_BALANCE
     */
    public String getWhiteBalance() {
        return (String) getAttributeInternal(WHITEBALANCE);
    }

    /**
     * Sets <code>value</code> as attribute value for WHITE_BALANCE using the alias name WhiteBalance.
     * @param value value to set the WHITE_BALANCE
     */
    public void setWhiteBalance(String value) {
        setAttributeInternal(WHITEBALANCE, value);
    }

    /**
     * Gets the attribute value for DIGITAL_ZOOM_RATIO using the alias name DigitalZoomRatio.
     * @return the DIGITAL_ZOOM_RATIO
     */
    public String getDigitalZoomRatio() {
        return (String) getAttributeInternal(DIGITALZOOMRATIO);
    }

    /**
     * Sets <code>value</code> as attribute value for DIGITAL_ZOOM_RATIO using the alias name DigitalZoomRatio.
     * @param value value to set the DIGITAL_ZOOM_RATIO
     */
    public void setDigitalZoomRatio(String value) {
        setAttributeInternal(DIGITALZOOMRATIO, value);
    }

    /**
     * Gets the attribute value for SCENE_CAPTURE_TYPE using the alias name SceneCaptureType.
     * @return the SCENE_CAPTURE_TYPE
     */
    public String getSceneCaptureType() {
        return (String) getAttributeInternal(SCENECAPTURETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SCENE_CAPTURE_TYPE using the alias name SceneCaptureType.
     * @param value value to set the SCENE_CAPTURE_TYPE
     */
    public void setSceneCaptureType(String value) {
        setAttributeInternal(SCENECAPTURETYPE, value);
    }

    /**
     * Gets the attribute value for COMPRESSION using the alias name Compression.
     * @return the COMPRESSION
     */
    public String getCompression() {
        return (String) getAttributeInternal(COMPRESSION);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPRESSION using the alias name Compression.
     * @param value value to set the COMPRESSION
     */
    public void setCompression(String value) {
        setAttributeInternal(COMPRESSION, value);
    }

    /**
     * Gets the attribute value for THUMBNAIL_OFFSET using the alias name ThumbnailOffset.
     * @return the THUMBNAIL_OFFSET
     */
    public String getThumbnailOffset() {
        return (String) getAttributeInternal(THUMBNAILOFFSET);
    }

    /**
     * Sets <code>value</code> as attribute value for THUMBNAIL_OFFSET using the alias name ThumbnailOffset.
     * @param value value to set the THUMBNAIL_OFFSET
     */
    public void setThumbnailOffset(String value) {
        setAttributeInternal(THUMBNAILOFFSET, value);
    }

    /**
     * Gets the attribute value for THUMBNAIL_LENGTH using the alias name ThumbnailLength.
     * @return the THUMBNAIL_LENGTH
     */
    public String getThumbnailLength() {
        return (String) getAttributeInternal(THUMBNAILLENGTH);
    }

    /**
     * Sets <code>value</code> as attribute value for THUMBNAIL_LENGTH using the alias name ThumbnailLength.
     * @param value value to set the THUMBNAIL_LENGTH
     */
    public void setThumbnailLength(String value) {
        setAttributeInternal(THUMBNAILLENGTH, value);
    }

    /**
     * Gets the attribute value for THUMBNAIL_DATA using the alias name ThumbnailData.
     * @return the THUMBNAIL_DATA
     */
    public String getThumbnailData() {
        return (String) getAttributeInternal(THUMBNAILDATA);
    }

    /**
     * Sets <code>value</code> as attribute value for THUMBNAIL_DATA using the alias name ThumbnailData.
     * @param value value to set the THUMBNAIL_DATA
     */
    public void setThumbnailData(String value) {
        setAttributeInternal(THUMBNAILDATA, value);
    }

    /**
     * Gets the attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @return the OBJECT_VERSION_NUMBER
     */
    public Number getObjectVersionNumber() {
        return (Number) getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJECT_VERSION_NUMBER using the alias name ObjectVersionNumber.
     * @param value value to set the OBJECT_VERSION_NUMBER
     */
    public void setObjectVersionNumber(Number value) {
        setAttributeInternal(OBJECTVERSIONNUMBER, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @return the ATTRIBUTE6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @return the ATTRIBUTE7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @return the ATTRIBUTE8
     */
    public String getAttribute8() {
        return (String) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8.
     * @param value value to set the ATTRIBUTE8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @return the ATTRIBUTE9
     */
    public String getAttribute9() {
        return (String) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9.
     * @param value value to set the ATTRIBUTE9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @return the ATTRIBUTE10
     */
    public String getAttribute10() {
        return (String) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE10 using the alias name Attribute10.
     * @param value value to set the ATTRIBUTE10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE11 using the alias name Attribute11.
     * @return the ATTRIBUTE11
     */
    public String getAttribute11() {
        return (String) getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE11 using the alias name Attribute11.
     * @param value value to set the ATTRIBUTE11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE12 using the alias name Attribute12.
     * @return the ATTRIBUTE12
     */
    public String getAttribute12() {
        return (String) getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE12 using the alias name Attribute12.
     * @param value value to set the ATTRIBUTE12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE13 using the alias name Attribute13.
     * @return the ATTRIBUTE13
     */
    public String getAttribute13() {
        return (String) getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE13 using the alias name Attribute13.
     * @param value value to set the ATTRIBUTE13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE14 using the alias name Attribute14.
     * @return the ATTRIBUTE14
     */
    public String getAttribute14() {
        return (String) getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE14 using the alias name Attribute14.
     * @param value value to set the ATTRIBUTE14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE15 using the alias name Attribute15.
     * @return the ATTRIBUTE15
     */
    public String getAttribute15() {
        return (String) getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE15 using the alias name Attribute15.
     * @param value value to set the ATTRIBUTE15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
