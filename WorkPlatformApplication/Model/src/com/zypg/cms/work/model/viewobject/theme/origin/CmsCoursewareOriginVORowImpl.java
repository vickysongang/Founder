package com.zypg.cms.work.model.viewobject.theme.origin;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Hashtable;
import java.util.List;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 17 10:28:30 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsCoursewareOriginVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CoursewareId {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getCoursewareId();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setCoursewareId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        TeachingMaterialName {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getTeachingMaterialName();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setTeachingMaterialName((String)value);
            }
        }
        ,
        TeachingMaterialIsbn {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getTeachingMaterialIsbn();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setTeachingMaterialIsbn((String)value);
            }
        }
        ,
        TeachingMaterialAuthor {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getTeachingMaterialAuthor();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setTeachingMaterialAuthor((String)value);
            }
        }
        ,
        TeachingMaterialEditor {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getTeachingMaterialEditor();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setTeachingMaterialEditor((String)value);
            }
        }
        ,
        TeachingMaterialSeriesName {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getTeachingMaterialSeriesName();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setTeachingMaterialSeriesName((String)value);
            }
        }
        ,
        TeachingMaterialType {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getTeachingMaterialType();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setTeachingMaterialType((String)value);
            }
        }
        ,
        CoursewareType {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getCoursewareType();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setCoursewareType((String)value);
            }
        }
        ,
        CoursewareName {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getCoursewareName();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setCoursewareName((String)value);
            }
        }
        ,
        CopyrightFlag {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getCopyrightFlag();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setCopyrightFlag((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        Remarks {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        UploadTime {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getUploadTime();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setUploadTime((Date)value);
            }
        }
        ,
        SourceBookDocId {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getSourceBookDocId();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setSourceBookDocId((Number)value);
            }
        }
        ,
        Status {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        ThumbnailUrl {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getThumbnailUrl();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setThumbnailUrl((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        Checked {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ,
        CompName {
            public Object get(CmsCoursewareOriginVORowImpl obj) {
                return obj.getCompName();
            }

            public void put(CmsCoursewareOriginVORowImpl obj, Object value) {
                obj.setCompName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsCoursewareOriginVORowImpl object);

        public abstract void put(CmsCoursewareOriginVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COURSEWAREID = AttributesEnum.CoursewareId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int TEACHINGMATERIALNAME = AttributesEnum.TeachingMaterialName.index();
    public static final int TEACHINGMATERIALISBN = AttributesEnum.TeachingMaterialIsbn.index();
    public static final int TEACHINGMATERIALAUTHOR = AttributesEnum.TeachingMaterialAuthor.index();
    public static final int TEACHINGMATERIALEDITOR = AttributesEnum.TeachingMaterialEditor.index();
    public static final int TEACHINGMATERIALSERIESNAME = AttributesEnum.TeachingMaterialSeriesName.index();
    public static final int TEACHINGMATERIALTYPE = AttributesEnum.TeachingMaterialType.index();
    public static final int COURSEWARETYPE = AttributesEnum.CoursewareType.index();
    public static final int COURSEWARENAME = AttributesEnum.CoursewareName.index();
    public static final int COPYRIGHTFLAG = AttributesEnum.CopyrightFlag.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int UPLOADTIME = AttributesEnum.UploadTime.index();
    public static final int SOURCEBOOKDOCID = AttributesEnum.SourceBookDocId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int THUMBNAILURL = AttributesEnum.ThumbnailUrl.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();
    public static final int COMPNAME = AttributesEnum.CompName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsCoursewareOriginVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CoursewareId.
     * @return the CoursewareId
     */
    public Number getCoursewareId() {
        return (Number)getAttributeInternal(COURSEWAREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareId.
     * @param value value to set the  CoursewareId
     */
    public void setCoursewareId(Number value) {
        setAttributeInternal(COURSEWAREID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialName.
     * @return the TeachingMaterialName
     */
    public String getTeachingMaterialName() {
        return (String)getAttributeInternal(TEACHINGMATERIALNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialName.
     * @param value value to set the  TeachingMaterialName
     */
    public void setTeachingMaterialName(String value) {
        setAttributeInternal(TEACHINGMATERIALNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialIsbn.
     * @return the TeachingMaterialIsbn
     */
    public String getTeachingMaterialIsbn() {
        return (String)getAttributeInternal(TEACHINGMATERIALISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialIsbn.
     * @param value value to set the  TeachingMaterialIsbn
     */
    public void setTeachingMaterialIsbn(String value) {
        setAttributeInternal(TEACHINGMATERIALISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialAuthor.
     * @return the TeachingMaterialAuthor
     */
    public String getTeachingMaterialAuthor() {
        return (String)getAttributeInternal(TEACHINGMATERIALAUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialAuthor.
     * @param value value to set the  TeachingMaterialAuthor
     */
    public void setTeachingMaterialAuthor(String value) {
        setAttributeInternal(TEACHINGMATERIALAUTHOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialEditor.
     * @return the TeachingMaterialEditor
     */
    public String getTeachingMaterialEditor() {
        return (String)getAttributeInternal(TEACHINGMATERIALEDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialEditor.
     * @param value value to set the  TeachingMaterialEditor
     */
    public void setTeachingMaterialEditor(String value) {
        setAttributeInternal(TEACHINGMATERIALEDITOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialSeriesName.
     * @return the TeachingMaterialSeriesName
     */
    public String getTeachingMaterialSeriesName() {
        return (String)getAttributeInternal(TEACHINGMATERIALSERIESNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialSeriesName.
     * @param value value to set the  TeachingMaterialSeriesName
     */
    public void setTeachingMaterialSeriesName(String value) {
        setAttributeInternal(TEACHINGMATERIALSERIESNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TeachingMaterialType.
     * @return the TeachingMaterialType
     */
    public String getTeachingMaterialType() {
        return (String)getAttributeInternal(TEACHINGMATERIALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TeachingMaterialType.
     * @param value value to set the  TeachingMaterialType
     */
    public void setTeachingMaterialType(String value) {
        setAttributeInternal(TEACHINGMATERIALTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoursewareType.
     * @return the CoursewareType
     */
    public String getCoursewareType() {
        return (String)getAttributeInternal(COURSEWARETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareType.
     * @param value value to set the  CoursewareType
     */
    public void setCoursewareType(String value) {
        setAttributeInternal(COURSEWARETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoursewareName.
     * @return the CoursewareName
     */
    public String getCoursewareName() {
        return (String)getAttributeInternal(COURSEWARENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoursewareName.
     * @param value value to set the  CoursewareName
     */
    public void setCoursewareName(String value) {
        setAttributeInternal(COURSEWARENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CopyrightFlag.
     * @return the CopyrightFlag
     */
    public String getCopyrightFlag() {
        return (String)getAttributeInternal(COPYRIGHTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CopyrightFlag.
     * @param value value to set the  CopyrightFlag
     */
    public void setCopyrightFlag(String value) {
        setAttributeInternal(COPYRIGHTFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String)getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UploadTime.
     * @return the UploadTime
     */
    public Date getUploadTime() {
        return (Date)getAttributeInternal(UPLOADTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UploadTime.
     * @param value value to set the  UploadTime
     */
    public void setUploadTime(Date value) {
        setAttributeInternal(UPLOADTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SourceBookDocId.
     * @return the SourceBookDocId
     */
    public Number getSourceBookDocId() {
        return (Number)getAttributeInternal(SOURCEBOOKDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SourceBookDocId.
     * @param value value to set the  SourceBookDocId
     */
    public void setSourceBookDocId(Number value) {
        setAttributeInternal(SOURCEBOOKDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThumbnailUrl.
     * @return the ThumbnailUrl
     */
    public String getThumbnailUrl() {
        return (String)getAttributeInternal(THUMBNAILURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThumbnailUrl.
     * @param value value to set the  ThumbnailUrl
     */
    public void setThumbnailUrl(String value) {
        setAttributeInternal(THUMBNAILURL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String)getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        Boolean result = null;
        Hashtable map = this.getDBTransaction().getSession().getUserData();
        String prefix = "ORIGIN";
        String selectAllFlag = (String)map.get(prefix + "_selectAllFlag");
        String key = prefix + "_" + this.getDocId();
        List<String> currSelectedList = (List<String>)map.get(prefix + "_currSelected");
        if ("O".equals(selectAllFlag)) {
            if (currSelectedList.contains(key)) {
                result = true;
            } else {
                result = false;
            }
        } else {
            if ("Y".equals(selectAllFlag)) {
                result = true;
            } else if ("N".equals(selectAllFlag)) {
                result = false;
            }
        }
        try {
            this.setChecked(result);
        } catch (Exception e) {
            //            e.printStackTrace();
        }
        return (Boolean)getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompName.
     * @return the CompName
     */
    public String getCompName() {
        return (String) getAttributeInternal(COMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompName.
     * @param value value to set the  CompName
     */
    public void setCompName(String value) {
        setAttributeInternal(COMPNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
