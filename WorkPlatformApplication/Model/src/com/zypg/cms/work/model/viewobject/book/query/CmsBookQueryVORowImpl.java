package com.zypg.cms.work.model.viewobject.book.query;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 29 12:14:34 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsBookQueryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BookId {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getBookId();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setBookId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        BookName {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getBookName();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setBookName((String)value);
            }
        }
        ,
        Isbn {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getIsbn();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setIsbn((String)value);
            }
        }
        ,
        PubTime {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getPubTime();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setPubTime((Date)value);
            }
        }
        ,
        EditionImpression {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getEditionImpression();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setEditionImpression((String)value);
            }
        }
        ,
        Author {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getAuthor();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setAuthor((String)value);
            }
        }
        ,
        Edition {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getEdition();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setEdition((Number)value);
            }
        }
        ,
        Impression {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getImpression();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setImpression((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Status {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        DeleteFlag {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        }
        ,
        ThumbnailUrl {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getThumbnailUrl();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setThumbnailUrl((String)value);
            }
        }
        ,
        Keyword {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        PublishingHouse {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getPublishingHouse();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setPublishingHouse((String)value);
            }
        }
        ,
        ChapterFlag {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getChapterFlag();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setChapterFlag((String)value);
            }
        }
        ,
        SyncFlag {
            public Object get(CmsBookQueryVORowImpl obj) {
                return obj.getSyncFlag();
            }

            public void put(CmsBookQueryVORowImpl obj, Object value) {
                obj.setSyncFlag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsBookQueryVORowImpl object);

        public abstract void put(CmsBookQueryVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int BOOKID = AttributesEnum.BookId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int BOOKNAME = AttributesEnum.BookName.index();
    public static final int ISBN = AttributesEnum.Isbn.index();
    public static final int PUBTIME = AttributesEnum.PubTime.index();
    public static final int EDITIONIMPRESSION = AttributesEnum.EditionImpression.index();
    public static final int AUTHOR = AttributesEnum.Author.index();
    public static final int EDITION = AttributesEnum.Edition.index();
    public static final int IMPRESSION = AttributesEnum.Impression.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int THUMBNAILURL = AttributesEnum.ThumbnailUrl.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int PUBLISHINGHOUSE = AttributesEnum.PublishingHouse.index();
    public static final int CHAPTERFLAG = AttributesEnum.ChapterFlag.index();
    public static final int SYNCFLAG = AttributesEnum.SyncFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsBookQueryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute BookId.
     * @return the BookId
     */
    public Number getBookId() {
        return (Number) getAttributeInternal(BOOKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookId.
     * @param value value to set the  BookId
     */
    public void setBookId(Number value) {
        setAttributeInternal(BOOKID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BookName.
     * @return the BookName
     */
    public String getBookName() {
        return (String) getAttributeInternal(BOOKNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookName.
     * @param value value to set the  BookName
     */
    public void setBookName(String value) {
        setAttributeInternal(BOOKNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Isbn.
     * @return the Isbn
     */
    public String getIsbn() {
        return (String) getAttributeInternal(ISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Isbn.
     * @param value value to set the  Isbn
     */
    public void setIsbn(String value) {
        setAttributeInternal(ISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PubTime.
     * @return the PubTime
     */
    public Date getPubTime() {
        return (Date) getAttributeInternal(PUBTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PubTime.
     * @param value value to set the  PubTime
     */
    public void setPubTime(Date value) {
        setAttributeInternal(PUBTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EditionImpression.
     * @return the EditionImpression
     */
    public String getEditionImpression() {
        return (String) getAttributeInternal(EDITIONIMPRESSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EditionImpression.
     * @param value value to set the  EditionImpression
     */
    public void setEditionImpression(String value) {
        setAttributeInternal(EDITIONIMPRESSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Author.
     * @return the Author
     */
    public String getAuthor() {
        return (String) getAttributeInternal(AUTHOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Author.
     * @param value value to set the  Author
     */
    public void setAuthor(String value) {
        setAttributeInternal(AUTHOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Edition.
     * @return the Edition
     */
    public Number getEdition() {
        return (Number) getAttributeInternal(EDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Edition.
     * @param value value to set the  Edition
     */
    public void setEdition(Number value) {
        setAttributeInternal(EDITION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Impression.
     * @return the Impression
     */
    public Number getImpression() {
        return (Number) getAttributeInternal(IMPRESSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Impression.
     * @param value value to set the  Impression
     */
    public void setImpression(Number value) {
        setAttributeInternal(IMPRESSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThumbnailUrl.
     * @return the ThumbnailUrl
     */
    public String getThumbnailUrl() {
        return (String) getAttributeInternal(THUMBNAILURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThumbnailUrl.
     * @param value value to set the  ThumbnailUrl
     */
    public void setThumbnailUrl(String value) {
        setAttributeInternal(THUMBNAILURL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String) getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String) getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PublishingHouse.
     * @return the PublishingHouse
     */
    public String getPublishingHouse() {
        return (String) getAttributeInternal(PUBLISHINGHOUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PublishingHouse.
     * @param value value to set the  PublishingHouse
     */
    public void setPublishingHouse(String value) {
        setAttributeInternal(PUBLISHINGHOUSE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChapterFlag.
     * @return the ChapterFlag
     */
    public String getChapterFlag() {
        return (String) getAttributeInternal(CHAPTERFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChapterFlag.
     * @param value value to set the  ChapterFlag
     */
    public void setChapterFlag(String value) {
        setAttributeInternal(CHAPTERFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SyncFlag.
     * @return the SyncFlag
     */
    public String getSyncFlag() {
        return (String) getAttributeInternal(SYNCFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SyncFlag.
     * @param value value to set the  SyncFlag
     */
    public void setSyncFlag(String value) {
        setAttributeInternal(SYNCFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
