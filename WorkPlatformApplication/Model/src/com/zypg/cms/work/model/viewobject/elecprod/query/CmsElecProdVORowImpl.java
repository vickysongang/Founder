package com.zypg.cms.work.model.viewobject.elecprod.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 14 14:34:24 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsElecProdVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ElecProdId {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getElecProdId();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setElecProdId((Number)value);
            }
        },
        DocId {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        },
        ElecProdName {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getElecProdName();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setElecProdName((String)value);
            }
        },
        Isbn {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getIsbn();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setIsbn((String)value);
            }
        },
        LastUpdateDate {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        },
        TimeLength {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getTimeLength();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setTimeLength((String)value);
            }
        },
        PubTime {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getPubTime();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setPubTime((Date)value);
            }
        },
        AssortBook {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getAssortBook();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setAssortBook((String)value);
            }
        },
        Status {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        },
        LibCode {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        },
        Checked {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        },
        CategoryId {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setCategoryId((Number)value);
            }
        },
        CategoryGroupType {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getCategoryGroupType();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setCategoryGroupType((String)value);
            }
        },
        DeleteFlag {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getDeleteFlag();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setDeleteFlag((String)value);
            }
        },
        ThumbnailUrl {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getThumbnailUrl();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setThumbnailUrl((String)value);
            }
        },
        Keyword {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getKeyword();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setKeyword((String)value);
            }
        },
        ItemCode {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getItemCode();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setItemCode((String)value);
            }
        },
        CompCode {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        },
        SyncFlag {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getSyncFlag();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setSyncFlag((String)value);
            }
        },
        PublishingHouse {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getPublishingHouse();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setPublishingHouse((String)value);
            }
        },
        Lang {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getLang();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setLang((String)value);
            }
        },
        CarrierType {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getCarrierType();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setCarrierType((String)value);
            }
        },
        Amount {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getAmount();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setAmount((Number)value);
            }
        },
        DiskDesign {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getDiskDesign();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setDiskDesign((String)value);
            }
        },
        Editor {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getEditor();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setEditor((String)value);
            }
        },
        TextEditor {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getTextEditor();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setTextEditor((String)value);
            }
        },
        Producer {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getProducer();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setProducer((String)value);
            }
        },
        ContentDesc {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getContentDesc();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setContentDesc((String)value);
            }
        },
        Remarks {
            public Object get(CmsElecProdVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CmsElecProdVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsElecProdVORowImpl object);

        public abstract void put(CmsElecProdVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ELECPRODID = AttributesEnum.ElecProdId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ELECPRODNAME = AttributesEnum.ElecProdName.index();
    public static final int ISBN = AttributesEnum.Isbn.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int TIMELENGTH = AttributesEnum.TimeLength.index();
    public static final int PUBTIME = AttributesEnum.PubTime.index();
    public static final int ASSORTBOOK = AttributesEnum.AssortBook.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int CATEGORYGROUPTYPE = AttributesEnum.CategoryGroupType.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int THUMBNAILURL = AttributesEnum.ThumbnailUrl.index();
    public static final int KEYWORD = AttributesEnum.Keyword.index();
    public static final int ITEMCODE = AttributesEnum.ItemCode.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int SYNCFLAG = AttributesEnum.SyncFlag.index();
    public static final int PUBLISHINGHOUSE = AttributesEnum.PublishingHouse.index();
    public static final int LANG = AttributesEnum.Lang.index();
    public static final int CARRIERTYPE = AttributesEnum.CarrierType.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int DISKDESIGN = AttributesEnum.DiskDesign.index();
    public static final int EDITOR = AttributesEnum.Editor.index();
    public static final int TEXTEDITOR = AttributesEnum.TextEditor.index();
    public static final int PRODUCER = AttributesEnum.Producer.index();
    public static final int CONTENTDESC = AttributesEnum.ContentDesc.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsElecProdVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute ElecProdId.
     * @return the ElecProdId
     */
    public Number getElecProdId() {
        return (Number)getAttributeInternal(ELECPRODID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ElecProdId.
     * @param value value to set the  ElecProdId
     */
    public void setElecProdId(Number value) {
        setAttributeInternal(ELECPRODID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ElecProdName.
     * @return the ElecProdName
     */
    public String getElecProdName() {
        return (String)getAttributeInternal(ELECPRODNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ElecProdName.
     * @param value value to set the  ElecProdName
     */
    public void setElecProdName(String value) {
        setAttributeInternal(ELECPRODNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Isbn.
     * @return the Isbn
     */
    public String getIsbn() {
        return (String)getAttributeInternal(ISBN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Isbn.
     * @param value value to set the  Isbn
     */
    public void setIsbn(String value) {
        setAttributeInternal(ISBN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TimeLength.
     * @return the TimeLength
     */
    public String getTimeLength() {
        return (String)getAttributeInternal(TIMELENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TimeLength.
     * @param value value to set the  TimeLength
     */
    public void setTimeLength(String value) {
        setAttributeInternal(TIMELENGTH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PubTime.
     * @return the PubTime
     */
    public Date getPubTime() {
        return (Date)getAttributeInternal(PUBTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PubTime.
     * @param value value to set the  PubTime
     */
    public void setPubTime(Date value) {
        setAttributeInternal(PUBTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AssortBook.
     * @return the AssortBook
     */
    public String getAssortBook() {
        return (String)getAttributeInternal(ASSORTBOOK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AssortBook.
     * @param value value to set the  AssortBook
     */
    public void setAssortBook(String value) {
        setAttributeInternal(ASSORTBOOK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String)getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        Boolean result = null;
        Hashtable map = this.getDBTransaction().getSession().getUserData();
        String status = null;
        if ("Y".equals(this.getDeleteFlag())) {
            status = "DELETED_" + this.getLibCode();
        } else {
            status = this.getStatus();
        }
        String selectAllFlag = (String)map.get(status + "_selectAllFlag");
        String key = status + "_" + this.getDocId();
        List<String> currSelectedList = (List<String>)map.get(status + "_currSelected");
        if ("O".equals(selectAllFlag)) {
            if (currSelectedList.contains(key)) {
                result = true;
            } else {
                result = false;
            }
        } else {
            if ("Y".equals(selectAllFlag)) {
                result = true;
            } else if ("N".equals(selectAllFlag)) {
                result = false;
            }
        }
        this.setChecked(result);
        return (Boolean)getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryId.
     * @return the CategoryId
     */
    public Number getCategoryId() {
        return (Number)getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryId.
     * @param value value to set the  CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryGroupType.
     * @return the CategoryGroupType
     */
    public String getCategoryGroupType() {
        return (String)getAttributeInternal(CATEGORYGROUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryGroupType.
     * @param value value to set the  CategoryGroupType
     */
    public void setCategoryGroupType(String value) {
        setAttributeInternal(CATEGORYGROUPTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeleteFlag.
     * @return the DeleteFlag
     */
    public String getDeleteFlag() {
        return (String)getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeleteFlag.
     * @param value value to set the  DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ThumbnailUrl.
     * @return the ThumbnailUrl
     */
    public String getThumbnailUrl() {
        return (String)getAttributeInternal(THUMBNAILURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ThumbnailUrl.
     * @param value value to set the  ThumbnailUrl
     */
    public void setThumbnailUrl(String value) {
        setAttributeInternal(THUMBNAILURL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Keyword.
     * @return the Keyword
     */
    public String getKeyword() {
        return (String)getAttributeInternal(KEYWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Keyword.
     * @param value value to set the  Keyword
     */
    public void setKeyword(String value) {
        setAttributeInternal(KEYWORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemCode.
     * @return the ItemCode
     */
    public String getItemCode() {
        return (String)getAttributeInternal(ITEMCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemCode.
     * @param value value to set the  ItemCode
     */
    public void setItemCode(String value) {
        setAttributeInternal(ITEMCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String)getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SyncFlag.
     * @return the SyncFlag
     */
    public String getSyncFlag() {
        return (String)getAttributeInternal(SYNCFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SyncFlag.
     * @param value value to set the  SyncFlag
     */
    public void setSyncFlag(String value) {
        setAttributeInternal(SYNCFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PublishingHouse.
     * @return the PublishingHouse
     */
    public String getPublishingHouse() {
        return (String)getAttributeInternal(PUBLISHINGHOUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PublishingHouse.
     * @param value value to set the  PublishingHouse
     */
    public void setPublishingHouse(String value) {
        setAttributeInternal(PUBLISHINGHOUSE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Lang.
     * @return the Lang
     */
    public String getLang() {
        return (String)getAttributeInternal(LANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Lang.
     * @param value value to set the  Lang
     */
    public void setLang(String value) {
        setAttributeInternal(LANG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CarrierType.
     * @return the CarrierType
     */
    public String getCarrierType() {
        return (String)getAttributeInternal(CARRIERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CarrierType.
     * @param value value to set the  CarrierType
     */
    public void setCarrierType(String value) {
        setAttributeInternal(CARRIERTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Amount.
     * @return the Amount
     */
    public Number getAmount() {
        return (Number)getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Amount.
     * @param value value to set the  Amount
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiskDesign.
     * @return the DiskDesign
     */
    public String getDiskDesign() {
        return (String)getAttributeInternal(DISKDESIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiskDesign.
     * @param value value to set the  DiskDesign
     */
    public void setDiskDesign(String value) {
        setAttributeInternal(DISKDESIGN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Editor.
     * @return the Editor
     */
    public String getEditor() {
        return (String)getAttributeInternal(EDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Editor.
     * @param value value to set the  Editor
     */
    public void setEditor(String value) {
        setAttributeInternal(EDITOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TextEditor.
     * @return the TextEditor
     */
    public String getTextEditor() {
        return (String)getAttributeInternal(TEXTEDITOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TextEditor.
     * @param value value to set the  TextEditor
     */
    public void setTextEditor(String value) {
        setAttributeInternal(TEXTEDITOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Producer.
     * @return the Producer
     */
    public String getProducer() {
        return (String)getAttributeInternal(PRODUCER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Producer.
     * @param value value to set the  Producer
     */
    public void setProducer(String value) {
        setAttributeInternal(PRODUCER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContentDesc.
     * @return the ContentDesc
     */
    public String getContentDesc() {
        return (String)getAttributeInternal(CONTENTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContentDesc.
     * @param value value to set the  ContentDesc
     */
    public void setContentDesc(String value) {
        setAttributeInternal(CONTENTDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
