package com.zypg.cms.work.model.viewobject.offline.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 16 14:12:52 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsOfflineEntryProcessTaskVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TaskId {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getTaskId();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setTaskId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        TaskName {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getTaskName();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setTaskName((String)value);
            }
        }
        ,
        TaskSponsor {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getTaskSponsor();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setTaskSponsor((String)value);
            }
        }
        ,
        TaskSponsorName {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getTaskSponsorName();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setTaskSponsorName((String)value);
            }
        }
        ,
        CurrOperator {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getCurrOperator();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setCurrOperator((String)value);
            }
        }
        ,
        CurrOperatorName {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getCurrOperatorName();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setCurrOperatorName((String)value);
            }
        }
        ,
        Status {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        StatusName {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getStatusName();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setStatusName((String)value);
            }
        }
        ,
        Description {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LibCode {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getLibCode();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setLibCode((String)value);
            }
        }
        ,
        CompCode {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getCompCode();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setCompCode((String)value);
            }
        }
        ,
        Checked {
            public Object get(CmsOfflineEntryProcessTaskVORowImpl obj) {
                return obj.getChecked();
            }

            public void put(CmsOfflineEntryProcessTaskVORowImpl obj, Object value) {
                obj.setChecked((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsOfflineEntryProcessTaskVORowImpl object);

        public abstract void put(CmsOfflineEntryProcessTaskVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TASKID = AttributesEnum.TaskId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int TASKNAME = AttributesEnum.TaskName.index();
    public static final int TASKSPONSOR = AttributesEnum.TaskSponsor.index();
    public static final int TASKSPONSORNAME = AttributesEnum.TaskSponsorName.index();
    public static final int CURROPERATOR = AttributesEnum.CurrOperator.index();
    public static final int CURROPERATORNAME = AttributesEnum.CurrOperatorName.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int STATUSNAME = AttributesEnum.StatusName.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LIBCODE = AttributesEnum.LibCode.index();
    public static final int COMPCODE = AttributesEnum.CompCode.index();
    public static final int CHECKED = AttributesEnum.Checked.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsOfflineEntryProcessTaskVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TaskId.
     * @return the TaskId
     */
    public Number getTaskId() {
        return (Number)getAttributeInternal(TASKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaskId.
     * @param value value to set the  TaskId
     */
    public void setTaskId(Number value) {
        setAttributeInternal(TASKID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaskName.
     * @return the TaskName
     */
    public String getTaskName() {
        return (String)getAttributeInternal(TASKNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaskName.
     * @param value value to set the  TaskName
     */
    public void setTaskName(String value) {
        setAttributeInternal(TASKNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaskSponsor.
     * @return the TaskSponsor
     */
    public String getTaskSponsor() {
        return (String)getAttributeInternal(TASKSPONSOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaskSponsor.
     * @param value value to set the  TaskSponsor
     */
    public void setTaskSponsor(String value) {
        setAttributeInternal(TASKSPONSOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaskSponsorName.
     * @return the TaskSponsorName
     */
    public String getTaskSponsorName() {
        return (String) getAttributeInternal(TASKSPONSORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaskSponsorName.
     * @param value value to set the  TaskSponsorName
     */
    public void setTaskSponsorName(String value) {
        setAttributeInternal(TASKSPONSORNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrOperator.
     * @return the CurrOperator
     */
    public String getCurrOperator() {
        return (String)getAttributeInternal(CURROPERATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrOperator.
     * @param value value to set the  CurrOperator
     */
    public void setCurrOperator(String value) {
        setAttributeInternal(CURROPERATOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrOperatorName.
     * @return the CurrOperatorName
     */
    public String getCurrOperatorName() {
        return (String) getAttributeInternal(CURROPERATORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrOperatorName.
     * @param value value to set the  CurrOperatorName
     */
    public void setCurrOperatorName(String value) {
        setAttributeInternal(CURROPERATORNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatusName.
     * @return the StatusName
     */
    public String getStatusName() {
        return (String) getAttributeInternal(STATUSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatusName.
     * @param value value to set the  StatusName
     */
    public void setStatusName(String value) {
        setAttributeInternal(STATUSNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedBy.
     * @param value value to set the  CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate.
     * @param value value to set the  CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastUpdateDate.
     * @param value value to set the  LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute LibCode.
     * @return the LibCode
     */
    public String getLibCode() {
        return (String) getAttributeInternal(LIBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LibCode.
     * @param value value to set the  LibCode
     */
    public void setLibCode(String value) {
        setAttributeInternal(LIBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompCode.
     * @return the CompCode
     */
    public String getCompCode() {
        return (String)getAttributeInternal(COMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompCode.
     * @param value value to set the  CompCode
     */
    public void setCompCode(String value) {
        setAttributeInternal(COMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Checked.
     * @return the Checked
     */
    public Boolean getChecked() {
        Boolean result = null;
        Hashtable map = this.getDBTransaction().getSession().getUserData();
        String selectAllFlag = (String)map.get(this.getStatus() + "_selectAllFlag");
        String key = this.getStatus() + "_" + this.getDocId();
        List<String> currSelectedList = (List<String>)map.get(this.getStatus() + "_currSelected");
        if (currSelectedList == null) {
            currSelectedList = new ArrayList<String>();
        }
        if ("O".equals(selectAllFlag)) {
            if (currSelectedList.contains(key)) {
                result = true;
            } else {
                result = false;
            }
        } else {
            if ("Y".equals(selectAllFlag)) {
                result = true;
            } else if ("N".equals(selectAllFlag)) {
                result = false;
            }
        }
        this.setChecked(result);
        return (Boolean)getAttributeInternal(CHECKED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Checked.
     * @param value value to set the  Checked
     */
    public void setChecked(Boolean value) {
        setAttributeInternal(CHECKED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
