package com.zypg.cms.work.model.viewobject.log.query;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 29 17:44:57 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsRollbackLogVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LogId {
            public Object get(CmsRollbackLogVORowImpl obj) {
                return obj.getLogId();
            }

            public void put(CmsRollbackLogVORowImpl obj, Object value) {
                obj.setLogId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsRollbackLogVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsRollbackLogVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        RollbackOperator {
            public Object get(CmsRollbackLogVORowImpl obj) {
                return obj.getRollbackOperator();
            }

            public void put(CmsRollbackLogVORowImpl obj, Object value) {
                obj.setRollbackOperator((String)value);
            }
        }
        ,
        RollbackOperatorName {
            public Object get(CmsRollbackLogVORowImpl obj) {
                return obj.getRollbackOperatorName();
            }

            public void put(CmsRollbackLogVORowImpl obj, Object value) {
                obj.setRollbackOperatorName((String)value);
            }
        }
        ,
        OperationTime {
            public Object get(CmsRollbackLogVORowImpl obj) {
                return obj.getOperationTime();
            }

            public void put(CmsRollbackLogVORowImpl obj, Object value) {
                obj.setOperationTime((Date)value);
            }
        }
        ,
        RollbackReason {
            public Object get(CmsRollbackLogVORowImpl obj) {
                return obj.getRollbackReason();
            }

            public void put(CmsRollbackLogVORowImpl obj, Object value) {
                obj.setRollbackReason((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsRollbackLogVORowImpl object);

        public abstract void put(CmsRollbackLogVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LOGID = AttributesEnum.LogId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ROLLBACKOPERATOR = AttributesEnum.RollbackOperator.index();
    public static final int ROLLBACKOPERATORNAME = AttributesEnum.RollbackOperatorName.index();
    public static final int OPERATIONTIME = AttributesEnum.OperationTime.index();
    public static final int ROLLBACKREASON = AttributesEnum.RollbackReason.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsRollbackLogVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute LogId.
     * @return the LogId
     */
    public Number getLogId() {
        return (Number) getAttributeInternal(LOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LogId.
     * @param value value to set the  LogId
     */
    public void setLogId(Number value) {
        setAttributeInternal(LOGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute RollbackOperator.
     * @return the RollbackOperator
     */
    public String getRollbackOperator() {
        return (String) getAttributeInternal(ROLLBACKOPERATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RollbackOperator.
     * @param value value to set the  RollbackOperator
     */
    public void setRollbackOperator(String value) {
        setAttributeInternal(ROLLBACKOPERATOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RollbackOperatorName.
     * @return the RollbackOperatorName
     */
    public String getRollbackOperatorName() {
        return (String) getAttributeInternal(ROLLBACKOPERATORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RollbackOperatorName.
     * @param value value to set the  RollbackOperatorName
     */
    public void setRollbackOperatorName(String value) {
        setAttributeInternal(ROLLBACKOPERATORNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperationTime.
     * @return the OperationTime
     */
    public Date getOperationTime() {
        return (Date) getAttributeInternal(OPERATIONTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperationTime.
     * @param value value to set the  OperationTime
     */
    public void setOperationTime(Date value) {
        setAttributeInternal(OPERATIONTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RollbackReason.
     * @return the RollbackReason
     */
    public String getRollbackReason() {
        return (String) getAttributeInternal(ROLLBACKREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RollbackReason.
     * @param value value to set the  RollbackReason
     */
    public void setRollbackReason(String value) {
        setAttributeInternal(ROLLBACKREASON, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
