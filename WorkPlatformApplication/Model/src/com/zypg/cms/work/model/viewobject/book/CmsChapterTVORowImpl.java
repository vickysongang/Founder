package com.zypg.cms.work.model.viewobject.book;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 19 14:45:34 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CmsChapterTVORowImpl extends ViewRowImpl {
    public static final int ENTITY_CMSCHAPTERTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Seq {
            public Object get(CmsChapterTVORowImpl obj) {
                return obj.getSeq();
            }

            public void put(CmsChapterTVORowImpl obj, Object value) {
                obj.setSeq((Number)value);
            }
        }
        ,
        DocId {
            public Object get(CmsChapterTVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(CmsChapterTVORowImpl obj, Object value) {
                obj.setDocId((Number)value);
            }
        }
        ,
        ChapterName {
            public Object get(CmsChapterTVORowImpl obj) {
                return obj.getChapterName();
            }

            public void put(CmsChapterTVORowImpl obj, Object value) {
                obj.setChapterName((String)value);
            }
        }
        ,
        ChapterId {
            public Object get(CmsChapterTVORowImpl obj) {
                return obj.getChapterId();
            }

            public void put(CmsChapterTVORowImpl obj, Object value) {
                obj.setChapterId((Number)value);
            }
        }
        ,
        ChapterCode {
            public Object get(CmsChapterTVORowImpl obj) {
                return obj.getChapterCode();
            }

            public void put(CmsChapterTVORowImpl obj, Object value) {
                obj.setChapterCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CmsChapterTVORowImpl object);

        public abstract void put(CmsChapterTVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SEQ = AttributesEnum.Seq.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int CHAPTERNAME = AttributesEnum.ChapterName.index();
    public static final int CHAPTERID = AttributesEnum.ChapterId.index();
    public static final int CHAPTERCODE = AttributesEnum.ChapterCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CmsChapterTVORowImpl() {
    }

    /**
     * Gets CmsChapterTEO entity object.
     * @return the CmsChapterTEO
     */
    public EntityImpl getCmsChapterTEO() {
        return (EntityImpl)getEntity(ENTITY_CMSCHAPTERTEO);
    }

    /**
     * Gets the attribute value for SEQ using the alias name Seq.
     * @return the SEQ
     */
    public Number getSeq() {
        return (Number) getAttributeInternal(SEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for SEQ using the alias name Seq.
     * @param value value to set the SEQ
     */
    public void setSeq(Number value) {
        setAttributeInternal(SEQ, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for CHAPTER_NAME using the alias name ChapterName.
     * @return the CHAPTER_NAME
     */
    public String getChapterName() {
        return (String) getAttributeInternal(CHAPTERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for CHAPTER_NAME using the alias name ChapterName.
     * @param value value to set the CHAPTER_NAME
     */
    public void setChapterName(String value) {
        setAttributeInternal(CHAPTERNAME, value);
    }

    /**
     * Gets the attribute value for CHAPTER_ID using the alias name ChapterId.
     * @return the CHAPTER_ID
     */
    public Number getChapterId() {
        return (Number) getAttributeInternal(CHAPTERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CHAPTER_ID using the alias name ChapterId.
     * @param value value to set the CHAPTER_ID
     */
    public void setChapterId(Number value) {
        setAttributeInternal(CHAPTERID, value);
    }

    /**
     * Gets the attribute value for CHAPTER_CODE using the alias name ChapterCode.
     * @return the CHAPTER_CODE
     */
    public String getChapterCode() {
        return (String) getAttributeInternal(CHAPTERCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CHAPTER_CODE using the alias name ChapterCode.
     * @param value value to set the CHAPTER_CODE
     */
    public void setChapterCode(String value) {
        setAttributeInternal(CHAPTERCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
